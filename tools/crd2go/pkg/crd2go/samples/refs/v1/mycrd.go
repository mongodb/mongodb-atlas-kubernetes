// Code generated by crd2go. DO NOT EDIT.

package v1

import (
	k8s "github.com/mongodb/mongodb-atlas-kubernetes/tools/crd2go/k8s"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

func init() {
	SchemeBuilder.Register(&MyCRD{})
	SchemeBuilder.Register(&MyCRDList{})
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

type MyCRD struct {
	metav1.TypeMeta `json:",inline"`

	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec MyCRDSpec `json:"spec,omitempty"`

	Status MyCRDStatus `json:"status,omitempty"`
}

type MyCRDSpec struct {
	LocalRef *k8s.LocalReference `json:"localRef,omitempty"`

	Ref *k8s.Reference `json:"ref,omitempty"`

	Title *string `json:"title,omitempty"`
}

type MyCRDStatus struct {
	Conditions *[]Conditions `json:"conditions,omitempty"`

	Id *string `json:"id,omitempty"`
}

type Conditions struct {
	LastTransitionTime *metav1.Time `json:"lastTransitionTime,omitempty"`

	Message *string `json:"message,omitempty"`

	Reason *string `json:"reason,omitempty"`

	Status *string `json:"status,omitempty"`

	Type *string `json:"type,omitempty"`
}

// +kubebuilder:object:root=true
type MyCRDList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []MyCRD `json:"items"`
}
