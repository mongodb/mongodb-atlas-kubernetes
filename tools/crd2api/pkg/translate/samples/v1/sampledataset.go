// Code generated by crd2go. DO NOT EDIT.

package v1

import (
	"github.com/josvazg/akotranslate/pkg/k8s"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

func init() {
	SchemeBuilder.Register(&SampleDataset{})
	SchemeBuilder.Register(&SampleDatasetList{})
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

type SampleDataset struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   SampleDatasetSpec   `json:"spec,omitempty"`
	Status SampleDatasetStatus `json:"status,omitempty"`
}

type SampleDatasetSpec struct {
	// V20250312 The spec of the sampledataset resource for version v20250312.
	V20250312 *SampleDatasetSpecV20250312 `json:"v20250312,omitempty"`
}

type SampleDatasetSpecV20250312 struct {
	/*
	   GroupId Unique 24-hexadecimal digit string that identifies your project. Use the [/groups](#tag/Projects/operation/listProjects) endpoint to retrieve all projects to which the authenticated user has access.

	   **NOTE**: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.
	*/
	GroupId *string `json:"groupId,omitempty"`

	/*
	   GroupRef A reference to a "Group" resource.
	   The value of "$.status.v20250312.id" will be used to set "groupId".
	   Mutually exclusive with the "groupId" property.
	*/
	GroupRef *k8s.LocalReference `json:"groupRef,omitempty"`

	// Name Human-readable label that identifies the cluster into which you load the
	// sample dataset.
	Name string `json:"name"`
}

type SampleDatasetStatus struct {
	// Conditions Represents the latest available observations of a resource's current
	// state.
	Conditions *[]metav1.Condition `json:"conditions,omitempty"`

	// V20250312 The last observed Atlas state of the sampledataset resource for
	// version v20250312.
	V20250312 *SampleDatasetStatusV20250312 `json:"v20250312,omitempty"`
}

type SampleDatasetStatusV20250312 struct {
	// ClusterName Human-readable label that identifies the cluster into which you
	// loaded the sample dataset.
	ClusterName *string `json:"clusterName,omitempty"`

	// CompleteDate Date and time when the sample dataset load job completed. MongoDB
	// Cloud represents this timestamp in ISO 8601 format in UTC.
	CompleteDate *string `json:"completeDate,omitempty"`

	// CreateDate Date and time when you started the sample dataset load job. MongoDB
	// Cloud represents this timestamp in ISO 8601 format in UTC.
	CreateDate *string `json:"createDate,omitempty"`

	// ErrorMessage Details of the error returned when MongoDB Cloud loads the sample
	// dataset. This endpoint returns null if state has a value other than FAILED.
	ErrorMessage *string `json:"errorMessage,omitempty"`

	// Id Unique 24-hexadecimal character string that identifies this sample dataset.
	Id *string `json:"_id,omitempty"`

	// State Status of the sample dataset load job.
	State *string `json:"state,omitempty"`
}

// +kubebuilder:object:root=true
type SampleDatasetList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SampleDataset `json:"items"`
}
