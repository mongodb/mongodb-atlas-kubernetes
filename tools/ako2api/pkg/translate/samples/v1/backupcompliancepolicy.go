// Code generated by crd2go. DO NOT EDIT.

package v1

import (
	"github.com/mongodb/mongodb-atlas-kubernetes/tools/ako2api/pkg/k8s"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

func init() {
	SchemeBuilder.Register(&BackupCompliancePolicy{})
	SchemeBuilder.Register(&BackupCompliancePolicyList{})
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

type BackupCompliancePolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   BackupCompliancePolicySpec   `json:"spec,omitempty"`
	Status BackupCompliancePolicyStatus `json:"status,omitempty"`
}

type BackupCompliancePolicySpec struct {
	// V20250312 The spec of the backupcompliancepolicy resource for version v20250312.
	V20250312 *BackupCompliancePolicySpecV20250312 `json:"v20250312,omitempty"`
}

type BackupCompliancePolicySpecV20250312 struct {
	// Entry The entry fields of the backupcompliancepolicy resource spec. These fields
	// can be set for creating and updating backupcompliancepolicies.
	Entry *BackupCompliancePolicySpecV20250312Entry `json:"entry,omitempty"`

	/*
	   GroupId Unique 24-hexadecimal digit string that identifies your project. Use the [/groups](#tag/Projects/operation/listProjects) endpoint to retrieve all projects to which the authenticated user has access.

	   **NOTE**: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.
	*/
	GroupId *string `json:"groupId,omitempty"`

	/*
	   GroupRef A reference to a "Group" resource.
	   The value of "$.status.v20250312.id" will be used to set "groupId".
	   Mutually exclusive with the "groupId" property.
	*/
	GroupRef *k8s.LocalReference `json:"groupRef,omitempty"`

	// OverwriteBackupPolicies Flag that indicates whether to overwrite non complying
	// backup policies with the new data protection settings or not.
	OverwriteBackupPolicies bool `json:"overwriteBackupPolicies"`
}

type BackupCompliancePolicySpecV20250312Entry struct {
	// AuthorizedEmail Email address of the user who authorized to update the Backup
	// Compliance Policy settings.
	AuthorizedEmail string `json:"authorizedEmail"`

	// AuthorizedUserFirstName First name of the user who authorized to updated the
	// Backup Compliance Policy settings.
	AuthorizedUserFirstName string `json:"authorizedUserFirstName"`

	// AuthorizedUserLastName Last name of the user who authorized to updated the
	// Backup Compliance Policy settings.
	AuthorizedUserLastName string `json:"authorizedUserLastName"`

	// CopyProtectionEnabled Flag that indicates whether to prevent cluster users from
	// deleting backups copied to other regions, even if those additional snapshot
	// regions are removed. If unspecified, this value defaults to false.
	CopyProtectionEnabled *bool `json:"copyProtectionEnabled,omitempty"`

	// EncryptionAtRestEnabled Flag that indicates whether Encryption at Rest using
	// Customer Key Management is required for all clusters with a Backup Compliance
	// Policy. If unspecified, this value defaults to false.
	EncryptionAtRestEnabled *bool `json:"encryptionAtRestEnabled,omitempty"`

	// OnDemandPolicyItem Specifications for on-demand policy.
	OnDemandPolicyItem *OnDemandPolicyItem `json:"onDemandPolicyItem,omitempty"`

	// PitEnabled Flag that indicates whether the cluster uses Continuous Cloud Backups
	// with a Backup Compliance Policy. If unspecified, this value defaults to false.
	PitEnabled *bool `json:"pitEnabled,omitempty"`

	// ProjectId Unique 24-hexadecimal digit string that identifies the project for the
	// Backup Compliance Policy.
	ProjectId *string `json:"projectId,omitempty"`

	// RestoreWindowDays Number of previous days that you can restore back to with
	// Continuous Cloud Backup with a Backup Compliance Policy. You must specify a
	// positive, non-zero integer, and the maximum retention window can't exceed the
	// hourly retention time. This parameter applies only to Continuous Cloud Backups
	// with a Backup Compliance Policy.
	RestoreWindowDays *int `json:"restoreWindowDays,omitempty"`

	// ScheduledPolicyItems List that contains the specifications for one scheduled
	// policy.
	ScheduledPolicyItems *[]OnDemandPolicyItem `json:"scheduledPolicyItems,omitempty"`
}

type OnDemandPolicyItem struct {
	// FrequencyInterval Number that indicates the frequency interval for a set of
	// snapshots. MongoDB Cloud ignores this setting for non-hourly policy items in
	// Backup Compliance Policy settings.
	FrequencyInterval int `json:"frequencyInterval"`

	// FrequencyType Human-readable label that identifies the frequency type associated
	// with the backup policy.
	FrequencyType string `json:"frequencyType"`

	// RetentionUnit Unit of time in which MongoDB Cloud measures snapshot retention.
	RetentionUnit string `json:"retentionUnit"`

	/*
	   RetentionValue Duration in days, weeks, months, or years that MongoDB Cloud retains the snapshot. For less frequent policy items, MongoDB Cloud requires that you specify a value greater than or equal to the value specified for more frequent policy items.

	   For example: If the hourly policy item specifies a retention of two days, you must specify two days or greater for the retention of the weekly policy item.
	*/
	RetentionValue int `json:"retentionValue"`
}

type BackupCompliancePolicyStatus struct {
	// Conditions Represents the latest available observations of a resource's current
	// state.
	Conditions *[]metav1.Condition `json:"conditions,omitempty"`

	// V20250312 The last observed Atlas state of the backupcompliancepolicy resource
	// for version v20250312.
	V20250312 *BackupCompliancePolicyStatusV20250312 `json:"v20250312,omitempty"`
}

type BackupCompliancePolicyStatusV20250312 struct {
	// Deletable Flag that indicates whether the Backup Compliance Policy is allowed to
	// be disabled. It is default to false and a support ticket needs to be filed to
	// request setting to true.
	Deletable *bool `json:"deletable,omitempty"`

	// State Label that indicates the state of the Backup Compliance Policy settings.
	// MongoDB Cloud ignores this setting when you enable or update the Backup
	// Compliance Policy settings.
	State *string `json:"state,omitempty"`

	// UpdatedDate ISO 8601 timestamp format in UTC that indicates when the user
	// updated the Data Protection Policy settings. MongoDB Cloud ignores this setting
	// when you enable or update the Backup Compliance Policy settings.
	UpdatedDate *string `json:"updatedDate,omitempty"`

	// UpdatedUser Email address that identifies the user who updated the Backup
	// Compliance Policy settings. MongoDB Cloud ignores this email setting when you
	// enable or update the Backup Compliance Policy settings.
	UpdatedUser *string `json:"updatedUser,omitempty"`
}

// +kubebuilder:object:root=true
type BackupCompliancePolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []BackupCompliancePolicy `json:"items"`
}
