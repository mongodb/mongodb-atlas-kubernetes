openapi: 3.0.1
info:
  description: >-
    The MongoDB Atlas Administration API allows developers to manage all
    components in MongoDB Atlas.


    The Atlas Administration API uses HTTP Digest Authentication to authenticate requests. Provide a programmatic API public key and corresponding private key as the username and password when constructing the HTTP request. For example, to [return database access history](#tag/Access-Tracking/operation/listAccessLogsByClusterName) with [cURL](https://en.wikipedia.org/wiki/CURL), run the following command in the terminal:


    ```

    curl --user "{PUBLIC-KEY}:{PRIVATE-KEY}" \
      --digest \
      --header "Accept: application/vnd.atlas.2023-11-15+json" \
      -X GET "https://cloud.mongodb.com/api/atlas/v2/groups/{groupId}/dbAccessHistory/clusters/{clusterName}?pretty=true"
    ```


    To learn more, see [Get Started with the Atlas Administration API](https://www.mongodb.com/docs/atlas/configure-api-access/). For support, see [MongoDB Support](https://www.mongodb.com/support/get-started).
  license:
    name: CC BY-NC-SA 3.0 US
    url: https://creativecommons.org/licenses/by-nc-sa/3.0/us/
  termsOfService: https://www.mongodb.com/mongodb-management-service-terms-and-conditions
  title: MongoDB Atlas Administration API
  version: "2.0"
  x-xgen-sha: 52f8d80db35cb5952fbbd214087b24536f32bd6e
servers:
  - url: https://cloud.mongodb.com
tags:
  - description: Returns access logs for authentication attempts made to Atlas
      database deployments. To view database access history, you must have
      either the Project Owner or Organization Owner role.
    name: Access Tracking
  - description: Returns and edits the conditions that trigger alerts and how
      MongoDB Cloud notifies users. This collection remains under revision and
      may change.
    name: Alert Configurations
  - description: Returns and acknowledges alerts that MongoDB Cloud triggers based
      on the alert conditions that you define. This collection remains under
      revision and may change.
    name: Alerts
  - description: Returns, adds, edits, and removes Atlas Search indexes for the
      specified cluster. Also returns and updates user-defined analyzers for the
      specified cluster.
    name: Atlas Search
  - description: Returns and edits database auditing settings for MongoDB Cloud projects.
    name: Auditing
  - description: Returns and edits custom DNS configurations for MongoDB Cloud
      database deployments on AWS. The resource requires your Project ID. If you
      use the VPC peering on AWS and you use your own DNS servers instead of
      Amazon Route 53, enable custom DNS. Before 31 March 2020, applications
      deployed within AWS using custom DNS services and VPC-peered with MongoDB
      Cloud couldn't connect over private IP addresses. Custom DNS resolved to
      public IP addresses. AWS internal DNS resolved to private IP addresses.
      Applications deployed with custom DNS services in AWS should use Private
      IP for Peering connection strings.
    name: AWS Clusters DNS
  - description: Manages Cloud Backup snapshots, snapshot export buckets, restore
      jobs, and schedules. This resource applies only to clusters that use Cloud
      Backups.
    name: Cloud Backups
  - description: Manages the Cloud Migration Service. Source organizations,
      projects, and MongoDB clusters reside on Cloud Manager or Ops Manager.
      Destination organizations, projects, and MongoDB clusters reside on
      MongoDB Cloud. Source databases can't use any authentication except
      SCRAM-SHA.
    name: Cloud Migration Service
  - description: Returns, adds, authorizes, and removes AWS IAM roles in Atlas.
    name: Cloud Provider Access
  - description: Returns, starts, or ends a cluster outage simulation.
    name: Cluster Outage Simulation
  - description: Returns, adds, edits, and removes database deployments. Changes to
      cluster configurations can affect costs. This resource requires your
      Project ID.
    name: Clusters
  - description: Returns, adds, and edits pinned namespaces for the specified
      cluster or process. Also returns collection level latency metric data.
    name: Collection Level Metrics
  - description: Returns, adds, edits, and removes custom database user privilege
      roles. Use custom roles to specify custom sets of actions that the MongoDB
      Cloud built-in roles can't describe. You define custom roles at the
      project level, for all clusters in the project. This resource supports a
      subset of MongoDB privilege actions. You can create a subset of custom
      role actions. To create a wider list of custom role actions, use the
      MongoDB Cloud user interface. Custom roles must include actions that all
      project's clusters support, and that are compatible with each MongoDB
      version that your project's clusters use. For example, if your project has
      MongoDB 4.2 clusters, you can't create custom roles that use actions
      introduced in MongoDB 4.4.
    name: Custom Database Roles
  - description: Returns, adds, edits, and removes Federated Database Instances.
      This resource requires your project ID. Changes to federated database
      instance configurations can affect costs.
    name: Data Federation
  - description: Returns, adds, edits, and removes Atlas Data Lake Pipelines and
      associated runs.
    name: Data Lake Pipelines
  - description: Returns, adds, edits, and removes database users.
    name: Database Users
  - description: Returns and edits the Encryption at Rest using Customer Key
      Management configuration. MongoDB Cloud encrypts all storage whether or
      not you use your own key management.
    name: Encryption at Rest using Customer Key Management
  - description: Returns events. This collection remains under revision and may change.
    name: Events
  - description: Returns, adds, edits, and removes federation-related features such
      as role mappings and connected organization configurations.
    name: Federated Authentication
  - description: >-
      Returns, adds, and removes Global Cluster managed namespaces and custom
      zone mappings. Each collection in a Global Cluster is associated with a
      managed namespace. When you create a managed namespace for a Global
      Cluster, MongoDB Cloud creates an empty collection for that namespace.
      Creating a managed namespace doesn't populate a collection with data.
      Similarly, deleting a managed namespace doesn't delete the associated
      collection.

      MongoDB Cloud shards the empty collection using the required location field and a custom shard key. For example, if your custom shard key is `city`, the compound shard key is `location, city`. Each Global Cluster is also associated with one or more Global Writes Zones. When a user creates a Global Cluster, MongoDB Cloud automatically maps each location code to the closest geographical zone. Custom zone mappings allow administrators to override these automatic mappings. For example, a use case might require mapping a location code to a geographically distant zone. Administrators can manage custom zone mappings with the APIs below and the **Global Cluster Configuration** pane when you create or modify your Global Cluster.
    name: Global Clusters
  - description: Returns invoices.
    name: Invoices
  - description: Returns, edits, verifies, and removes LDAP configurations. An LDAP
      configuration defines settings for MongoDB Cloud to connect to your LDAP
      server over TLS for user authentication and authorization. Your LDAP
      server must be visible to the internet or connected to your MongoDB Cloud
      cluster with VPC Peering. Also, your LDAP server must use TLS. You must
      have the MongoDB Cloud admin user privilege to use these endpoints. Also,
      to configure user authentication and authorization with LDAPS, your
      cluster must run MongoDB 3.6 or higher. Groups for which you have
      configured LDAPS can't create a cluster using a version of MongoDB 3.6 or
      lower.
    name: LDAP Configuration
  - description: Manages Legacy Backup snapshots, restore jobs, schedules and checkpoints.
    name: Legacy Backup
  - description: Returns, edits, and removes maintenance windows. The maintenance
      procedure that MongoDB Cloud performs requires at least one replica set
      election during the maintenance window per replica set. You can defer a
      scheduled maintenance event for a project up to two times. Deferred
      maintenance events occur during your preferred maintenance window exactly
      one week after the previously scheduled date and time.
    name: Maintenance Windows
  - description: Returns, adds, and edits MongoDB Cloud users.
    name: MongoDB Cloud Users
  - description: Returns database deployment monitoring and logging data.
    name: Monitoring and Logs
  - description: >-
      Returns, adds, edits, and removes network peering containers and peering
      connections.

      When you deploy an M10+ dedicated cluster, Atlas creates a VPC for the selected provider and region or regions if no existing VPC or VPC peering connection exists for that provider and region. Atlas assigns the VPC a Classless Inter-Domain Routing (CIDR) block.
    name: Network Peering
  - description: Returns, adds, edits, or removes an online archive.
    name: Online Archive
  - description: Returns, adds, and edits organizational units in MongoDB Cloud.
    name: Organizations
  - description: Returns suggested indexes and slow query data for a database
      deployment. Also enables or disables MongoDB Cloud-managed slow operation
      thresholds. To view field values in a sample query, you must have the
      Project Data Access Read Only role or higher. Otherwise, MongoDB Cloud
      returns redacted data rather than the field values.
    name: Performance Advisor
  - description: Returns, adds, edits, and removes private endpoint services.
    name: Private Endpoint Services
  - description: Returns, adds, edits, and removes access tokens to use the MongoDB
      Cloud API. MongoDB Cloud applies these keys to organizations. These
      resources can return, assign, or revoke use of these keys within a
      specified project.
    name: Programmatic API Keys
  - description: Returns, adds, edits, and removes network access limits to database
      deployments in Atlas. This resource replaces the whitelist resource. Atlas
      removed whitelists in July 2021. Update your applications to use this new
      resource. This resource manages a project's IP Access List and supports
      creating temporary Access List entries that automatically expire within a
      user-configurable 7-day period.
    name: Project IP Access List
  - description: Returns, adds, and edits collections of clusters and users in
      MongoDB Cloud.
    name: Projects
  - description: Creates one index to a database deployment in a rolling manner. You
      can't create a rolling index on an `M0` free cluster or `M2/M5` shared
      cluster.
    name: Rolling Index
  - description: Returns details that describe the MongoDB Cloud build and the
      access token that requests this resource. This starts the MongoDB Cloud
      API.
    name: Root
  - description: Returns, adds, edits, and removes serverless instances.
    name: Serverless Instances
  - description: Returns, adds, edits, and removes private endpoints for serverless
      instances. To learn more, see the Atlas Administration API tab on the
      following tutorial.
    externalDocs:
      description: Set Up a Private Endpoint for a Serverless Instance Tutorial
      url: https://dochub.mongodb.org/core/serverless-private-endpoint
    name: Serverless Private Endpoints
  - description: Returns and adds restore jobs for shared-tier database deployments.
    name: Shared-Tier Restore Jobs
  - description: Returns and requests to download shared-tier database deployment snapshots.
    name: Shared-Tier Snapshots
  - description: Returns, adds, edits, and removes Streams Instances. This resource
      requires your project ID.
    name: Streams
  - description: Returns, adds, edits, or removes teams.
    name: Teams
  - description: >-
      Returns, adds, edits, and removes third-party service integration
      configurations. MongoDB Cloud sends alerts to each third-party service
      that you configure.


      **IMPORTANT**: Each project can only have one configuration per integrationType.
    name: Third-Party Integrations
  - description: Returns, edits, and removes user-managed X.509 configurations. Also
      returns and generates MongoDB Cloud-managed X.509 certificates for
      database users. The following resources help manage database users who
      authenticate using X.509 certificates. You can manage these X.509
      certificates or let MongoDB Cloud do it for you. If MongoDB Cloud manages
      your certificates, it also manages your Certificate Authority and can
      generate certificates for your database users. No additional X.509
      configuration is required. If you manage your certificates, you must
      provide a Certificate Authority and generate certificates for your
      database users.
    externalDocs:
      description: Self-Managed X.509 Certificates
      url: https://www.mongodb.com/docs/atlas/security-self-managed-x509/
    name: X.509 Authentication
paths:
  /api/atlas/v2:
    get:
      description: This resource returns information about the MongoDB application
        along with API key meta data.
      operationId: getSystemStatus
      parameters: []
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/SystemStatus"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          description: Unauthorized.
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return the status of this MongoDB application
      tags:
        - Root
      x-xgen-experimental: true
  /api/atlas/v2/alertConfigs/matchers/fieldNames:
    get:
      description: Get all field names that the `matchers.fieldName` parameter accepts
        when you create or update an Alert Configuration. You can successfully
        call this endpoint with any assigned role.
      operationId: listAlertConfigurationMatchersFieldNames
      parameters: []
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MatcherField"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Get All Alert Configuration Matchers Field Names
      tags:
        - Alert Configurations
  /api/atlas/v2/clusters:
    get:
      description: Returns the details for all clusters in all projects to which you
        have access. Clusters contain a group of hosts that maintain the same
        data set. The response does not include multi-cloud clusters. To use
        this resource, the requesting API Key can have any cluster-level role.
      operationId: listClustersForAllProjects
      parameters:
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedOrgGroup"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Authorized Clusters in All Projects
      tags:
        - Clusters
      x-xgen-experimental: true
  "/api/atlas/v2/federationSettings/{federationSettingsId}":
    delete:
      description: "Deletes the federation settings instance and all associated data,
        including identity providers and domains. To use this resource, the
        requesting API Key must have the Organization Owner role in the last
        remaining connected organization. **Note**: requests to this resource
        will fail if there is more than one connected organization in the
        federation."
      operationId: deleteFederationApp
      parameters:
        - $ref: "#/components/parameters/federationSettingsId"
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              x-xgen-version: 2023-01-01
          description: No Content
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Delete the federation settings instance.
      tags:
        - Federated Authentication
      x-xgen-experimental: true
  "/api/atlas/v2/federationSettings/{federationSettingsId}/connectedOrgConfigs":
    get:
      description: Returns all connected org configs in the specified federation. To
        use this resource, the requesting API Key must have the Organization
        Owner role in one of the connected orgs.
      operationId: listConnectedOrgConfigs
      parameters:
        - $ref: "#/components/parameters/federationSettingsId"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ConnectedOrgConfig"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Connected Org Configs from the Federation
      tags:
        - Federated Authentication
      x-xgen-experimental: true
  "/api/atlas/v2/federationSettings/{federationSettingsId}/connectedOrgConfigs/{orgId}":
    delete:
      description: "Removes one connected organization configuration from the
        specified federation. To use this resource, the requesting API Key must
        have the Organization Owner role. Note: This request fails if only one
        connected organization exists in the federation."
      operationId: removeConnectedOrgConfig
      parameters:
        - $ref: "#/components/parameters/federationSettingsId"
        - description: Unique 24-hexadecimal digit string that identifies the connected
            organization configuration to remove.
          in: path
          name: orgId
          required: true
          schema:
            type: string
            example: 32b6e34b3d91647abb20e7b8
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/NoBody"
              x-xgen-version: 2023-01-01
          description: This endpoint does not return a response body.
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Remove One Org Config Connected to One Federation
      tags:
        - Federated Authentication
      x-xgen-experimental: true
    get:
      description: Returns the specified connected org config from the specified
        federation. To use this resource, the requesting API Key must have the
        Organization Owner role in the connected org.
      operationId: getConnectedOrgConfig
      parameters:
        - $ref: "#/components/parameters/federationSettingsId"
        - description: Unique 24-hexadecimal digit string that identifies the connected
            organization configuration to return.
          in: path
          name: orgId
          required: true
          schema:
            type: string
            example: 32b6e34b3d91647abb20e7b8
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/ConnectedOrgConfig"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Org Config Connected to One Federation
      tags:
        - Federated Authentication
      x-xgen-experimental: true
    patch:
      description: >-
        Updates one connected organization configuration from the specified
        federation. To use this resource, the requesting API Key must have the
        Organization Owner role. 


        **Note** If the organization configuration has no associated identity provider, you can't use this resource to update role mappings or post authorization role grants.  


        **Note**: The domainRestrictionEnabled field defaults to false if not provided in the request. 


        **Note**: If the identityProviderId field is not provided, you will disconnect the organization and the identity provider. 


        **Note**: Currently connected data access identity providers missing from the dataAccessIdentityProviderIds field will be disconnected.
      operationId: updateConnectedOrgConfig
      parameters:
        - $ref: "#/components/parameters/federationSettingsId"
        - description: Unique 24-hexadecimal digit string that identifies the connected
            organization configuration to update.
          in: path
          name: orgId
          required: true
          schema:
            type: string
            example: 32b6e34b3d91647abb20e7b8
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/ConnectedOrgConfig"
        description: The connected organization configuration that you want to update.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/ConnectedOrgConfig"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Update One Org Config Connected to One Federation
      tags:
        - Federated Authentication
      x-xgen-experimental: true
  "/api/atlas/v2/federationSettings/{federationSettingsId}/connectedOrgConfigs/{orgId}/roleMappings":
    get:
      description: Returns all role mappings from the specified organization in the
        specified federation. To use this resource, the requesting API Key must
        have the Organization Owner role.
      operationId: listRoleMappings
      parameters:
        - $ref: "#/components/parameters/federationSettingsId"
        - $ref: "#/components/parameters/orgId"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedRoleMapping"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Role Mappings from One Organization
      tags:
        - Federated Authentication
      x-xgen-experimental: true
    post:
      description: Adds one role mapping to the specified organization in the
        specified federation. To use this resource, the requesting API Key must
        have the Organization Owner role.
      operationId: createRoleMapping
      parameters:
        - $ref: "#/components/parameters/federationSettingsId"
        - $ref: "#/components/parameters/orgId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/AuthFederationRoleMapping"
        description: The role mapping that you want to create.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/AuthFederationRoleMapping"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Add One Role Mapping to One Organization
      tags:
        - Federated Authentication
      x-xgen-experimental: true
  "/api/atlas/v2/federationSettings/{federationSettingsId}/connectedOrgConfigs/{orgId}/roleMappings/{id}":
    delete:
      description: Removes one role mapping in the specified organization from the
        specified federation. To use this resource, the requesting API Key must
        have the Organization Owner role.
      operationId: deleteRoleMapping
      parameters:
        - $ref: "#/components/parameters/federationSettingsId"
        - description: Unique 24-hexadecimal digit string that identifies the role mapping
            that you want to remove.
          in: path
          name: id
          required: true
          schema:
            type: string
            example: 32b6e34b3d91647abb20e7b8
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
        - $ref: "#/components/parameters/orgId"
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              x-xgen-version: 2023-01-01
          description: No Content
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Remove One Role Mapping from One Organization
      tags:
        - Federated Authentication
      x-xgen-experimental: true
    get:
      description: Returns one role mapping from the specified organization in the
        specified federation. To use this resource, the requesting API Key must
        have the Organization Owner role.
      operationId: getRoleMapping
      parameters:
        - $ref: "#/components/parameters/federationSettingsId"
        - description: Unique 24-hexadecimal digit string that identifies the role mapping
            that you want to return.
          in: path
          name: id
          required: true
          schema:
            type: string
            example: 32b6e34b3d91647abb20e7b8
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
        - $ref: "#/components/parameters/orgId"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/AuthFederationRoleMapping"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Role Mapping from One Organization
      tags:
        - Federated Authentication
      x-xgen-experimental: true
    put:
      description: Updates one role mapping in the specified organization in the
        specified federation. To use this resource, the requesting API Key must
        have the Organization Owner role.
      operationId: updateRoleMapping
      parameters:
        - $ref: "#/components/parameters/federationSettingsId"
        - description: Unique 24-hexadecimal digit string that identifies the role mapping
            that you want to update.
          in: path
          name: id
          required: true
          schema:
            type: string
            example: 32b6e34b3d91647abb20e7b8
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
        - $ref: "#/components/parameters/orgId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/AuthFederationRoleMapping"
        description: The role mapping that you want to update.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/AuthFederationRoleMapping"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Update One Role Mapping in One Organization
      tags:
        - Federated Authentication
      x-xgen-experimental: true
  "/api/atlas/v2/federationSettings/{federationSettingsId}/identityProviders":
    get:
      description: Returns all identity providers with the provided protocol and type
        in the specified federation. If no protocol is specified, only SAML
        identity providers will be returned. If no idpType is specified, only
        WORKFORCE identity providers will be returned. To use this resource, the
        requesting API Key must have the Organization Owner role in one of the
        connected organizations.
      operationId: listIdentityProviders
      parameters:
        - $ref: "#/components/parameters/federationSettingsId"
        - description: The protocols of the target identity providers.
          in: query
          name: protocol
          schema:
            type: array
            items:
              type: string
              default: SAML
        - description: The types of the target identity providers.
          in: query
          name: idpType
          schema:
            type: array
            items:
              type: string
              default: WORKFORCE
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedFederationIdentityProvider"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return all identity providers from the specified federation.
      tags:
        - Federated Authentication
      x-xgen-experimental: true
    post:
      description: >-
        Creates one identity provider within the specified federation. To use
        this resource, the requesting API Key must have the Organization Owner
        role in one of the connected organizations.


        **Note**: This resource only supports the creation of OIDC identity providers.
      operationId: createIdentityProvider
      parameters:
        - $ref: "#/components/parameters/federationSettingsId"
      requestBody:
        content:
          application/vnd.atlas.2023-11-15+json:
            schema:
              $ref: "#/components/schemas/FederationOidcIdentityProviderUpdate"
        description: The identity provider that you want to create.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-11-15+json:
              schema:
                $ref: "#/components/schemas/FederationOidcIdentityProvider"
              x-xgen-version: 2023-11-15
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Create one identity provider
      tags:
        - Federated Authentication
      x-xgen-experimental: true
  "/api/atlas/v2/federationSettings/{federationSettingsId}/identityProviders/{identityProviderId}":
    delete:
      description: >-
        Deletes one identity provider in the specified federation. To use this
        resource, the requesting API Key must have the Organization Owner role
        in one of the connected organizations. 


        **Note**: Requests to this resource will fail if the identity provider has any connected organizations. Before deleting an identity provider, disconnect all organizations and confirm that no organization in your account uses this identity provider. To learn more, see [Manage Organization Mapping for Federated Authentication](https://www.mongodb.com/docs/atlas/security/manage-org-mapping/).
      operationId: deleteIdentityProvider
      parameters:
        - $ref: "#/components/parameters/federationSettingsId"
        - description: Unique 24-hexadecimal digit string that identifies the identity
            provider to connect.
          in: path
          name: identityProviderId
          required: true
          schema:
            type: string
            example: 32b6e34b3d91647abb20e7b8
      responses:
        "204":
          content:
            application/vnd.atlas.2023-11-15+json:
              x-xgen-version: 2023-11-15
          description: No Response
        "400":
          $ref: "#/components/responses/badRequest"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Delete the identity provider.
      tags:
        - Federated Authentication
      x-xgen-experimental: true
    get:
      description: "Returns one identity provider in the specified federation by the
        identity provider's id. To use this resource, the requesting API Key
        must have the Organization Owner role in one of the connected
        organizations. Deprecated versions: v2-{2023-01-01}"
      operationId: getIdentityProvider
      parameters:
        - $ref: "#/components/parameters/federationSettingsId"
        - description: Unique string that identifies the identity provider to connect. If
            using an API version before 11-15-2023, use the 20-hexadecimal digit
            oktaIdpId. For all other versions, use the 24-hexadecimal digit id.
          in: path
          name: identityProviderId
          required: true
          schema:
            type: string
            example: 32b6e34b3d91647abb20e7b8
      responses:
        "200":
          content:
            application/vnd.atlas.2023-11-15+json:
              schema:
                $ref: "#/components/schemas/FederationIdentityProvider"
              x-xgen-version: 2023-11-15
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return one identity provider from the specified federation by id.
      tags:
        - Federated Authentication
      x-xgen-experimental: true
    patch:
      description: >-
        Updates one identity provider in the specified federation. To use this
        resource, the requesting API Key must have the Organization Owner role
        in one of the connected organizations.


        **Note**: Changing authorization types and/or updating authorization claims can prevent current users and/or groups from accessing the database. Deprecated versions: v2-{2023-01-01}
      operationId: updateIdentityProvider
      parameters:
        - $ref: "#/components/parameters/federationSettingsId"
        - description: Unique string that identifies the identity provider to connect. If
            using an API version before 11-15-2023, use the 20-hexadecimal digit
            oktaIdpId. For all other versions, use the 24-hexadecimal digit id.
          in: path
          name: identityProviderId
          required: true
          schema:
            type: string
            example: 32b6e34b3d91647abb20e7b8
      requestBody:
        content:
          application/vnd.atlas.2023-11-15+json:
            schema:
              $ref: "#/components/schemas/FederationIdentityProviderUpdate"
        description: The identity provider that you want to update.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-11-15+json:
              schema:
                $ref: "#/components/schemas/FederationIdentityProvider"
              x-xgen-version: 2023-11-15
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Update the identity provider.
      tags:
        - Federated Authentication
      x-xgen-experimental: true
  "/api/atlas/v2/federationSettings/{federationSettingsId}/identityProviders/{identityProviderId}/jwks":
    delete:
      description: >-
        Revokes the JWKS tokens from the requested OIDC identity provider. To
        use this resource, the requesting API Key must have the Organization
        Owner role in one of the connected organizations. 


        **Note**: Revoking your JWKS tokens immediately refreshes your IdP public keys from all your Atlas clusters, invalidating previously signed access tokens and logging out all users. You may need to restart your MongoDB clients. All organizations connected to the identity provider will be affected. To learn more, see [Configure OIDC Authorization](https://www.mongodb.com/docs/atlas/security-oidc/#revoke-jwks).
      operationId: revokeJwksFromIdentityProvider
      parameters:
        - $ref: "#/components/parameters/federationSettingsId"
        - description: Unique 24-hexadecimal digit string that identifies the identity
            provider to connect.
          in: path
          name: identityProviderId
          required: true
          schema:
            type: string
            example: 32b6e34b3d91647abb20e7b8
      responses:
        "204":
          content:
            application/vnd.atlas.2023-11-15+json:
              x-xgen-version: 2023-11-15
          description: No Response
        "400":
          $ref: "#/components/responses/badRequest"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Revoke the JWKS tokens from an OIDC identity provider.
      tags:
        - Federated Authentication
      x-xgen-experimental: true
  "/api/atlas/v2/federationSettings/{federationSettingsId}/identityProviders/{identityProviderId}/metadata.xml":
    get:
      description: Returns the metadata of one identity provider in the specified
        federation. To use this resource, the requesting API Key must have the
        Organization Owner role in one of the connected organizations.
      operationId: getIdentityProviderMetadata
      parameters:
        - $ref: "#/components/parameters/federationSettingsId"
        - $ref: "#/components/parameters/identityProviderId"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                type: string
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return the metadata of one identity provider in the specified federation.
      tags:
        - Federated Authentication
      x-xgen-experimental: true
  /api/atlas/v2/groups:
    get:
      description: Returns details about all projects. Projects group clusters into
        logical collections that support an application environment, workload,
        or both. Each project can have its own users, teams, security, tags, and
        alert settings. To use this resource, the requesting API Key must have
        the Read Write role.
      operationId: listProjects
      parameters:
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedAtlasGroup"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Projects
      tags:
        - Projects
    post:
      description: Creates one project. Projects group clusters into logical
        collections that support an application environment, workload, or both.
        Each project can have its own users, teams, security, tags, and alert
        settings. To use this resource, the requesting API Key must have the
        Read Write role.
      operationId: createProject
      parameters:
        - description: Unique 24-hexadecimal digit string that identifies the MongoDB
            Cloud user to whom to grant the Project Owner role on the specified
            project. If you set this parameter, it overrides the default value
            of the oldest Organization Owner.
          in: query
          name: projectOwnerId
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/Group"
        description: Creates one project.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/Group"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Create One Project
      tags:
        - Projects
  "/api/atlas/v2/groups/byName/{groupName}":
    get:
      description: Returns details about the specified project. Projects group
        clusters into logical collections that support an application
        environment, workload, or both. Each project can have its own users,
        teams, security, tags, and alert settings. To use this resource, the
        requesting API Key must have the Project Read Only role.
      operationId: getProjectByName
      parameters:
        - description: Human-readable label that identifies this project.
          in: path
          name: groupName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/Group"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Project using Its Name
      tags:
        - Projects
  "/api/atlas/v2/groups/{groupId}":
    delete:
      description: Removes the specified project. Projects group clusters into logical
        collections that support an application environment, workload, or both.
        Each project can have its own users, teams, security, tags, and alert
        settings. You can delete a project only if there are no Online Archives
        for the clusters in the project. To use this resource, the requesting
        API Key must have the Project Owner role.
      operationId: deleteProject
      parameters:
        - $ref: "#/components/parameters/groupId"
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/NoBody"
              x-xgen-version: 2023-01-01
          description: This endpoint does not return a response body.
        "400":
          $ref: "#/components/responses/badRequest"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Remove One Project
      tags:
        - Projects
    get:
      description: Returns details about the specified project. Projects group
        clusters into logical collections that support an application
        environment, workload, or both. Each project can have its own users,
        teams, security, tags, and alert settings. To use this resource, the
        requesting API Key must have the Project Read Only role.
      operationId: getProject
      parameters:
        - $ref: "#/components/parameters/groupId"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/Group"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Project
      tags:
        - Projects
    patch:
      description: Updates the human-readable label that identifies the specified
        project, or the tags associated with the project. To use this resource,
        the requesting API Key must have the Project Owner role.
      operationId: updateProject
      parameters:
        - $ref: "#/components/parameters/groupId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/GroupUpdate"
        description: Project to update.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/Group"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Update One Project
      tags:
        - Projects
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/access":
    post:
      description: Adds one MongoDB Cloud user to the specified project. If the
        MongoDB Cloud user is not a member of the project's organization, then
        the user must accept their invitation to the organization to access
        information within the specified project. If the MongoDB Cloud User is
        already a member of the project's organization, then they will be added
        to the project immediately and an invitation will not be returned by
        this resource. To use this resource, the requesting API Key must have
        the Group User Admin role.
      operationId: addUserToProject
      parameters:
        - $ref: "#/components/parameters/groupId"
      requestBody:
        content:
          application/vnd.atlas.2023-02-01+json:
            schema:
              $ref: "#/components/schemas/GroupInvitationRequest"
        description: Adds one MongoDB Cloud user to the specified project.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-02-01+json:
              schema:
                $ref: "#/components/schemas/OrganizationInvitation"
              x-xgen-version: 2023-02-01
          description: OK
        "204":
          content:
            application/vnd.atlas.2023-02-01+json:
              x-xgen-version: 2023-02-01
          description: No Content
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Add One MongoDB Cloud User to One Project
      tags:
        - Projects
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/accessList":
    get:
      description: Returns all access list entries from the specified project's IP
        access list. Each entry in the project's IP access list contains either
        one IP address or one CIDR-notated block of IP addresses. MongoDB Cloud
        only allows client connections to the cluster from entries in the
        project's IP access list. To use this resource, the requesting API Key
        must have the Project Read Only or Project Charts Admin roles. This
        resource replaces the whitelist resource. MongoDB Cloud removed
        whitelists in July 2021. Update your applications to use this new
        resource. The `/groups/{GROUP-ID}/accessList` endpoint manages the
        database IP access list. This endpoint is distinct from the
        `orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accesslist` endpoint, which manages
        the access list for MongoDB Cloud organizations.
      externalDocs:
        description: IP access list
        url: https://docs.atlas.mongodb.com/security/ip-access-list/#std-label-access-list
      operationId: listProjectIpAccessLists
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedNetworkAccess"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return Project IP Access List
      tags:
        - Project IP Access List
    post:
      description: Adds one or more access list entries to the specified project.
        MongoDB Cloud only allows client connections to the cluster from entries
        in the project's IP access list. Write each entry as either one IP
        address or one CIDR-notated block of IP addresses. To use this resource,
        the requesting API Key must have the Project Owner or Project Charts
        Admin roles. This resource replaces the whitelist resource. MongoDB
        Cloud removed whitelists in July 2021. Update your applications to use
        this new resource. The `/groups/{GROUP-ID}/accessList` endpoint manages
        the database IP access list. This endpoint is distinct from the
        `orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accesslist` endpoint, which manages
        the access list for MongoDB Cloud organizations. This endpoint doesn't
        support concurrent `POST` requests. You must submit multiple `POST`
        requests synchronously.
      externalDocs:
        description: IP access list
        url: https://docs.atlas.mongodb.com/security/ip-access-list/#std-label-access-list
      operationId: createProjectIpAccessList
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/NetworkPermissionEntry"
        description: One or more access list entries to add to the specified project.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedNetworkAccess"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Add Entries to Project IP Access List
      tags:
        - Project IP Access List
  "/api/atlas/v2/groups/{groupId}/accessList/{entryValue}":
    delete:
      description: Removes one access list entry from the specified project's IP
        access list. Each entry in the project's IP access list contains one IP
        address, one CIDR-notated block of IP addresses, or one AWS Security
        Group ID. MongoDB Cloud only allows client connections to the cluster
        from entries in the project's IP access list. To use this resource, the
        requesting API Key must have the Project Owner role. This resource
        replaces the whitelist resource. MongoDB Cloud removed whitelists in
        July 2021. Update your applications to use this new resource. The
        `/groups/{GROUP-ID}/accessList` endpoint manages the database IP access
        list. This endpoint is distinct from the
        `orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accesslist` endpoint, which manages
        the access list for MongoDB Cloud organizations.
      externalDocs:
        description: IP access list
        url: https://docs.atlas.mongodb.com/security/ip-access-list/#std-label-access-list
      operationId: deleteProjectIpAccessList
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: >-
            Access list entry that you want to remove from the project's IP
            access list. This value can use one of the following: one AWS
            security group ID, one IP address, or one CIDR block of addresses.
            For CIDR blocks that use a subnet mask, replace the forward slash
            (`/`) with its URL-encoded value (`%2F`). When you remove an entry
            from the IP access list, existing connections from the removed
            address or addresses may remain open for a variable amount of time.
            The amount of time it takes MongoDB Cloud to close the connection
            depends upon several factors, including:


            - how your application established the connection,

            - how MongoDB Cloud or the driver using the address behaves, and

            - which protocol (like TCP or UDP) the connection uses.
          in: path
          name: entryValue
          required: true
          schema:
            type: string
            example: "IPv4: 192.0.2.0%2F24 or IPv6: 2001:db8:85a3:8d3:1319:8a2e:370:7348 or
              IPv4 CIDR: 198.51.100.0%2f24 or IPv6 CIDR: 2001:db8::%2f58 or AWS
              SG: sg-903004f8"
            pattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\:){7}[0-9a-f]{1,4}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\:){1,6}\:(%2[fF][0-9]{1,3})|(sg\-[a-f0-9]{8})?$
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/NoBody"
              x-xgen-version: 2023-01-01
          description: This endpoint does not return a response body.
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Remove One Entry from One Project IP Access List
      tags:
        - Project IP Access List
    get:
      description: Returns one access list entry from the specified project's IP
        access list. Each entry in the project's IP access list contains either
        one IP address or one CIDR-notated block of IP addresses. MongoDB Cloud
        only allows client connections to the cluster from entries in the
        project's IP access list. To use this resource, the requesting API Key
        must have the Project Read Only or Project Charts Admin roles. This
        resource replaces the whitelist resource. MongoDB Cloud removed
        whitelists in July 2021. Update your applications to use this new
        resource. This endpoint (`/groups/{GROUP-ID}/accessList`) manages the
        Project IP Access List. It doesn't manage the access list for MongoDB
        Cloud organizations. TheProgrammatic API Keys endpoint
        (`/orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accesslist`) manages those access
        lists.
      externalDocs:
        description: IP access list
        url: https://docs.atlas.mongodb.com/security/ip-access-list/#std-label-access-list
      operationId: getProjectIpList
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: "Access list entry that you want to return from the project's IP
            access list. This value can use one of the following: one AWS
            security group ID, one IP address, or one CIDR block of addresses.
            For CIDR blocks that use a subnet mask, replace the forward slash
            (`/`) with its URL-encoded value (`%2F`)."
          in: path
          name: entryValue
          required: true
          schema:
            type: string
            example: "IPv4: 192.0.2.0%2F24 or IPv6: 2001:db8:85a3:8d3:1319:8a2e:370:7348 or
              IPv4 CIDR: 198.51.100.0%2f24 or IPv6 CIDR: 2001:db8::%2f58 or AWS
              SG: sg-903004f8"
            pattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\:){7}[0-9a-f]{1,4}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\:){1,6}\:(%2[fF][0-9]{1,3})|(sg\-[a-f0-9]{8})?$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/NetworkPermissionEntry"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Project IP Access List Entry
      tags:
        - Project IP Access List
  "/api/atlas/v2/groups/{groupId}/accessList/{entryValue}/status":
    get:
      description: Returns the status of one project IP access list entry. This
        resource checks if the provided project IP access list entry applies to
        all cloud providers serving clusters from the specified project.
      operationId: getProjectIpAccessListStatus
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Network address or cloud provider security construct that
            identifies which project access list entry to be verified.
          in: path
          name: entryValue
          required: true
          schema:
            type: string
            example: "IPv4: 192.0.2.0%2F24 or IPv6: 2001:db8:85a3:8d3:1319:8a2e:370:7348 or
              IPv4 CIDR: 198.51.100.0%2f24 or IPv6 CIDR: 2001:db8::%2f58 or AWS
              SG: sg-903004f8"
            pattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\:){7}[0-9a-f]{1,4}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\:){1,6}\:(%2[fF][0-9]{1,3})|(sg\-[a-f0-9]{8})?$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/NetworkPermissionEntryStatus"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return Status of One Project IP Access List Entry
      tags:
        - Project IP Access List
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/alertConfigs":
    get:
      description: >-
        Returns all alert configurations for one project. These alert
        configurations apply to any component in the project. Alert
        configurations define the triggers and notification methods for alerts.
        To use this resource, the requesting API Key must have the Project Read
        Only role.


        This resource remains under revision and may change.
      operationId: listAlertConfigurations
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedAlertConfig"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Alert Configurations for One Project
      tags:
        - Alert Configurations
    post:
      description: >-
        Creates one alert configuration for the specified project. Alert
        configurations define the triggers and notification methods for alerts.
        To use this resource, the requesting API Key must have the Organization
        Owner or Project Owner role.


        This resource remains under revision and may change.
      operationId: createAlertConfiguration
      parameters:
        - $ref: "#/components/parameters/groupId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/GroupAlertsConfig"
        description: Creates one alert configuration for the specified project.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/GroupAlertsConfig"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Create One Alert Configuration in One Project
      tags:
        - Alert Configurations
  "/api/atlas/v2/groups/{groupId}/alertConfigs/{alertConfigId}":
    delete:
      description: >-
        Removes one alert configuration from the specified project. To use this
        resource, the requesting API Key must have the Organization Owner or
        Project Owner role.


        This resource remains under revision and may change.
      operationId: deleteAlertConfiguration
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Unique 24-hexadecimal digit string that identifies the alert
            configuration. Use the
            [/alertConfigs](#tag/Alert-Configurations/operation/listAlertConfigurations)
            endpoint to retrieve all alert configurations to which the
            authenticated user has access.
          in: path
          name: alertConfigId
          required: true
          schema:
            type: string
            example: 32b6e34b3d91647abb20e7b8
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              x-xgen-version: 2023-01-01
          description: No Content
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Remove One Alert Configuration from One Project
      tags:
        - Alert Configurations
    get:
      description: >-
        Returns the specified alert configuration from the specified project. To
        use this resource, the requesting API Key must have the Project Read
        Only role.


        This resource remains under revision and may change.
      operationId: getAlertConfiguration
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Unique 24-hexadecimal digit string that identifies the alert
            configuration. Use the
            [/alertConfigs](#tag/Alert-Configurations/operation/listAlertConfigurations)
            endpoint to retrieve all alert configurations to which the
            authenticated user has access.
          in: path
          name: alertConfigId
          required: true
          schema:
            type: string
            example: 32b6e34b3d91647abb20e7b8
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/GroupAlertsConfig"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Alert Configuration from One Project
      tags:
        - Alert Configurations
      x-xgen-experimental: true
    patch:
      description: >-
        Enables or disables the specified alert configuration in the specified
        project. The resource enables the specified alert configuration if
        currently enabled. The resource disables the specified alert
        configuration if currently disabled. To use this resource, the
        requesting API Key must have the Organization Owner or Project Owner
        role.


        **NOTE**: This endpoint updates only the enabled/disabled state for the alert configuration. To update more than just this configuration, see [Update One Alert Configuration](#tag/Alert-Configurations/operation/updateAlertConfiguration).


        This resource remains under revision and may change.
      operationId: toggleAlertConfiguration
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Unique 24-hexadecimal digit string that identifies the alert
            configuration that triggered this alert. Use the
            [/alertConfigs](#tag/Alert-Configurations/operation/listAlertConfigurations)
            endpoint to retrieve all alert configurations to which the
            authenticated user has access.
          in: path
          name: alertConfigId
          required: true
          schema:
            type: string
            example: 32b6e34b3d91647abb20e7b8
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/AlertsToggle"
        description: Enables or disables the specified alert configuration in the
          specified project.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/GroupAlertsConfig"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Toggle One State of One Alert Configuration in One Project
      tags:
        - Alert Configurations
    put:
      description: >-
        Updates one alert configuration in the specified project. Alert
        configurations define the triggers and notification methods for alerts.
        To use this resource, the requesting API Key must have the Organization
        Owner or Project Owner role.


        **NOTE**: To enable or disable the alert configuration, see [Toggle One State of One Alert Configuration in One Project](#tag/Alert-Configurations/operation/toggleAlertConfiguration).


        This resource remains under revision and may change.
      operationId: updateAlertConfiguration
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Unique 24-hexadecimal digit string that identifies the alert
            configuration. Use the
            [/alertConfigs](#tag/Alert-Configurations/operation/listAlertConfigurations)
            endpoint to retrieve all alert configurations to which the
            authenticated user has access.
          in: path
          name: alertConfigId
          required: true
          schema:
            type: string
            example: 32b6e34b3d91647abb20e7b8
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/GroupAlertsConfig"
        description: Updates one alert configuration in the specified project.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/GroupAlertsConfig"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Update One Alert Configuration for One Project
      tags:
        - Alert Configurations
  "/api/atlas/v2/groups/{groupId}/alertConfigs/{alertConfigId}/alerts":
    get:
      description: >-
        Returns all open alerts that the specified alert configuration triggers.
        These alert configurations apply to the specified project only. Alert
        configurations define the triggers and notification methods for alerts.
        Open alerts have been triggered but remain unacknowledged. To use this
        resource, the requesting API Key must have the Project Read Only role.


        This resource remains under revision and may change.
      operationId: listAlertsByAlertConfigurationId
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
        - description: Unique 24-hexadecimal digit string that identifies the alert
            configuration. Use the
            [/alertConfigs](#tag/Alert-Configurations/operation/listAlertConfigurations)
            endpoint to retrieve all alert configurations to which the
            authenticated user has access.
          in: path
          name: alertConfigId
          required: true
          schema:
            type: string
            example: 32b6e34b3d91647abb20e7b8
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedAlert"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Open Alerts for Alert Configuration
      tags:
        - Alerts
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/alerts":
    get:
      description: >-
        Returns all alerts. These alerts apply to all components in one project.
        You receive an alert when a monitored component meets or exceeds a value
        you set. To use this resource, the requesting API Key must have the
        Project Read Only role.


        This resource remains under revision and may change.
      operationId: listAlerts
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
        - description: Status of the alerts to return. Omit to return all alerts in all
            statuses.
          in: query
          name: status
          schema:
            type: string
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedAlert"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Alerts from One Project
      tags:
        - Alerts
  "/api/atlas/v2/groups/{groupId}/alerts/{alertId}":
    get:
      description: >-
        Returns one alert. This alert applies to any component in one project.
        You receive an alert when a monitored component meets or exceeds a value
        you set. To use this resource, the requesting API Key must have the
        Project Read Only role.


        This resource remains under revision and may change.
      operationId: getAlert
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Unique 24-hexadecimal digit string that identifies the alert. Use
            the [/alerts](#tag/Alerts/operation/listAlerts) endpoint to retrieve
            all alerts to which the authenticated user has access.
          in: path
          name: alertId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/AlertViewForNdsGroup"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Alert from One Project
      tags:
        - Alerts
    patch:
      description: >-
        Confirms receipt of one existing alert. This alert applies to any
        component in one project. Acknowledging an alert prevents successive
        notifications. You receive an alert when a monitored component meets or
        exceeds a value you set until you acknowledge the alert. To use this
        resource, the requesting API Key must have the Organization Owner or
        Project Owner role.


        This resource remains under revision and may change.
      operationId: acknowledgeAlert
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Unique 24-hexadecimal digit string that identifies the alert. Use
            the [/alerts](#tag/Alerts/operation/listAlerts) endpoint to retrieve
            all alerts to which the authenticated user has access.
          in: path
          name: alertId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/AlertViewForNdsGroup"
        description: Confirm one alert.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/AlertViewForNdsGroup"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Acknowledge One Alert from One Project
      tags:
        - Alerts
  "/api/atlas/v2/groups/{groupId}/alerts/{alertId}/alertConfigs":
    get:
      description: >-
        Returns all alert configurations set for the specified alert. To use
        this resource, the requesting API Key must have the Project Read Only
        role.


        This resource remains under revision and may change.
      operationId: listAlertConfigurationsByAlertId
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
        - description: Unique 24-hexadecimal digit string that identifies the alert. Use
            the [/alerts](#tag/Alerts/operation/listAlerts) endpoint to retrieve
            all alerts to which the authenticated user has access.
          in: path
          name: alertId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedAlertConfig"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Alert Configurations Set for One Alert
      tags:
        - Alert Configurations
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/apiKeys":
    get:
      description: Returns all organization API keys that you assigned to the
        specified project. Users with the Project Owner role in the project
        associated with the API key can use the organization API key to access
        the resources. To use this resource, the requesting API Key must have
        the Project Owner role.
      externalDocs:
        description: Programmatic API Keys
        url: https://docs.atlas.mongodb.com/configure-api-access/#std-label-atlas-prog-api-key
      operationId: listProjectApiKeys
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedApiApiUser"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Organization API Keys Assigned to One Project
      tags:
        - Programmatic API Keys
    post:
      description: Creates and assigns the specified organization API key to the
        specified project. Users with the Project Owner role in the project
        associated with the API key can use the organization API key to access
        the resources. To use this resource, the requesting API Key must have
        the Project Owner role.
      operationId: createProjectApiKey
      parameters:
        - $ref: "#/components/parameters/groupId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/CreateAtlasProjectApiKey"
        description: Organization API key to be created and assigned to the specified
          project.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/ApiKeyUserDetails"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Create and Assign One Organization API Key to One Project
      tags:
        - Programmatic API Keys
  "/api/atlas/v2/groups/{groupId}/apiKeys/{apiUserId}":
    delete:
      description: Removes one organization API key from the specified project. To use
        this resource, the requesting API Key must have the Project Owner role.
      externalDocs:
        description: Programmatic API Keys
        url: https://docs.atlas.mongodb.com/configure-api-access/#std-label-atlas-prog-api-key
      operationId: removeProjectApiKey
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Unique 24-hexadecimal digit string that identifies this
            organization API key that you want to unassign from one project.
          in: path
          name: apiUserId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/NoBody"
              x-xgen-version: 2023-01-01
          description: This endpoint does not return a response body.
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Unassign One Organization API Key from One Project
      tags:
        - Programmatic API Keys
    patch:
      description: Updates the roles of the organization API key that you specify for
        the project that you specify. You must specify at least one valid role
        for the project. The application removes any roles that you do not
        include in this request if they were previously set in the organization
        API key that you specify for the project.
      operationId: updateApiKeyRoles
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/pageNum"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/includeCount"
        - description: Unique 24-hexadecimal digit string that identifies this
            organization API key that you want to unassign from one project.
          in: path
          name: apiUserId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/UpdateAtlasProjectApiKey"
        description: Organization API Key to be updated. This request requires a minimum
          of one of the two body parameters.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/ApiKeyUserDetails"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Update Roles of One Organization API Key to One Project
      tags:
        - Programmatic API Keys
    post:
      description: Assigns the specified organization API key to the specified
        project. Users with the Project Owner role in the project associated
        with the API key can then use the organization API key to access the
        resources. To use this resource, the requesting API Key must have the
        Project Owner role.
      operationId: addProjectApiKey
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Unique 24-hexadecimal digit string that identifies this
            organization API key that you want to assign to one project.
          in: path
          name: apiUserId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/UserAccessRoleAssignment"
        description: Organization API key to be assigned to the specified project.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/ApiKeyUserDetails"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Assign One Organization API Key to One Project
      tags:
        - Programmatic API Keys
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/auditLog":
    get:
      description: Returns the auditing configuration for the specified project. The
        auditing configuration defines the events that MongoDB Cloud records in
        the audit log. To use this resource, the requesting API Key must have
        the Project Owner role. This feature isn't available for `M0`, `M2`,
        `M5`, or serverless clusters.
      operationId: getAuditingConfiguration
      parameters:
        - $ref: "#/components/parameters/groupId"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/AuditLog"
              x-xgen-version: 2023-01-01
          description: OK
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return the Auditing Configuration for One Project
      tags:
        - Auditing
    patch:
      description: Updates the auditing configuration for the specified project. The
        auditing configuration defines the events that MongoDB Cloud records in
        the audit log. To use this resource, the requesting API Key must have
        the Project Owner role. This feature isn't available for `M0`, `M2`,
        `M5`, or serverless clusters.
      operationId: updateAuditingConfiguration
      parameters:
        - $ref: "#/components/parameters/groupId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/AuditLog"
        description: Updated auditing configuration for the specified project.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/AuditLog"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Update Auditing Configuration for One Project
      tags:
        - Auditing
  "/api/atlas/v2/groups/{groupId}/awsCustomDNS":
    get:
      description: Returns the custom DNS configuration for AWS clusters in the
        specified project. To use this resource, the requesting API Key must
        have the Project Read Only role.
      operationId: getAWSCustomDNS
      parameters:
        - $ref: "#/components/parameters/groupId"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/AWSCustomDNSEnabled"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Custom DNS Configuration for Atlas Clusters on AWS
      tags:
        - AWS Clusters DNS
    patch:
      description: Enables or disables the custom DNS configuration for AWS clusters
        in the specified project. Enable custom DNS if you use AWS VPC peering
        and use your own DNS servers. To use this resource, the requesting API
        Key must have the Project Atlas Admin role.
      operationId: toggleAWSCustomDNS
      parameters:
        - $ref: "#/components/parameters/groupId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/AWSCustomDNSEnabled"
        description: Enables or disables the custom DNS configuration for AWS clusters
          in the specified project.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/AWSCustomDNSEnabled"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Toggle State of One Custom DNS Configuration for Atlas Clusters on AWS
      tags:
        - AWS Clusters DNS
  "/api/atlas/v2/groups/{groupId}/backup/exportBuckets":
    get:
      description: Returns all AWS S3 buckets associated with the specified project.
        To use this resource, the requesting API Key must have the Project Read
        Only role.
      operationId: listExportBuckets
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedBackupSnapshotExportBucket"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All AWS S3 Buckets Used for Cloud Backup Snapshot Exports
      tags:
        - Cloud Backups
    post:
      description: Grants MongoDB Cloud access to the specified AWS S3 bucket. This
        enables this bucket to receive Atlas Cloud Backup snapshots. To use this
        resource, the requesting API Key must have the Project Owner role.
      operationId: createExportBucket
      parameters:
        - $ref: "#/components/parameters/groupId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/DiskBackupSnapshotAWSExportBucket"
        description: Grants MongoDB Cloud access to the specified AWS S3 bucket.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/DiskBackupSnapshotAWSExportBucket"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Grant Access to AWS S3 Bucket for Cloud Backup Snapshot Exports
      tags:
        - Cloud Backups
  "/api/atlas/v2/groups/{groupId}/backup/exportBuckets/{exportBucketId}":
    delete:
      description: Revoke MongoDB Cloud access to the specified AWS S3 bucket. This
        prevents this bucket to receive Atlas Cloud Backup snapshots. Auto
        export must be disabled on all clusters in this project exporting to
        this bucket before revoking access. To use this resource, the requesting
        API Key must have the Project Owner role.
      operationId: deleteExportBucket
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Unique string that identifies the AWS S3 bucket to which you export
            your snapshots.
          in: path
          name: exportBucketId
          required: true
          schema:
            type: string
            maxLength: 63
            minLength: 3
            pattern: ^((?!xn--)(?!.*-s3alias)[a-z0-9][a-z0-9-]{1,61}[a-z0-9])$
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/NoBody"
              x-xgen-version: 2023-01-01
          description: This endpoint does not return a response body.
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Revoke Access to AWS S3 Bucket for Cloud Backup Snapshot Exports
      tags:
        - Cloud Backups
    get:
      description: Returns one AWS S3 bucket associated with the specified project. To
        use this resource, the requesting API Key must have the Project Read
        Only role.
      operationId: getExportBucket
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Unique string that identifies the AWS S3 bucket to which you export
            your snapshots.
          in: path
          name: exportBucketId
          required: true
          schema:
            type: string
            maxLength: 63
            minLength: 3
            pattern: ^((?!xn--)(?!.*-s3alias)[a-z0-9][a-z0-9-]{1,61}[a-z0-9])$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/DiskBackupSnapshotAWSExportBucket"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One AWS S3 Bucket Used for Cloud Backup Snapshot Exports
      tags:
        - Cloud Backups
  "/api/atlas/v2/groups/{groupId}/backupCompliancePolicy":
    get:
      description: "Returns the Backup Compliance Policy settings with the specified
        project. To use this resource, the requesting API Key must have the
        Project Owner role. Deprecated versions: v2-{2023-01-01}"
      operationId: getDataProtectionSettings
      parameters:
        - $ref: "#/components/parameters/groupId"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-10-01+json:
              schema:
                $ref: "#/components/schemas/DataProtectionSettings20231001"
              x-xgen-version: 2023-10-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return the Backup Compliance Policy settings
      tags:
        - Cloud Backups
    put:
      description: "Updates the Backup Compliance Policy settings for the specified
        project. To use this resource, the requesting API Key must have the
        Project Owner role. Deprecated versions: v2-{2023-01-01}"
      operationId: updateDataProtectionSettings
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Flag that indicates whether to overwrite non complying backup
            policies with the new data protection settings or not.
          in: query
          name: overwriteBackupPolicies
          schema:
            type: boolean
            default: true
      requestBody:
        content:
          application/vnd.atlas.2023-10-01+json:
            schema:
              $ref: "#/components/schemas/DataProtectionSettings20231001"
            x-xgen-version: 2023-10-01
        description: The new Backup Compliance Policy settings.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-10-01+json:
              schema:
                $ref: "#/components/schemas/DataProtectionSettings20231001"
              x-xgen-version: 2023-10-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Update or enable the Backup Compliance Policy settings
      tags:
        - Cloud Backups
  "/api/atlas/v2/groups/{groupId}/cloudProviderAccess":
    get:
      description: Returns all cloud provider access roles with access to the
        specified project. To use this resource, the requesting API Key must
        have the Project Owner role.
      operationId: listCloudProviderAccessRoles
      parameters:
        - $ref: "#/components/parameters/groupId"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/CloudProviderAccessRoles"
              x-xgen-version: 2023-01-01
          description: OK
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Cloud Provider Access Roles
      tags:
        - Cloud Provider Access
    post:
      description: Creates one access role for the specified cloud provider. Some
        MongoDB Cloud features use these cloud provider access roles for
        authentication. To use this resource, the requesting API Key must have
        the Project Owner role.
      externalDocs:
        description: Set Up Access to Cloud Providers
        url: https://www.mongodb.com/docs/atlas/security/cloud-provider-access/
      operationId: createCloudProviderAccessRole
      parameters:
        - $ref: "#/components/parameters/groupId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/CloudProviderAccessRole"
        description: Creates one role for the specified cloud provider.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/CloudProviderAccessRole"
              x-xgen-version: 2023-01-01
          description: OK
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Create One Cloud Provider Access Role
      tags:
        - Cloud Provider Access
  "/api/atlas/v2/groups/{groupId}/cloudProviderAccess/{cloudProvider}/{roleId}":
    delete:
      description: Revokes access to the specified project for the specified access
        role. To use this resource, the requesting API Key must have the Project
        Owner role.
      operationId: deauthorizeCloudProviderAccessRole
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cloud provider of the role
            to deauthorize.
          in: path
          name: cloudProvider
          required: true
          schema:
            type: string
        - description: Unique 24-hexadecimal digit string that identifies the role.
          in: path
          name: roleId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              x-xgen-version: 2023-01-01
          description: No Content
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Deauthorize One Cloud Provider Access Role
      tags:
        - Cloud Provider Access
  "/api/atlas/v2/groups/{groupId}/cloudProviderAccess/{roleId}":
    get:
      description: Returns the access role with the specified id and with access to
        the specified project. To use this resource, the requesting API Key must
        have the Project Owner role.
      operationId: getCloudProviderAccessRole
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Unique 24-hexadecimal digit string that identifies the role.
          in: path
          name: roleId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/CloudProviderAccessRole"
              x-xgen-version: 2023-01-01
          description: OK
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return specified Cloud Provider Access Role
      tags:
        - Cloud Provider Access
      x-xgen-experimental: true
    patch:
      description: Grants access to the specified project for the specified access
        role. To use this resource, the requesting API Key must have the Project
        Owner role. This API endpoint is one step in a procedure to create
        unified access for MongoDB Cloud services.
      externalDocs:
        description: Set Up Access to Cloud Providers
        url: https://www.mongodb.com/docs/atlas/security/cloud-provider-access/
      operationId: authorizeCloudProviderAccessRole
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Unique 24-hexadecimal digit string that identifies the role.
          in: path
          name: roleId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/CloudProviderAccessRole"
        description: Grants access to the specified project for the specified access role.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/CloudProviderAccessRole"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Authorize One Cloud Provider Access Role
      tags:
        - Cloud Provider Access
  "/api/atlas/v2/groups/{groupId}/clusters":
    get:
      description: "Returns the details for all clusters in the specific project to
        which you have access. Clusters contain a group of hosts that maintain
        the same data set. The response includes multi-cloud clusters. To use
        this resource, the requesting API Key must have the Project Read Only
        role. This feature is not available for serverless clusters. Deprecated
        versions: v2-{2023-01-01}"
      operationId: listClusters
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
        - description: Flag that indicates whether to return Clusters with retain backups.
          in: query
          name: includeDeletedWithRetainedBackups
          schema:
            type: boolean
            default: false
      responses:
        "200":
          content:
            application/vnd.atlas.2023-02-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedAdvancedClusterDescription"
              x-xgen-version: 2023-02-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Clusters in One Project
      tags:
        - Clusters
    post:
      description: "Creates one cluster in the specified project. Clusters contain a
        group of hosts that maintain the same data set. This resource can create
        multi-cloud clusters. Each project supports up to 25 database
        deployments. To use this resource, the requesting API Key must have the
        Project Owner role. This feature is not available for serverless
        clusters. Deprecated versions: v2-{2023-01-01}"
      operationId: createCluster
      parameters:
        - $ref: "#/components/parameters/groupId"
      requestBody:
        content:
          application/vnd.atlas.2023-02-01+json:
            examples:
              Multi Cloud Cluster:
                description: Multi Cloud Cluster
                value:
                  clusterType: REPLICASET
                  links: []
                  name: multiCloud
                  replicationSpecs:
                    - numShards: 1
                      regionConfigs:
                        - analyticsAutoScaling:
                            autoIndexing:
                              enabled: false
                            compute:
                              enabled: true
                              maxInstanceSize: M40
                              minInstanceSize: M30
                              scaleDownEnabled: true
                            diskGB:
                              enabled: true
                          analyticsSpecs:
                            instanceSize: M30
                            nodeCount: 0
                          autoScaling:
                            autoIndexing:
                              enabled: false
                            compute:
                              enabled: true
                              maxInstanceSize: M40
                              minInstanceSize: M30
                              scaleDownEnabled: true
                            diskGB:
                              enabled: true
                          electableSpecs:
                            instanceSize: M30
                            nodeCount: 3
                          hiddenSecondarySpecs:
                            instanceSize: M30
                            nodeCount: 0
                          priority: 7
                          providerName: AWS
                          readOnlySpecs:
                            instanceSize: M30
                            nodeCount: 0
                          regionName: US_EAST_1
                        - analyticsAutoScaling:
                            autoIndexing:
                              enabled: false
                            compute:
                              enabled: true
                              maxInstanceSize: M40
                              minInstanceSize: M30
                              scaleDownEnabled: true
                            diskGB:
                              enabled: true
                          analyticsSpecs:
                            instanceSize: M30
                            nodeCount: 0
                          autoScaling:
                            autoIndexing:
                              enabled: false
                            compute:
                              enabled: true
                              maxInstanceSize: M40
                              minInstanceSize: M30
                              scaleDownEnabled: true
                            diskGB:
                              enabled: true
                          electableSpecs:
                            instanceSize: M30
                            nodeCount: 2
                          hiddenSecondarySpecs:
                            instanceSize: M30
                            nodeCount: 0
                          priority: 6
                          providerName: GCP
                          readOnlySpecs:
                            instanceSize: M30
                            nodeCount: 0
                          regionName: EASTERN_US
                      zoneName: Zone 1
            schema:
              $ref: "#/components/schemas/AdvancedClusterDescription"
        description: Cluster to create in the specific project.
        required: true
      responses:
        "201":
          content:
            application/vnd.atlas.2023-02-01+json:
              schema:
                $ref: "#/components/schemas/AdvancedClusterDescription"
              x-xgen-version: 2023-02-01
          description: Created
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "402":
          $ref: "#/components/responses/paymentRequired"
        "403":
          $ref: "#/components/responses/forbidden"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Create One Cluster from One Project
      tags:
        - Clusters
  "/api/atlas/v2/groups/{groupId}/clusters/provider/regions":
    get:
      description: Returns the list of regions available for the specified cloud
        provider at the specified tier. To use this resource, the requesting API
        Key must have the Project Read Only role.
      operationId: listCloudProviderRegions
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
        - description: Cloud providers whose regions to retrieve. When you specify
            multiple providers, the response can return only tiers and regions
            that support multi-cloud clusters.
          in: query
          name: providers
          schema:
            type: array
            items:
              type: string
        - description: Cluster tier for which to retrieve the regions.
          in: query
          name: tier
          schema:
            type: string
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedApiAtlasProviderRegions"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Cloud Provider Regions
      tags:
        - Clusters
  "/api/atlas/v2/groups/{groupId}/clusters/tenantUpgrade":
    post:
      description: Upgrades a shared-tier cluster in the specified project. To use
        this resource, the requesting API key must have the Project Cluster
        Manager role. Each project supports up to 25 clusters.
      operationId: upgradeSharedCluster
      parameters:
        - $ref: "#/components/parameters/groupId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/LegacyAtlasTenantClusterUpgradeRequest"
        description: Details of the shared-tier cluster upgrade in the specified project.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/LegacyAtlasCluster"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "402":
          $ref: "#/components/responses/paymentRequired"
        "403":
          $ref: "#/components/responses/forbidden"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Upgrade One Shared-tier Cluster
      tags:
        - Clusters
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/clusters/tenantUpgradeToServerless":
    post:
      description: Upgrades a shared-tier cluster to a serverless instance in the
        specified project. To use this resource, the requesting API key must
        have the Project Cluster Manager role.
      operationId: upgradeSharedClusterToServerless
      parameters:
        - $ref: "#/components/parameters/groupId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/ServerlessInstanceDescription"
        description: Details of the shared-tier cluster upgrade in the specified project.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/ServerlessInstanceDescription"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "402":
          $ref: "#/components/responses/paymentRequired"
        "403":
          $ref: "#/components/responses/forbidden"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Upgrades One Shared-Tier Cluster to the Serverless Instance
      tags:
        - Clusters
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}":
    delete:
      description: "Removes one cluster from the specified project. The cluster must
        have termination protection disabled in order to be deleted. To use this
        resource, the requesting API Key must have the Project Owner role. This
        feature is not available for serverless clusters. Deprecated versions:
        v2-{2023-01-01}"
      operationId: deleteCluster
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        - description: Flag that indicates whether to retain backup snapshots for the
            deleted dedicated cluster.
          in: query
          name: retainBackups
          schema:
            type: boolean
      responses:
        "202":
          content:
            application/vnd.atlas.2023-02-01+json:
              x-xgen-version: 2023-02-01
          description: Accepted
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Remove One Cluster from One Project
      tags:
        - Clusters
    get:
      description: "Returns the details for one cluster in the specified project.
        Clusters contain a group of hosts that maintain the same data set. The
        response includes multi-cloud clusters. To use this resource, the
        requesting API Key must have the Project Read Only role. This feature is
        not available for serverless clusters. Deprecated versions:
        v2-{2023-01-01}"
      operationId: getCluster
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies this cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-02-01+json:
              schema:
                $ref: "#/components/schemas/AdvancedClusterDescription"
              x-xgen-version: 2023-02-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Cluster from One Project
      tags:
        - Clusters
    patch:
      description: "Updates the details for one cluster in the specified project.
        Clusters contain a group of hosts that maintain the same data set. This
        resource can update multi-cloud clusters. To update a cluster's
        termination protection, the requesting API Key must have the Project
        Owner role. For all other updates, the requesting API Key must have the
        Project Cluster Manager role. You can't modify a paused cluster (`paused
        : true`). You must call this endpoint to set `paused : false`. After
        this endpoint responds with `paused : false`, you can call it again with
        the changes you want to make to the cluster. This feature is not
        available for serverless clusters. Deprecated versions: v2-{2023-01-01}"
      operationId: updateCluster
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      requestBody:
        content:
          application/vnd.atlas.2023-02-01+json:
            schema:
              $ref: "#/components/schemas/AdvancedClusterDescription"
        description: Cluster to update in the specified project.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-02-01+json:
              schema:
                $ref: "#/components/schemas/AdvancedClusterDescription"
              x-xgen-version: 2023-02-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Modify One Cluster from One Project
      tags:
        - Clusters
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/exports":
    get:
      description: Returns all Cloud Backup snapshot export jobs associated with the
        specified Atlas cluster. To use this resource, the requesting API Key
        must have the Project Atlas Admin role.
      operationId: listBackupExportJobs
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
        - description: Human-readable label that identifies the cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedApiAtlasDiskBackupExportJob"
              x-xgen-version: 2023-01-01
          description: OK
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Cloud Backup Snapshot Export Jobs
      tags:
        - Cloud Backups
    post:
      description: Exports one backup snapshot for dedicated Atlas cluster using Cloud
        Backups to an AWS bucket. To use this resource, the requesting API Key
        must have the Project Atlas Admin role.
      operationId: createBackupExportJob
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/DiskBackupExportJobRequest"
        description: Information about the Cloud Backup Snapshot Export Job to create.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/DiskBackupExportJob"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Create One Cloud Backup Snapshot Export Job
      tags:
        - Cloud Backups
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/exports/{exportId}":
    get:
      description: Returns one Cloud Backup snapshot export job associated with the
        specified Atlas cluster. To use this resource, the requesting API Key
        must have the Project Atlas Admin role.
      operationId: getBackupExportJob
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        - description: Unique string that identifies the AWS S3 bucket to which you export
            your snapshots.
          in: path
          name: exportId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/DiskBackupExportJob"
              x-xgen-version: 2023-01-01
          description: OK
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Cloud Backup Snapshot Export Job
      tags:
        - Cloud Backups
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/restoreJobs":
    get:
      description: Returns all cloud backup restore jobs for one cluster from the
        specified project. To use this resource, the requesting API Key must
        have the Project Owner role.
      operationId: listBackupRestoreJobs
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
        - description: Human-readable label that identifies the cluster with the restore
            jobs you want to return.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedCloudBackupRestoreJob"
              x-xgen-version: 2023-01-01
          description: OK
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Restore Jobs for One Cluster
      tags:
        - Cloud Backups
    post:
      description: >-
        Restores one snapshot of one cluster from the specified project. Atlas
        takes on-demand snapshots immediately and scheduled snapshots at regular
        intervals. If an on-demand snapshot with a status of **queued** or
        **inProgress** exists, before taking another snapshot, wait until Atlas
        completes completes processing the previously taken on-demand snapshot.

         To use this resource, the requesting API Key must have the Project Owner role.
      operationId: createBackupRestoreJob
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/DiskBackupSnapshotRestoreJob"
        description: Restores one snapshot of one cluster from the specified project.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/DiskBackupSnapshotRestoreJob"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Restore One Snapshot of One Cluster
      tags:
        - Cloud Backups
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/restoreJobs/{restoreJobId}":
    delete:
      description: Cancels one cloud backup restore job of one cluster from the
        specified project. To use this resource, the requesting API Key must
        have the Project Owner role.
      operationId: cancelBackupRestoreJob
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        - description: Unique 24-hexadecimal digit string that identifies the restore job
            to remove.
          in: path
          name: restoreJobId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/NoBody"
              x-xgen-version: 2023-01-01
          description: This endpoint does not return a response body.
        "400":
          $ref: "#/components/responses/badRequest"
        "405":
          $ref: "#/components/responses/methodNotAllowed"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Cancel One Restore Job of One Cluster
      tags:
        - Cloud Backups
      x-xgen-experimental: true
    get:
      description: Returns one cloud backup restore job for one cluster from the
        specified project. To use this resource, the requesting API Key must
        have the Project Owner role.
      operationId: getBackupRestoreJob
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster with the restore
            jobs you want to return.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        - description: Unique 24-hexadecimal digit string that identifies the restore job
            to return.
          in: path
          name: restoreJobId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/DiskBackupSnapshotRestoreJob"
              x-xgen-version: 2023-01-01
          description: OK
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Restore Job of One Cluster
      tags:
        - Cloud Backups
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/schedule":
    delete:
      description: Removes all cloud backup schedules for the specified cluster. This
        schedule defines when MongoDB Cloud takes scheduled snapshots and how
        long it stores those snapshots. To use this resource, the requesting API
        Key must have the Project Atlas Admin role.
      operationId: deleteAllBackupSchedules
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/DiskBackupSnapshotSchedule"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Remove All Cloud Backup Schedules
      tags:
        - Cloud Backups
    get:
      description: Returns the cloud backup schedule for the specified cluster within
        the specified project. This schedule defines when MongoDB Cloud takes
        scheduled snapshots and how long it stores those snapshots. To use this
        resource, the requesting API Key must have the Project Read Only role.
      operationId: getBackupSchedule
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/DiskBackupSnapshotSchedule"
              x-xgen-version: 2023-01-01
          description: OK
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Cloud Backup Schedule
      tags:
        - Cloud Backups
    patch:
      description: Updates the cloud backup schedule for one cluster within the
        specified project. This schedule defines when MongoDB Cloud takes
        scheduled snapshots and how long it stores those snapshots. To use this
        resource, the requesting API Key must have the Project Owner role.
      operationId: updateBackupSchedule
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/DiskBackupSnapshotSchedule"
        description: >-
          Updates the cloud backup schedule for one cluster within the specified
          project.


          **Note**: In the request body, provide only the fields that you want to update.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/DiskBackupSnapshotSchedule"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Update Cloud Backup Schedule for One Cluster
      tags:
        - Cloud Backups
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/snapshots":
    get:
      description: Returns all snapshots of one cluster from the specified project. To
        use this resource, the requesting API Key must have the Project Read
        Only role.
      operationId: listReplicaSetBackups
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
        - description: Human-readable label that identifies the cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedCloudBackupReplicaSet"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Replica Set Cloud Backups
      tags:
        - Cloud Backups
    post:
      description: >-
        Takes one on-demand snapshot for the specified cluster. Atlas takes
        on-demand snapshots immediately and scheduled snapshots at regular
        intervals. If an on-demand snapshot with a status of **queued** or
        **inProgress** exists, before taking another snapshot, wait until Atlas
        completes completes processing the previously taken on-demand snapshot.

         To use this resource, the requesting API Key must have the Project Owner role.
      operationId: takeSnapshot
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/DiskBackupOnDemandSnapshotRequest"
        description: Takes one on-demand snapshot.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/DiskBackupSnapshot"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Take One On-Demand Snapshot
      tags:
        - Cloud Backups
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/snapshots/shardedCluster/{snapshotId}":
    delete:
      description: Removes one snapshot of one sharded cluster from the specified
        project. To use this resource, the requesting API Key must have the
        Project Owner role.
      operationId: deleteShardedClusterBackup
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        - description: Unique 24-hexadecimal digit string that identifies the desired
            snapshot.
          in: path
          name: snapshotId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/NoBody"
              x-xgen-version: 2023-01-01
          description: This endpoint does not return a response body.
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Remove One Sharded Cluster Cloud Backup
      tags:
        - Cloud Backups
      x-xgen-experimental: true
    get:
      description: Returns one snapshot of one sharded cluster from the specified
        project. To use this resource, the requesting API Key must have the
        Project Read Only role.
      operationId: getShardedClusterBackup
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        - description: Unique 24-hexadecimal digit string that identifies the desired
            snapshot.
          in: path
          name: snapshotId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/DiskBackupShardedClusterSnapshot"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Sharded Cluster Cloud Backup
      tags:
        - Cloud Backups
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/snapshots/shardedClusters":
    get:
      description: Returns all snapshots of one sharded cluster from the specified
        project. To use this resource, the requesting API Key must have the
        Project Read Only role.
      operationId: listShardedClusterBackups
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedCloudBackupShardedClusterSnapshot"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Sharded Cluster Cloud Backups
      tags:
        - Cloud Backups
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/snapshots/{snapshotId}":
    delete:
      description: Removes the specified snapshot. To use this resource, the
        requesting API Key must have the Project Owner role.
      operationId: deleteReplicaSetBackup
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        - description: Unique 24-hexadecimal digit string that identifies the desired
            snapshot.
          in: path
          name: snapshotId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/NoBody"
              x-xgen-version: 2023-01-01
          description: This endpoint does not return a response body.
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Remove One Replica Set Cloud Backup
      tags:
        - Cloud Backups
    get:
      description: Returns one snapshot from the specified cluster. To use this
        resource, the requesting API Key must have the Project Read Only role.
      operationId: getReplicaSetBackup
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        - description: Unique 24-hexadecimal digit string that identifies the desired
            snapshot.
          in: path
          name: snapshotId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/DiskBackupReplicaSet"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Replica Set Cloud Backup
      tags:
        - Cloud Backups
    patch:
      description: Changes the expiration date for one cloud backup snapshot for one
        cluster in the specified project.
      operationId: updateSnapshotRetention
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        - description: Unique 24-hexadecimal digit string that identifies the desired
            snapshot.
          in: path
          name: snapshotId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/BackupSnapshotRetention"
        description: Changes the expiration date for one cloud backup snapshot for one
          cluster in the specified project.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/DiskBackupReplicaSet"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Change Expiration Date for One Cloud Backup
      tags:
        - Cloud Backups
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/tenant/download":
    post:
      description: Requests one snapshot for the specified shared cluster. This
        resource returns a `snapshotURL` that you can use to download the
        snapshot. This `snapshotURL` remains active for four hours after you
        make the request. To use this resource, the requesting API Key must have
        the Project Owner role.
      operationId: downloadSharedClusterBackup
      parameters:
        - description: Human-readable label that identifies the cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        - $ref: "#/components/parameters/groupId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/TenantRestore"
        description: Snapshot to be downloaded.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/TenantRestore"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Download One M2 or M5 Cluster Snapshot
      tags:
        - Shared-Tier Snapshots
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/tenant/restore":
    post:
      description: Restores the specified cluster. MongoDB Cloud limits which clusters
        can be the target clusters of a restore. The target cluster can't use
        encryption at rest, run a major release MongoDB version different than
        the snapshot, or receive client requests during restores. MongoDB Cloud
        deletes all existing data on the target cluster prior to the restore
        operation. To use this resource, the requesting API Key must have the
        Project Owner role.
      operationId: createSharedClusterBackupRestoreJob
      parameters:
        - description: Human-readable label that identifies the cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        - $ref: "#/components/parameters/groupId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/TenantRestore"
        description: The restore job details.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/TenantRestore"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Create One Restore Job from One M2 or M5 Cluster
      tags:
        - Shared-Tier Restore Jobs
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/tenant/restores":
    get:
      description: Returns all restore jobs for the specified M2 or M5 cluster.
        Restore jobs restore a cluster using a snapshot. To use this resource,
        the requesting API Key must have the Project Read Only role.
      operationId: listSharedClusterBackupRestoreJobs
      parameters:
        - description: Human-readable label that identifies the cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        - $ref: "#/components/parameters/groupId"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedTenantRestore"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Restore Jobs for One M2 or M5 Cluster
      tags:
        - Shared-Tier Restore Jobs
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/tenant/restores/{restoreId}":
    get:
      description: Returns the specified restore job. To use this resource, the
        requesting API Key must have the Project Read Only role.
      operationId: getSharedClusterBackupRestoreJob
      parameters:
        - description: Human-readable label that identifies the cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        - $ref: "#/components/parameters/groupId"
        - description: Unique 24-hexadecimal digit string that identifies the restore job
            to return.
          in: path
          name: restoreId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/TenantRestore"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Restore Job for One M2 or M5 Cluster
      tags:
        - Shared-Tier Restore Jobs
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/tenant/snapshots":
    get:
      description: Returns details for all snapshots for the specified shared cluster.
        To use this resource, the requesting API Key must have the Project Read
        Only role.
      operationId: listSharedClusterBackups
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedTenantSnapshot"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Snapshots for One M2 or M5 Cluster
      tags:
        - Shared-Tier Snapshots
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/tenant/snapshots/{snapshotId}":
    get:
      description: Returns details for one snapshot for the specified shared cluster.
        To use this resource, the requesting API Key must have the Project Read
        Only role.
      operationId: getSharedClusterBackup
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        - description: Unique 24-hexadecimal digit string that identifies the desired
            snapshot.
          in: path
          name: snapshotId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/BackupTenantSnapshot"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Snapshot for One M2 or M5 Cluster
      tags:
        - Shared-Tier Snapshots
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backupCheckpoints":
    get:
      deprecated: true
      description: Returns all legacy backup checkpoints for one cluster in the
        specified project. To use this resource, the requesting API Key must
        have the Project Read Only role.
      operationId: listLegacyBackupCheckpoints
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
        - description: Human-readable label that identifies the cluster that contains the
            checkpoints that you want to return.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedApiAtlasCheckpoint"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Legacy Backup Checkpoints
      tags:
        - Legacy Backup
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backupCheckpoints/{checkpointId}":
    get:
      deprecated: true
      description: Returns one legacy backup checkpoint for one cluster in the
        specified project. To use this resource, the requesting API Key must
        have the Project Read Only role.
      operationId: getLegacyBackupCheckpoint
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Unique 24-hexadecimal digit string that identifies the checkpoint.
          in: path
          name: checkpointId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
        - description: Human-readable label that identifies the cluster that contains the
            checkpoints that you want to return.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/ApiAtlasCheckpoint"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Legacy Backup Checkpoint
      tags:
        - Legacy Backup
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/collStats/pinned":
    get:
      description: Returns a list of given cluster's pinned namespaces, a set of
        namespaces manually selected by users to collect query latency metrics
        on.
      operationId: getPinnedNamespaces
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster to retrieve pinned
            namespaces for.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-11-15+json:
              schema:
                $ref: "#/components/schemas/PinnedNamespaces"
              x-xgen-version: 2023-11-15
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return Pinned Namespaces
      tags:
        - Collection Level Metrics
      x-xgen-experimental: true
    patch:
      description: Add provided list of namespaces to existing pinned namespaces list
        for collection-level latency metrics collection for the given Group and
        Cluster
      operationId: pinNamespacesPatch
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster to pin namespaces
            to.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      requestBody:
        content:
          application/vnd.atlas.2023-11-15+json:
            schema:
              $ref: "#/components/schemas/NamespacesRequest"
        description: List of namespace strings (combination of database and collection
          name) to pin for query latency metric collection.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-11-15+json:
              schema:
                $ref: "#/components/schemas/PinnedNamespaces"
              x-xgen-version: 2023-11-15
          description: OK
        "201":
          content:
            application/vnd.atlas.2023-11-15+json:
              schema:
                $ref: "#/components/schemas/PinnedNamespaces"
              x-xgen-version: 2023-11-15
          description: Created
        "400":
          $ref: "#/components/responses/badRequest"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Add Pinned Namespaces
      tags:
        - Collection Level Metrics
      x-xgen-experimental: true
    put:
      description: Pin provided list of namespaces for collection-level latency
        metrics collection for the given Group and Cluster. This initializes a
        pinned namespaces list or replaces any existing pinned namespaces list
        for the Group and Cluster.
      operationId: pinNamespacesPut
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster to pin namespaces
            to.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      requestBody:
        content:
          application/vnd.atlas.2023-11-15+json:
            schema:
              $ref: "#/components/schemas/NamespacesRequest"
        description: List of namespace strings (combination of database and collection
          name) to pin for query latency metric collection.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-11-15+json:
              schema:
                $ref: "#/components/schemas/PinnedNamespaces"
              x-xgen-version: 2023-11-15
          description: OK
        "201":
          content:
            application/vnd.atlas.2023-11-15+json:
              schema:
                $ref: "#/components/schemas/PinnedNamespaces"
              x-xgen-version: 2023-11-15
          description: Created
        "400":
          $ref: "#/components/responses/badRequest"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Pin Namespaces
      tags:
        - Collection Level Metrics
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/collStats/unpin":
    patch:
      description: Unpin provided list of namespaces for collection-level latency
        metrics collection for the given Group and Cluster
      operationId: unpinNamespaces
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster to unpin
            namespaces from.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      requestBody:
        content:
          application/vnd.atlas.2023-11-15+json:
            schema:
              $ref: "#/components/schemas/NamespacesRequest"
        description: List of namespace strings (combination of database and collection
          name) to pin for query latency metric collection.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-11-15+json:
              schema:
                $ref: "#/components/schemas/PinnedNamespaces"
              x-xgen-version: 2023-11-15
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Unpin namespaces
      tags:
        - Collection Level Metrics
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/fts/indexes":
    post:
      description: Creates one Atlas Search index on the specified collection. Atlas
        Search indexes define the fields on which to create the index and the
        analyzers to use when creating the index. Only clusters running MongoDB
        v4.2 or later can use Atlas Search. To use this resource, the requesting
        API Key must have the Project Data Access Admin role.
      externalDocs:
        description: Atlas Search Indexes
        url: https://docs.atlas.mongodb.com/reference/atlas-search/index-definitions/
      operationId: createAtlasSearchIndex
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Name of the cluster that contains the collection on which to create
            an Atlas Search index.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/ClusterSearchIndex"
        description: Creates one Atlas Search index on the specified collection.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/ClusterSearchIndex"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Create One Atlas Search Index
      tags:
        - Atlas Search
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/fts/indexes/{databaseName}/{collectionName}":
    get:
      description: Returns all Atlas Search indexes on the specified collection. Atlas
        Search indexes contain the indexed fields and the analyzers used to
        create the indexes. To use this resource, the requesting API Key must
        have the Project Data Access Read Write role.
      externalDocs:
        description: Atlas Search Indexes
        url: https://docs.atlas.mongodb.com/reference/atlas-search/index-definitions/
      operationId: listAtlasSearchIndexes
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Name of the cluster that contains the collection with one or more
            Atlas Search indexes.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        - description: Name of the collection that contains one or more Atlas Search
            indexes.
          in: path
          name: collectionName
          required: true
          schema:
            type: string
        - description: Human-readable label that identifies the database that contains the
            collection with one or more Atlas Search indexes.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ClusterSearchIndex"
              x-xgen-version: 2023-01-01
          description: OK
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Atlas Search Indexes for One Collection
      tags:
        - Atlas Search
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/fts/indexes/{indexId}":
    delete:
      description: Removes one Atlas Search index that you identified with its unique
        ID. To use this resource, the requesting API Key must have the Project
        Data Access Admin role.
      externalDocs:
        description: Atlas Search Indexes
        url: https://docs.atlas.mongodb.com/reference/atlas-search/index-definitions/
      operationId: deleteAtlasSearchIndex
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Name of the cluster that contains the database and collection with
            one or more Application Search indexes.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        - description: Unique 24-hexadecimal digit string that identifies the Atlas Search
            index. Use the [Get All Atlas Search Indexes for a Collection
            API](https://docs.atlas.mongodb.com/reference/api/fts-indexes-get-all/)
            endpoint to find the IDs of all Atlas Search indexes.
          in: path
          name: indexId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/NoBody"
              x-xgen-version: 2023-01-01
          description: This endpoint does not return a response body.
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Remove One Atlas Search Index
      tags:
        - Atlas Search
    get:
      description: Returns one Atlas Search index in the specified project. You
        identify this index using its unique ID. Atlas Search index contains the
        indexed fields and the analyzers used to create the index. To use this
        resource, the requesting API Key must have the Project Data Access Read
        Write role.
      externalDocs:
        description: Atlas Search Indexes
        url: https://docs.atlas.mongodb.com/reference/atlas-search/index-definitions/
      operationId: getAtlasSearchIndex
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Name of the cluster that contains the collection with one or more
            Atlas Search indexes.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        - description: Unique 24-hexadecimal digit string that identifies the Application
            Search
            [index](https://docs.atlas.mongodb.com/reference/atlas-search/index-definitions/).
            Use the [Get All Application Search Indexes for a Collection
            API](https://docs.atlas.mongodb.com/reference/api/fts-indexes-get-all/)
            endpoint to find the IDs of all Application Search indexes.
          in: path
          name: indexId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/ClusterSearchIndex"
              x-xgen-version: 2023-01-01
          description: OK
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Atlas Search Index
      tags:
        - Atlas Search
    patch:
      description: Updates one Atlas Search index that you identified with its unique
        ID. Atlas Search indexes define the fields on which to create the index
        and the analyzers to use when creating the index. To use this resource,
        the requesting API Key must have the Project Data Access Admin role.
      externalDocs:
        description: Atlas Search Indexes
        url: https://docs.atlas.mongodb.com/reference/atlas-search/index-definitions/
      operationId: updateAtlasSearchIndex
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Name of the cluster that contains the collection whose Atlas Search
            index to update.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        - description: Unique 24-hexadecimal digit string that identifies the Atlas Search
            [index](https://docs.atlas.mongodb.com/reference/atlas-search/index-definitions/).
            Use the [Get All Atlas Search Indexes for a Collection
            API](https://docs.atlas.mongodb.com/reference/api/fts-indexes-get-all/)
            endpoint to find the IDs of all Atlas Search indexes.
          in: path
          name: indexId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/ClusterSearchIndex"
        description: Details to update on the Atlas Search index.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/ClusterSearchIndex"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Update One Atlas Search Index
      tags:
        - Atlas Search
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/globalWrites":
    get:
      description: "Returns one managed namespace within the specified global cluster.
        A managed namespace identifies a collection using the database name, the
        dot separator, and the collection name. To use this resource, the
        requesting API Key must have the Project Read Only role. Deprecated
        versions: v2-{2023-01-01}"
      externalDocs:
        description: Global Clusters
        url: https://www.mongodb.com/docs/atlas/global-clusters/
      operationId: getManagedNamespace
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies this cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-02-01+json:
              schema:
                $ref: "#/components/schemas/GeoSharding"
              x-xgen-version: 2023-02-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Managed Namespace in One Global Cluster
      tags:
        - Global Clusters
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/globalWrites/customZoneMapping":
    delete:
      description: "Removes all custom zone mappings for the specified global cluster.
        A custom zone mapping matches one ISO 3166-2 location code to a zone in
        your global cluster. Removing the custom zone mappings restores the
        default mapping. By default, MongoDB Cloud maps each location code to
        the closest geographical zone. To use this resource, the requesting API
        Key must have the Project Owner role. Deprecated versions:
        v2-{2023-01-01}"
      externalDocs:
        description: Global Clusters
        url: https://www.mongodb.com/docs/atlas/global-clusters/
      operationId: deleteAllCustomZoneMappings
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies this cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-02-01+json:
              schema:
                $ref: "#/components/schemas/GeoSharding"
              x-xgen-version: 2023-02-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Remove All Custom Zone Mappings from One Global Cluster
      tags:
        - Global Clusters
      x-xgen-experimental: true
    post:
      description: "Creates one custom zone mapping for the specified global cluster.
        A custom zone mapping matches one ISO 3166-2 location code to a zone in
        your global cluster. By default, MongoDB Cloud maps each location code
        to the closest geographical zone. To use this resource, the requesting
        API Key must have the Project Owner role. Deprecated versions:
        v2-{2023-01-01}"
      externalDocs:
        description: Global Clusters
        url: https://www.mongodb.com/docs/atlas/global-clusters/
      operationId: createCustomZoneMapping
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies this cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      requestBody:
        content:
          application/vnd.atlas.2023-02-01+json:
            schema:
              $ref: "#/components/schemas/CustomZoneMappings"
        description: Custom zone mapping to add to the specified global cluster.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-02-01+json:
              schema:
                $ref: "#/components/schemas/GeoSharding"
              x-xgen-version: 2023-02-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Add One Entry to One Custom Zone Mapping
      tags:
        - Global Clusters
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/globalWrites/managedNamespaces":
    delete:
      description: "Removes one managed namespace within the specified global cluster.
        A managed namespace identifies a collection using the database name, the
        dot separator, and the collection name. Deleting a managed namespace
        does not remove the associated collection or data. To use this resource,
        the requesting API Key must have the Project Data Access Admin role.
        Deprecated versions: v2-{2023-01-01}"
      externalDocs:
        description: Global Clusters
        url: https://www.mongodb.com/docs/atlas/global-clusters/
      operationId: deleteManagedNamespace
      parameters:
        - description: Human-readable label that identifies this cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the database that contains the
            collection.
          in: query
          name: db
          schema:
            type: string
        - description: Human-readable label that identifies the collection associated with
            the managed namespace.
          in: query
          name: collection
          schema:
            type: string
      responses:
        "200":
          content:
            application/vnd.atlas.2023-02-01+json:
              schema:
                $ref: "#/components/schemas/GeoSharding"
              x-xgen-version: 2023-02-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Remove One Managed Namespace from One Global Cluster
      tags:
        - Global Clusters
      x-xgen-experimental: true
    post:
      description: "Creates one managed namespace within the specified global cluster.
        A managed namespace identifies a collection using the database name, the
        dot separator, and the collection name. To use this resource, the
        requesting API Key must have the Project Data Access Admin role.
        Deprecated versions: v2-{2023-01-01}"
      externalDocs:
        description: Global Clusters
        url: https://www.mongodb.com/docs/atlas/global-clusters/
      operationId: createManagedNamespace
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies this cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      requestBody:
        content:
          application/vnd.atlas.2023-02-01+json:
            schema:
              $ref: "#/components/schemas/ManagedNamespace"
        description: Managed namespace to create within the specified global cluster.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-02-01+json:
              schema:
                $ref: "#/components/schemas/GeoSharding"
              x-xgen-version: 2023-02-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "405":
          $ref: "#/components/responses/methodNotAllowed"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Create One Managed Namespace in One Global Cluster
      tags:
        - Global Clusters
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/index":
    post:
      description: Creates an index on the cluster identified by its name in a rolling
        manner. Creating the index in this way allows index builds on one
        replica set member as a standalone at a time, starting with the
        secondary members. Creating indexes in this way requires at least one
        replica set election. To use this resource, the requesting API Key must
        have the Project Data Access Admin role.
      externalDocs:
        description: Rolling Index Builds on Replica Sets
        url: https://docs.mongodb.com/manual/tutorial/build-indexes-on-replica-sets/
      operationId: createRollingIndex
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster on which MongoDB
            Cloud creates an index.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            examples:
              2dspere Index:
                description: 2dspere Index
                value:
                  collation:
                    alternate: non-ignorable
                    backwards: false
                    caseFirst: lower
                    caseLevel: false
                    locale: af
                    maxVariable: punct
                    normalization: false
                    numericOrdering: false
                    strength: 3
                  collection: accounts
                  db: sample_airbnb
                  keys:
                    - property_type: "1"
                  options:
                    name: PartialIndexTest
                    partialFilterExpression:
                      limit:
                        $gt: 900
              Partial Index:
                description: Partial Index
                value:
                  collation:
                    alternate: non-ignorable
                    backwards: false
                    caseFirst: lower
                    caseLevel: false
                    locale: af
                    maxVariable: punct
                    normalization: false
                    numericOrdering: false
                    strength: 3
                  collection: accounts
                  db: sample_airbnb
                  keys:
                    - property_type: "1"
                  options:
                    name: PartialIndexTest
                    partialFilterExpression:
                      limit:
                        $gt: 900
              Sparse Index:
                description: Sparse Index
                value:
                  collation:
                    alternate: non-ignorable
                    backwards: false
                    caseFirst: lower
                    caseLevel: false
                    locale: af
                    maxVariable: punct
                    normalization: false
                    numericOrdering: false
                    strength: 3
                  collection: accounts
                  db: sample_airbnb
                  keys:
                    - test_field: "1"
                  options:
                    name: SparseIndexTest
                    sparse: true
            schema:
              $ref: "#/components/schemas/DatabaseRollingIndexRequest"
        description: Rolling index to create on the specified cluster.
        required: true
      responses:
        "202":
          content:
            application/vnd.atlas.2023-01-01+json:
              x-xgen-version: 2023-01-01
          description: Accepted
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Create One Rolling Index
      tags:
        - Rolling Index
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/onlineArchives":
    get:
      description: Returns details of all online archives. This archive stores data
        from one cluster within one project. To use this resource, the
        requesting API Key must have the Project Read Only role.
      externalDocs:
        description: Online Archive
        url: https://docs.atlas.mongodb.com/online-archive/manage-online-archive/#std-label-manage-online-archive
      operationId: listOnlineArchives
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
        - description: Human-readable label that identifies the cluster that contains the
            collection for which you want to return the online archives.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedOnlineArchive"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Online Archives for One Cluster
      tags:
        - Online Archive
    post:
      description: Creates one online archive. This archive stores data from one
        cluster within one project. To use this resource, the requesting API Key
        must have the Project Data Access Admin role.
      externalDocs:
        description: Online Archive
        url: https://docs.atlas.mongodb.com/online-archive/manage-online-archive/#std-label-manage-online-archive
      operationId: createOnlineArchive
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster that contains the
            collection for which you want to create one online archive.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/BackupOnlineArchiveCreate"
        description: Creates one online archive.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/BackupOnlineArchive"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Create One Online Archive
      tags:
        - Online Archive
      x-xgen-changelog:
        2023-08-02: If 'criteria':'DATE' is specified, then you must specify 'DATE'
          values in partition fields
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/onlineArchives/queryLogs.gz":
    get:
      description: Downloads query logs for the specified online archive. To use this
        resource, the requesting API Key must have the Project Data Access Read
        Only or higher role.
      externalDocs:
        description: Online Archive
        url: https://docs.atlas.mongodb.com/online-archive/manage-online-archive/#std-label-manage-online-archive
      operationId: downloadOnlineArchiveQueryLogs
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Date and time that specifies the starting point for the range of
            log messages to return. This resource expresses this value in the
            number of seconds that have elapsed since the [UNIX
            epoch](https://en.wikipedia.org/wiki/Unix_time).
          in: query
          name: startDate
          schema:
            type: integer
            format: int64
            example: 1636481348
            minimum: 1199145600
        - description: Date and time that specifies the end point for the range of log
            messages to return. This resource expresses this value in the number
            of seconds that have elapsed since the [UNIX
            epoch](https://en.wikipedia.org/wiki/Unix_time).
          in: query
          name: endDate
          schema:
            type: integer
            format: int64
            example: 1636481348
            minimum: 1199145600
        - description: Human-readable label that identifies the cluster that contains the
            collection for which you want to return the query logs from one
            online archive.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        - description: Flag that indicates whether to download logs for queries against
            your online archive only or both your online archive and cluster.
          in: query
          name: archiveOnly
          schema:
            type: boolean
            default: false
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+gzip:
              schema:
                type: string
                format: binary
                description: This resource downloads a compressed log file to your current
                  working directory. You can specify its name using the
                  `--output` option or use the default filename using the `-OJ`
                  option. The default filename varies based on whether you
                  download logs for queries of your online archive only or both
                  your online archive and cluster.
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Download Online Archive Query Logs
      tags:
        - Online Archive
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/onlineArchives/{archiveId}":
    delete:
      description: Removes one online archive. This archive stores data from one
        cluster within one project. To use this resource, the requesting API Key
        must have the Project Data Access Admin role.
      externalDocs:
        description: Online Archive
        url: https://docs.atlas.mongodb.com/online-archive/manage-online-archive/#std-label-manage-online-archive
      operationId: deleteOnlineArchive
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Unique 24-hexadecimal digit string that identifies the online
            archive to delete.
          in: path
          name: archiveId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
        - description: Human-readable label that identifies the cluster that contains the
            collection from which you want to remove an online archive.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/NoBody"
              x-xgen-version: 2023-01-01
          description: This endpoint does not return a response body.
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Remove One Online Archive
      tags:
        - Online Archive
    get:
      description: Returns one online archive for one cluster. This archive stores
        data from one cluster within one project. To use this resource, the
        requesting API Key must have the Project Read Only role.
      externalDocs:
        description: Online Archive
        url: https://docs.atlas.mongodb.com/online-archive/manage-online-archive/#std-label-manage-online-archive
      operationId: getOnlineArchive
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Unique 24-hexadecimal digit string that identifies the online
            archive to return.
          in: path
          name: archiveId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
        - description: Human-readable label that identifies the cluster that contains the
            specified collection from which Application created the online
            archive.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/BackupOnlineArchive"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Online Archive
      tags:
        - Online Archive
    patch:
      description: Updates, pauses, or resumes one online archive. This archive stores
        data from one cluster within one project. To use this resource, the
        requesting API Key must have the Project Data Access Admin role.
      externalDocs:
        description: Online Archive
        url: https://docs.atlas.mongodb.com/online-archive/manage-online-archive/#std-label-manage-online-archive
      operationId: updateOnlineArchive
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Unique 24-hexadecimal digit string that identifies the online
            archive to update.
          in: path
          name: archiveId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
        - description: Human-readable label that identifies the cluster that contains the
            specified collection from which Application created the online
            archive.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/BackupOnlineArchive"
        description: Updates, pauses, or resumes one online archive.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/BackupOnlineArchive"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Update One Online Archive
      tags:
        - Online Archive
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/outageSimulation":
    delete:
      description: Ends a cluster outage simulation.
      externalDocs:
        description: Cluster Outage Simulation
        url: https://dochub.mongodb.org/core/test-regional-outage
      operationId: endOutageSimulation
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster that is undergoing
            outage simulation.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/ClusterOutageSimulation"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: End an Outage Simulation
      tags:
        - Cluster Outage Simulation
      x-xgen-experimental: true
    get:
      description: Returns one outage simulation for one cluster.
      externalDocs:
        description: Cluster Outage Simulation
        url: https://dochub.mongodb.org/core/test-regional-outage
      operationId: getOutageSimulation
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster that is undergoing
            outage simulation.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/ClusterOutageSimulation"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Outage Simulation
      tags:
        - Cluster Outage Simulation
      x-xgen-experimental: true
    post:
      description: Starts a cluster outage simulation.
      externalDocs:
        description: Cluster Outage Simulation
        url: https://dochub.mongodb.org/core/test-regional-outage
      operationId: startOutageSimulation
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster to undergo an
            outage simulation.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/ClusterOutageSimulation"
        description: Describes the outage simulation.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/ClusterOutageSimulation"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Start an Outage Simulation
      tags:
        - Cluster Outage Simulation
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/processArgs":
    get:
      description: Returns the advanced configuration details for one cluster in the
        specified project. Clusters contain a group of hosts that maintain the
        same data set. Advanced configuration details include the read/write
        concern, index and oplog limits, and other database settings. This
        feature isn't available for `M0` free clusters, `M2` and `M5`
        shared-tier clusters, or serverless clusters. To use this resource, the
        requesting API Key must have the Project Read Only role.
      externalDocs:
        description: Global Clusters
        url: https://www.mongodb.com/docs/atlas/global-clusters/
      operationId: getClusterAdvancedConfiguration
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/ClusterDescriptionProcessArgs"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Advanced Configuration Options for One Cluster
      tags:
        - Clusters
    patch:
      description: Updates the advanced configuration details for one cluster in the
        specified project. Clusters contain a group of hosts that maintain the
        same data set. Advanced configuration details include the read/write
        concern, index and oplog limits, and other database settings. To use
        this resource, the requesting API Key must have the Project Cluster
        Manager role. This feature isn't available for `M0` free clusters, `M2`
        and `M5` shared-tier clusters, or serverless clusters.
      externalDocs:
        description: Global Clusters
        url: https://www.mongodb.com/docs/atlas/global-clusters/
      operationId: updateClusterAdvancedConfiguration
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/ClusterDescriptionProcessArgs"
        description: Advanced configuration details to add for one cluster in the
          specified project.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/ClusterDescriptionProcessArgs"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Update Advanced Configuration Options for One Cluster
      tags:
        - Clusters
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/restartPrimaries":
    post:
      description: "Starts a failover test for the specified cluster in the specified
        project. Clusters contain a group of hosts that maintain the same data
        set. A failover test checks how MongoDB Cloud handles the failure of the
        cluster's primary node. During the test, MongoDB Cloud shuts down the
        primary node and elects a new primary. To use this resource, the
        requesting API Key must have the Project Cluster Manager role.
        Deprecated versions: v2-{2023-01-01}"
      operationId: testFailover
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-02-01+json:
              x-xgen-version: 2023-02-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Test Failover for One Cluster
      tags:
        - Clusters
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/restoreJobs":
    get:
      deprecated: true
      description: >-
        Returns all legacy backup restore jobs for one cluster in the specified
        project. To use this resource, the requesting API Key must have the
        Project Read Only role.

         Effective 23 March 2020, all new clusters can use only Cloud Backups. When you upgrade to 4.2, your backup system upgrades to cloud backup if it is currently set to legacy backup. After this upgrade, all your existing legacy backup snapshots remain available. They expire over time in accordance with your retention policy. Your backup policy resets to the default schedule. If you had a custom backup policy in place with legacy backups, you must re-create it with the procedure outlined in the [Cloud Backup documentation](https://www.mongodb.com/docs/atlas/backup/cloud-backup/scheduling/#std-label-cloud-provider-backup-schedule). If you use the `BATCH-ID` query parameter, you can retrieve all restore jobs in the specified batch. When creating a restore job for a sharded cluster, MongoDB Cloud creates a separate job for each shard, plus another for the config server. Each of those jobs are part of a batch. However, a batch can't include a restore job for a replica set.
      operationId: listLegacyBackupRestoreJobs
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
        - description: Unique 24-hexadecimal digit string that identifies the batch of
            restore jobs to return. Timestamp in ISO 8601 date and time format
            in UTC when creating a restore job for a sharded cluster,
            Application creates a separate job for each shard, plus another for
            the config host. Each of these jobs comprise one batch. A restore
            job for a replica set can't be part of a batch.
          in: query
          name: batchId
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
        - description: Human-readable label that identifies the cluster with the snapshot
            you want to return.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedRestoreJob"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Legacy Backup Restore Jobs
      tags:
        - Legacy Backup
      x-xgen-experimental: true
    post:
      deprecated: true
      description: Restores one legacy backup for one cluster in the specified
        project. To use this resource, the requesting API Key must have the
        Project Owner role. Effective 23 March 2020, all new clusters can use
        only Cloud Backups. When you upgrade to 4.2, your backup system upgrades
        to cloud backup if it is currently set to legacy backup. After this
        upgrade, all your existing legacy backup snapshots remain available.
        They expire over time in accordance with your retention policy. Your
        backup policy resets to the default schedule. If you had a custom backup
        policy in place with legacy backups, you must re-create it with the
        procedure outlined in the [Cloud Backup
        documentation](https://www.mongodb.com/docs/atlas/backup/cloud-backup/scheduling/#std-label-cloud-provider-backup-schedule).
        This endpoint doesn't support creating checkpoint restore jobs for
        sharded clusters, or creating restore jobs for queryable backup
        snapshots. If you create an automated restore job by specifying
        `delivery.methodName` of `AUTOMATED_RESTORE` in your request body,
        MongoDB Cloud removes all existing data on the target cluster prior to
        the restore.
      operationId: createLegacyBackupRestoreJob
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster with the snapshot
            you want to return.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/BackupRestoreJob"
        description: Legacy backup to restore to one cluster in the specified project.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedRestoreJob"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Create One Legacy Backup Restore Job
      tags:
        - Legacy Backup Restore Jobs
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/restoreJobs/{jobId}":
    get:
      deprecated: true
      description: >-
        Returns one legacy backup restore job for one cluster in the specified
        project. To use this resource, the requesting API Key must have the
        Project Read Only role.

         Effective 23 March 2020, all new clusters can use only Cloud Backups. When you upgrade to 4.2, your backup system upgrades to cloud backup if it is currently set to legacy backup. After this upgrade, all your existing legacy backup snapshots remain available. They expire over time in accordance with your retention policy. Your backup policy resets to the default schedule. If you had a custom backup policy in place with legacy backups, you must re-create it with the procedure outlined in the [Cloud Backup documentation](https://www.mongodb.com/docs/atlas/backup/cloud-backup/scheduling/#std-label-cloud-provider-backup-schedule).
      operationId: getLegacyBackupRestoreJob
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster with the snapshot
            you want to return.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        - description: Unique 24-hexadecimal digit string that identifies the restore job.
          in: path
          name: jobId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/BackupRestoreJob"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Legacy Backup Restore Job
      tags:
        - Legacy Backup
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/search/deployment":
    delete:
      description: Deletes the Search Nodes for the specified cluster.
      operationId: deleteAtlasSearchDeployment
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Label that identifies the cluster to delete.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Delete Search Nodes
      tags:
        - Atlas Search
      x-xgen-experimental: true
    get:
      description: Return the Search Nodes for the specified cluster.
      operationId: getAtlasSearchDeployment
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Label that identifies the cluster to return the Search Nodes for.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/ApiSearchDeploymentResponse"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return Search Nodes
      tags:
        - Atlas Search
      x-xgen-experimental: true
    patch:
      description: Updates the Search Nodes for the specified cluster.
      operationId: updateAtlasSearchDeployment
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Label that identifies the cluster to update the Search Nodes for.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/ApiSearchDeploymentRequest"
        description: Updates the Search Nodes for the specified cluster.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/ApiSearchDeploymentResponse"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Update Search Nodes
      tags:
        - Atlas Search
      x-xgen-experimental: true
    post:
      description: Creates Search Nodes for the specified cluster.
      operationId: createAtlasSearchDeployment
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Label that identifies the cluster to create Search Nodes for.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/ApiSearchDeploymentRequest"
        description: Creates Search Nodes for the specified cluster.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/ApiSearchDeploymentResponse"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Create Search Nodes
      tags:
        - Atlas Search
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/snapshotSchedule":
    get:
      deprecated: true
      description: >-
        Returns the snapshot schedule for one cluster in the specified project.
        To use this resource, the requesting API Key must have the Project Read
        Only role.

         Effective 23 March 2020, all new clusters can use only Cloud Backups. When you upgrade to 4.2, your backup system upgrades to cloud backup if it is currently set to legacy backup. After this upgrade, all your existing legacy backup snapshots remain available. They expire over time in accordance with your retention policy. Your backup policy resets to the default schedule. If you had a custom backup policy in place with legacy backups, you must re-create it with the procedure outlined in the [Cloud Backup documentation](https://www.mongodb.com/docs/atlas/backup/cloud-backup/scheduling/#std-label-cloud-provider-backup-schedule).
      operationId: getLegacySnapshotSchedule
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster with the snapshot
            you want to return.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/ApiAtlasSnapshotSchedule"
              x-xgen-version: 2023-01-01
          description: OK
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Snapshot Schedule
      tags:
        - Legacy Backup
      x-xgen-experimental: true
    patch:
      deprecated: true
      description: >-
        Updates the snapshot schedule for one cluster in the specified project.
        To use this resource, the requesting API Key must have the Project Owner
        role.

         Effective 23 March 2020, all new clusters can use only Cloud Backups. When you upgrade to 4.2, your backup system upgrades to cloud backup if it is currently set to legacy backup. After this upgrade, all your existing legacy backup snapshots remain available. They expire over time in accordance with your retention policy. Your backup policy resets to the default schedule. If you had a custom backup policy in place with legacy backups, you must re-create it with the procedure outlined in the [Cloud Backup documentation](https://www.mongodb.com/docs/atlas/backup/cloud-backup/scheduling/#std-label-cloud-provider-backup-schedule).
      operationId: updateLegacySnapshotSchedule
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster with the snapshot
            you want to return.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/ApiAtlasSnapshotSchedule"
        description: Update the snapshot schedule for one cluster in the specified project.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/ApiAtlasSnapshotSchedule"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Update Snapshot Schedule for One Cluster
      tags:
        - Legacy Backup
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/snapshots":
    get:
      deprecated: true
      description: Returns all legacy backup snapshots for one cluster in the
        specified project. To use this resource, the requesting API Key must
        have the Project Read Only role. Effective 23 March 2020, all new
        clusters can use only Cloud Backups. When you upgrade to 4.2, your
        backup system upgrades to cloud backup if it is currently set to legacy
        backup. After this upgrade, all your existing legacy backup snapshots
        remain available. They expire over time in accordance with your
        retention policy. Your backup policy resets to the default schedule. If
        you had a custom backup policy in place with legacy backups, you must
        re-create it with the procedure outlined in the [Cloud Backup
        documentation](https://www.mongodb.com/docs/atlas/backup/cloud-backup/scheduling/#std-label-cloud-provider-backup-schedule).
      operationId: listLegacySnapshots
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
        - description: Human-readable label that identifies the cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        - description: Human-readable label that specifies whether to return only
            completed, incomplete, or all snapshots. By default, MongoDB Cloud
            only returns completed snapshots.
          in: query
          name: completed
          schema:
            type: string
            default: "true"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedSnapshot"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Legacy Backup Snapshots
      tags:
        - Legacy Backup
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/snapshots/{snapshotId}":
    delete:
      deprecated: true
      description: Removes one legacy backup snapshot for one cluster in the specified
        project. To use this resource, the requesting API Key must have the
        Project Owner role. Effective 23 March 2020, all new clusters can use
        only Cloud Backups. When you upgrade to 4.2, your backup system upgrades
        to cloud backup if it is currently set to legacy backup. After this
        upgrade, all your existing legacy backup snapshots remain available.
        They expire over time in accordance with your retention policy. Your
        backup policy resets to the default schedule. If you had a custom backup
        policy in place with legacy backups, you must re-create it with the
        procedure outlined in the [Cloud Backup
        documentation](https://www.mongodb.com/docs/atlas/backup/cloud-backup/scheduling/#std-label-cloud-provider-backup-schedule).
      operationId: deleteLegacySnapshot
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        - description: Unique 24-hexadecimal digit string that identifies the desired
            snapshot.
          in: path
          name: snapshotId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/NoBody"
              x-xgen-version: 2023-01-01
          description: This endpoint does not return a response body.
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Remove One Legacy Backup Snapshot
      tags:
        - Legacy Backup
      x-xgen-experimental: true
    get:
      deprecated: true
      description: Returns one legacy backup snapshot for one cluster in the specified
        project. To use this resource, the requesting API Key must have the
        Project Read Only role. Effective 23 March 2020, all new clusters can
        use only Cloud Backups. When you upgrade to 4.2, your backup system
        upgrades to cloud backup if it is currently set to legacy backup. After
        this upgrade, all your existing legacy backup snapshots remain
        available. They expire over time in accordance with your retention
        policy. Your backup policy resets to the default schedule. If you had a
        custom backup policy in place with legacy backups, you must re-create it
        with the procedure outlined in the [Cloud Backup
        documentation](https://www.mongodb.com/docs/atlas/backup/cloud-backup/scheduling/#std-label-cloud-provider-backup-schedule).
      operationId: getLegacySnapshot
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        - description: Unique 24-hexadecimal digit string that identifies the desired
            snapshot.
          in: path
          name: snapshotId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/BackupSnapshot"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Legacy Backup Snapshot
      tags:
        - Legacy Backup
      x-xgen-experimental: true
    patch:
      deprecated: true
      description: Changes the expiration date for one legacy backup snapshot for one
        cluster in the specified project. To use this resource, the requesting
        API Key must have the Project Owner role. Effective 23 March 2020, all
        new clusters can use only Cloud Backups. When you upgrade to 4.2, your
        backup system upgrades to cloud backup if it is currently set to legacy
        backup. After this upgrade, all your existing legacy backup snapshots
        remain available. They expire over time in accordance with your
        retention policy. Your backup policy resets to the default schedule. If
        you had a custom backup policy in place with legacy backups, you must
        re-create it with the procedure outlined in the [Cloud Backup
        documentation](https://www.mongodb.com/docs/atlas/backup/cloud-backup/scheduling/#std-label-cloud-provider-backup-schedule).
      operationId: updateLegacySnapshotRetention
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        - description: Unique 24-hexadecimal digit string that identifies the desired
            snapshot.
          in: path
          name: snapshotId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/BackupSnapshot"
        description: Changes One Legacy Backup Snapshot Expiration.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/BackupSnapshot"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Change One Legacy Backup Snapshot Expiration
      tags:
        - Legacy Backup
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/status":
    get:
      description: Returns the status of all changes that you made to the specified
        cluster in the specified project. Use this resource to check the
        progress MongoDB Cloud has made in processing your changes. The response
        does not include the deployment of new dedicated clusters. To use this
        resource, the requesting API Key must have the Project Read Only role.
      operationId: getClusterStatus
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/ClusterStatus"
              x-xgen-version: 2023-01-01
          description: OK
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return Status of All Cluster Operations
      tags:
        - Clusters
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/{clusterView}/collStats/namespaces":
    get:
      description: Return the subset of namespaces from the given cluster sorted by
        highest total execution time (descending) within the given time window.
      operationId: getCollStatsLatencyNamespacesForCluster
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster to pin namespaces
            to.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        - description: Human-readable label that identifies the cluster topology to
            retrieve metrics for.
          in: path
          name: clusterView
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/start"
        - $ref: "#/components/parameters/end"
        - $ref: "#/components/parameters/period"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-11-15+json:
              schema:
                $ref: "#/components/schemas/CollStatsRankedNamespaces"
              x-xgen-version: 2023-11-15
          description: Succeeded
        "403":
          $ref: "#/components/responses/forbidden"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return Ranked Namespaces from a Cluster
      tags:
        - Collection Level Metrics
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/{clusterView}/{databaseName}/{collectionName}/collStats/measurements":
    get:
      description: Get a list of the Coll Stats Latency cluster-level measurements for
        the given namespace.
      operationId: getCollStatsLatencyNamespaceClusterMeasurements
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster to retrieve
            metrics for.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        - description: Human-readable label that identifies the cluster topology to
            retrieve metrics for.
          in: path
          name: clusterView
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/databaseName"
        - $ref: "#/components/parameters/collectionName"
        - description: List that contains the metrics that you want to retrieve for the
            associated data series. If you don't set this parameter, this
            resource returns data series for all Coll Stats Latency metrics.
          in: query
          name: metrics
          schema:
            type: array
            items:
              type: string
              description: Metric requested for the given cluster
            uniqueItems: true
          style: form
        - $ref: "#/components/parameters/start"
        - $ref: "#/components/parameters/end"
        - $ref: "#/components/parameters/period"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-11-15+json:
              schema:
                $ref: "#/components/schemas/MeasurementsCollStatsLatencyCluster"
              x-xgen-version: 2023-11-15
          description: Succeeded
        "400":
          $ref: "#/components/responses/badRequest"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return Cluster-Level Query Latency
      tags:
        - Collection Level Metrics
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/clusters/{hostName}/logs/{logName}.gz":
    get:
      description: "Returns a compressed (.gz) log file that contains a range of log
        messages for the specified host for the specified project. MongoDB
        updates process and audit logs from the cluster backend infrastructure
        every five minutes and contain log data from the previous five minutes.
        If you poll the API for log files, we recommend polling every five
        minutes. For example, if the logs are updated at 4:00 UTC and then you
        poll the API, the API returns log data from the interval between 3:55
        UTC and 4:00 UTC. This feature isn't available for `M0` free clusters,
        `M2`, `M5`, or serverless clusters. To use this resource, the requesting
        API Key must have the Project Data Access Read Only or higher role.
        Deprecated versions: v2-{2023-01-01}"
      operationId: getHostLogs
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the host that stores the log
            files that you want to download.
          in: path
          name: hostName
          required: true
          schema:
            type: string
            pattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}|([0-9a-f]{1,4}:){7}([0-9a-f]{1,4})|(([a-z0-9]+\.){1,10}[a-z]+)?$
        - description: Human-readable label that identifies the log file that you want to
            return. To return audit logs, enable *Database Auditing* for the
            specified project.
          in: path
          name: logName
          required: true
          schema:
            type: string
            externalDocs:
              description: Set up Database Auditing
              url: https://docs.atlas.mongodb.com/database-auditing/
        - description: Date and time when the period specifies the inclusive ending point
            for the range of log messages to retrieve. This parameter expresses
            its value in the number of seconds that have elapsed since the UNIX
            epoch.
          in: query
          name: endDate
          schema:
            type: integer
            format: int64
            minimum: 1199145600
        - description: Date and time when the period specifies the inclusive starting
            point for the range of log messages to retrieve. This parameter
            expresses its value in the number of seconds that have elapsed since
            the UNIX epoch.
          in: query
          name: startDate
          schema:
            type: integer
            format: int64
            minimum: 1199145600
      responses:
        "200":
          content:
            application/vnd.atlas.2023-02-01+gzip:
              schema:
                type: string
                format: binary
                description: Compressed (.gz) log file that contains a range of log messages for
                  the specified host for the specified project
              x-xgen-version: 2023-02-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Download Logs for One Cluster Host in One Project
      tags:
        - Monitoring and Logs
  "/api/atlas/v2/groups/{groupId}/collStats/metrics":
    get:
      description: Returns all available Coll Stats Latency metric names and their
        respective units for the specified project at the time of request.
      operationId: getCollStatsLatencyNamespaceMetrics
      parameters:
        - $ref: "#/components/parameters/groupId"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-11-15+json:
              schema:
                $ref: "#/components/schemas/NoBody"
              x-xgen-version: 2023-11-15
          description: Succeeded
        "400":
          $ref: "#/components/responses/badRequest"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return all metric names
      tags:
        - Collection Level Metrics
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/containers":
    get:
      description: Returns details about all network peering containers in the
        specified project for the specified cloud provider. If you do not
        specify the cloud provider, MongoDB Cloud returns details about all
        network peering containers in the project for Amazon Web Services (AWS).
        To use this resource, the requesting API Key must have the Project Read
        Only role.
      operationId: listPeeringContainerByCloudProvider
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
        - description: Cloud service provider that serves the desired network peering
            containers.
          in: query
          name: providerName
          required: true
          schema:
            type: string
            default: AWS
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedCloudProviderContainer"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Network Peering Containers in One Project for One Cloud
        Provider
      tags:
        - Network Peering
    post:
      description: Creates one new network peering container in the specified project.
        MongoDB Cloud can deploy Network Peering connections in a network
        peering container. GCP can have one container per project. AWS and Azure
        can have one container per cloud provider region. To use this resource,
        the requesting API Key must have the Project Owner role.
      operationId: createPeeringContainer
      parameters:
        - $ref: "#/components/parameters/groupId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/CloudProviderContainer"
        description: Creates one new network peering container in the specified project.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/CloudProviderContainer"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Create One New Network Peering Container
      tags:
        - Network Peering
  "/api/atlas/v2/groups/{groupId}/containers/all":
    get:
      description: Returns details about all network peering containers in the
        specified project. Network peering containers contain network peering
        connections. To use this resource, the requesting API Key must have the
        Project Read Only role.
      operationId: listPeeringContainers
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedCloudProviderContainer"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Network Peering Containers in One Project
      tags:
        - Network Peering
  "/api/atlas/v2/groups/{groupId}/containers/{containerId}":
    delete:
      description: Removes one network peering container in the specified project. To
        use this resource, the requesting API Key must have the Project Owner
        role.
      operationId: deletePeeringContainer
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Unique 24-hexadecimal digit string that identifies the MongoDB
            Cloud network container that you want to remove.
          in: path
          name: containerId
          required: true
          schema:
            type: string
            example: 32b6e34b3d91647abb20e7b8
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/NoBody"
              x-xgen-version: 2023-01-01
          description: This endpoint does not return a response body.
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Remove One Network Peering Container
      tags:
        - Network Peering
    get:
      description: Returns details about one network peering container in one
        specified project. Network peering containers contain network peering
        connections. To use this resource, the requesting API Key must have the
        Project Read Only role.
      operationId: getPeeringContainer
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Unique 24-hexadecimal digit string that identifies the MongoDB
            Cloud network container that you want to remove.
          in: path
          name: containerId
          required: true
          schema:
            type: string
            example: 32b6e34b3d91647abb20e7b8
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/CloudProviderContainer"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Network Peering Container
      tags:
        - Network Peering
    patch:
      description: Updates the network details and labels of one specified network
        peering container in the specified project. To use this resource, the
        requesting API Key must have the Project Owner role.
      operationId: updatePeeringContainer
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Unique 24-hexadecimal digit string that identifies the MongoDB
            Cloud network container that you want to remove.
          in: path
          name: containerId
          required: true
          schema:
            type: string
            example: 32b6e34b3d91647abb20e7b8
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/CloudProviderContainer"
        description: Updates the network details and labels of one specified network
          peering container in the specified project.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/CloudProviderContainer"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Update One Network Peering Container
      tags:
        - Network Peering
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/customDBRoles/roles":
    get:
      description: Returns all custom roles for the specified project. To use this
        resource, the requesting API Key must have the Project Read Only role.
      operationId: listCustomDatabaseRoles
      parameters:
        - $ref: "#/components/parameters/groupId"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserCustomDBRole"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Custom Roles in One Project
      tags:
        - Custom Database Roles
    post:
      description: Creates one custom role in the specified project. To use this
        resource, the requesting API Key must have the Project Owner role.
      operationId: createCustomDatabaseRole
      parameters:
        - $ref: "#/components/parameters/groupId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/UserCustomDBRole"
        description: Creates one custom role in the specified project.
        required: true
      responses:
        "202":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/UserCustomDBRole"
              x-xgen-version: 2023-01-01
          description: Accepted
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Create One Custom Role
      tags:
        - Custom Database Roles
  "/api/atlas/v2/groups/{groupId}/customDBRoles/roles/{roleName}":
    delete:
      description: Removes one custom role from the specified project. You can't
        remove a custom role that would leave one or more child roles with no
        parent roles or actions. You also can't remove a custom role that would
        leave one or more database users without roles. To use this resource,
        the requesting API Key must have the Project Atlas Admin role.
      operationId: deleteCustomDatabaseRole
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the role for the request. This
            name must be unique for this custom role in this project.
          in: path
          name: roleName
          required: true
          schema:
            type: string
            pattern: ^\b(?!xgen-)([0-9A-Za-z_\-]+)\b(?<!\atlasAdmin|read|readWrite|dbAdmin|dbOwner|userAdmin|clusterAdmin|clusterManager|clusterMonitor|hostManager|backup|restore|readAnyDatabase|readWriteAnyDatabase|userAdminAnyDatabase|dbAdminAnyDatabase|root|__system)$
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              x-xgen-version: 2023-01-01
          description: No Content
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Remove One Custom Role from One Project
      tags:
        - Custom Database Roles
    get:
      description: Returns one custom role for the specified project. To use this
        resource, the requesting API Key must have the Project Read Only role.
      operationId: getCustomDatabaseRole
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the role for the request. This
            name must be unique for this custom role in this project.
          in: path
          name: roleName
          required: true
          schema:
            type: string
            pattern: ^\b(?!xgen-)([0-9A-Za-z_\-]+)\b(?<!\atlasAdmin|read|readWrite|dbAdmin|dbOwner|userAdmin|clusterAdmin|clusterManager|clusterMonitor|hostManager|backup|restore|readAnyDatabase|readWriteAnyDatabase|userAdminAnyDatabase|dbAdminAnyDatabase|root|__system)$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/UserCustomDBRole"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Custom Role in One Project
      tags:
        - Custom Database Roles
    patch:
      description: Updates one custom role in the specified project. To use this
        resource, the requesting API Key must have the Project Owner role.
      operationId: updateCustomDatabaseRole
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the role for the request. This
            name must beunique for this custom role in this project.
          in: path
          name: roleName
          required: true
          schema:
            type: string
            pattern: ^\b(?!xgen-)([0-9A-Za-z_\-]+)\b(?<!\atlasAdmin|read|readWrite|dbAdmin|dbOwner|userAdmin|clusterAdmin|clusterManager|clusterMonitor|hostManager|backup|restore|readAnyDatabase|readWriteAnyDatabase|userAdminAnyDatabase|dbAdminAnyDatabase|root|__system)$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/UpdateCustomDBRole"
        description: Updates one custom role in the specified project.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/UserCustomDBRole"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Update One Custom Role in One Project
      tags:
        - Custom Database Roles
  "/api/atlas/v2/groups/{groupId}/dataFederation":
    get:
      description: Returns the details of all federated database instances in the
        specified project. To use this resource, the requesting API Key must
        have the Project Read Only or higher role.
      operationId: listFederatedDatabases
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Type of Federated Database Instances to return.
          in: query
          name: type
          schema:
            type: string
            default: USER
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DataLakeTenant"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Federated Database Instances in One Project
      tags:
        - Data Federation
    post:
      description: Creates one federated database instance in the specified project.
        To use this resource, the requesting API Key must have the Project Owner
        or Project Charts Admin roles.
      operationId: createFederatedDatabase
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Flag that indicates whether this request should check if the
            requesting IAM role can read from the S3 bucket. AWS checks if the
            role can list the objects in the bucket before writing to it. Some
            IAM roles only need write permissions. This flag allows you to skip
            that check.
          in: query
          name: skipRoleValidation
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/DataLakeTenant"
        description: Details to create one federated database instance in the specified
          project.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/DataLakeTenant"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Create One Federated Database Instance in One Project
      tags:
        - Data Federation
  "/api/atlas/v2/groups/{groupId}/dataFederation/{tenantName}":
    delete:
      description: Removes one federated database instance from the specified project.
        To use this resource, the requesting API Key must have the Project Owner
        or Project Charts Admin roles.
      operationId: deleteFederatedDatabase
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the federated database
            instance to remove.
          in: path
          name: tenantName
          required: true
          schema:
            type: string
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/NoBody"
              x-xgen-version: 2023-01-01
          description: This endpoint does not return a response body.
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Remove One Federated Database Instance from One Project
      tags:
        - Data Federation
    get:
      description: Returns the details of one federated database instance within the
        specified project. To use this resource, the requesting API Key must
        have the Project Read Only or Project Charts Admin roles.
      operationId: getFederatedDatabase
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the Federated Database to
            return.
          in: path
          name: tenantName
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/DataLakeTenant"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Federated Database Instance in One Project
      tags:
        - Data Federation
    patch:
      description: Updates the details of one federated database instance in the
        specified project. To use this resource, the requesting API Key must
        have the Project Owner or higher role.
      operationId: updateFederatedDatabase
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the federated database
            instance to update.
          in: path
          name: tenantName
          required: true
          schema:
            type: string
        - description: Flag that indicates whether this request should check if the
            requesting IAM role can read from the S3 bucket. AWS checks if the
            role can list the objects in the bucket before writing to it. Some
            IAM roles only need write permissions. This flag allows you to skip
            that check.
          in: query
          name: skipRoleValidation
          required: true
          schema:
            type: boolean
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/DataLakeTenant"
        description: Details of one Federated Database to update in the specified project.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/DataLakeTenant"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Update One Federated Database Instance in One Project
      tags:
        - Data Federation
  "/api/atlas/v2/groups/{groupId}/dataFederation/{tenantName}/limits":
    get:
      description: Returns query limits for a federated databases instance in the
        specified project. To use this resource, the requesting API Key must
        have the Project Read Only role.
      operationId: returnFederatedDatabaseQueryLimits
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the federated database
            instance for which you want to retrieve query limits.
          in: path
          name: tenantName
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DataFederationTenantQueryLimit"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Query Limits for One Federated Database Instance
      tags:
        - Data Federation
  "/api/atlas/v2/groups/{groupId}/dataFederation/{tenantName}/limits/{limitName}":
    delete:
      description: Deletes one query limit for one federated database instance. To use
        this resource, the requesting API Key must have the Project Owner role.
      operationId: deleteOneDataFederationInstanceQueryLimit
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the federated database
            instance to which the query limit applies.
          in: path
          name: tenantName
          required: true
          schema:
            type: string
        - description: >
            Human-readable label that identifies this data federation instance
            limit.


            | Limit Name | Description | Default |

            | --- | --- | --- |

            | bytesProcessed.query | Limit on the number of bytes processed during a single data federation query | N/A |

            | bytesProcessed.daily | Limit on the number of bytes processed for the data federation instance for the current day | N/A |

            | bytesProcessed.weekly | Limit on the number of bytes processed for the data federation instance for the current week | N/A |

            | bytesProcessed.monthly | Limit on the number of bytes processed for the data federation instance for the current month | N/A |
          in: path
          name: limitName
          required: true
          schema:
            type: string
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/NoBody"
              x-xgen-version: 2023-01-01
          description: This endpoint does not return a response body.
        "400":
          $ref: "#/components/responses/badRequest"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Delete One Query Limit For One Federated Database Instance
      tags:
        - Data Federation
    get:
      description: Returns the details of one query limit for the specified federated
        database instance in the specified project. To use this resource, the
        requesting API Key must have the Project Read Only role.
      operationId: returnFederatedDatabaseQueryLimit
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the federated database
            instance to which the query limit applies.
          in: path
          name: tenantName
          required: true
          schema:
            type: string
        - description: >
            Human-readable label that identifies this data federation instance
            limit.


            | Limit Name | Description | Default |

            | --- | --- | --- |

            | bytesProcessed.query | Limit on the number of bytes processed during a single data federation query | N/A |

            | bytesProcessed.daily | Limit on the number of bytes processed for the data federation instance for the current day | N/A |

            | bytesProcessed.weekly | Limit on the number of bytes processed for the data federation instance for the current week | N/A |

            | bytesProcessed.monthly | Limit on the number of bytes processed for the data federation instance for the current month | N/A |
          in: path
          name: limitName
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/DataFederationTenantQueryLimit"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Federated Database Instance Query Limit for One Project
      tags:
        - Data Federation
    patch:
      description: Creates or updates one query limit for one federated database
        instance. To use this resource, the requesting API Key must have the
        Project Owner role.
      operationId: createOneDataFederationQueryLimit
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the federated database
            instance to which the query limit applies.
          in: path
          name: tenantName
          required: true
          schema:
            type: string
        - description: >
            Human-readable label that identifies this data federation instance
            limit.


            | Limit Name | Description | Default |

            | --- | --- | --- |

            | bytesProcessed.query | Limit on the number of bytes processed during a single data federation query | N/A |

            | bytesProcessed.daily | Limit on the number of bytes processed for the data federation instance for the current day | N/A |

            | bytesProcessed.weekly | Limit on the number of bytes processed for the data federation instance for the current week | N/A |

            | bytesProcessed.monthly | Limit on the number of bytes processed for the data federation instance for the current month | N/A |
          in: path
          name: limitName
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/DataFederationTenantQueryLimit"
        description: Creates or updates one query limit for one federated database instance.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/DataFederationTenantQueryLimit"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Configure One Query Limit for One Federated Database Instance
      tags:
        - Data Federation
  "/api/atlas/v2/groups/{groupId}/dataFederation/{tenantName}/queryLogs.gz":
    get:
      description: Downloads the query logs for the specified federated database
        instance. To use this resource, the requesting API Key must have the
        Project Owner or Project Data Access Read Write roles.
      operationId: downloadFederatedDatabaseQueryLogs
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Timestamp that specifies the end point for the range of log
            messages to download.  MongoDB Cloud expresses this timestamp in the
            number of seconds that have elapsed since the UNIX epoch.
          in: query
          name: endDate
          schema:
            type: integer
            format: int64
            example: 1636481348
            pattern: "1199145600"
        - description: Timestamp that specifies the starting point for the range of log
            messages to download. MongoDB Cloud expresses this timestamp in the
            number of seconds that have elapsed since the UNIX epoch.
          in: query
          name: startDate
          schema:
            type: integer
            format: int64
            example: 1636466948
            pattern: "1199145600"
        - description: Human-readable label that identifies the federated database
            instance for which you want to download query logs.
          in: path
          name: tenantName
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+gzip:
              schema:
                type: string
                format: binary
                description: Compressed archive labeled `queryLogs.gz` downloads
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Download Query Logs for One Federated Database Instance
      tags:
        - Data Federation
  "/api/atlas/v2/groups/{groupId}/databaseUsers":
    get:
      description: Returns all database users that belong to the specified project. To
        use this resource, the requesting API Key must have the Project Read
        Only role.
      operationId: listDatabaseUsers
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedApiAtlasDatabaseUser"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Database Users from One Project
      tags:
        - Database Users
    post:
      description: Creates one database user in the specified project. This MongoDB
        Cloud supports a maximum of 100 database users per project. If you
        require more than 100 database users on a project, contact
        [Support](https://cloud.mongodb.com/support). To use this resource, the
        requesting API Key must have the Project Owner or Project Charts Admin
        roles.
      operationId: createDatabaseUser
      parameters:
        - $ref: "#/components/parameters/groupId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            examples:
              AWS IAM Authentication:
                description: AWS IAM Authentication
                value:
                  awsIAMType: USER
                  databaseName: $external
                  groupId: 32b6e34b3d91647abb20e7b8
                  roles:
                    - databaseName: sales
                      roleName: readWrite
                    - databaseName: marketing
                      roleName: read
                  scopes:
                    - name: myCluster
                      type: CLUSTER
                  username: arn:aws:iam::358363220050:user/mongodb-aws-iam-auth-test-user
              Federated Authentication:
                description: Federated Authentication
                value:
                  databaseName: admin
                  groupId: 32b6e34b3d91647abb20e7b8
                  oidcAuthType: IDP_GROUP
                  roles:
                    - databaseName: sales
                      roleName: readWrite
                    - databaseName: marketing
                      roleName: read
                  scopes:
                    - name: myCluster
                      type: CLUSTER
                  username: 5dd7496c7a3e5a648454341c/sales
              LDAP Authentication:
                description: LDAP Authentication
                value:
                  databaseName: admin
                  groupId: 32b6e34b3d91647abb20e7b8
                  ldapAuthType: GROUP
                  roles:
                    - databaseName: sales
                      roleName: readWrite
                    - databaseName: marketing
                      roleName: read
                  scopes:
                    - name: myCluster
                      type: CLUSTER
                  username: CN=marketing,OU=groups,DC=example,DC=com
              SCRAM-SHA Authentication:
                description: SCRAM-SHA Authentication
                value:
                  databaseName: admin
                  groupId: 32b6e34b3d91647abb20e7b8
                  password: changeme123
                  roles:
                    - databaseName: sales
                      roleName: readWrite
                    - databaseName: marketing
                      roleName: read
                  scopes:
                    - name: myCluster
                      type: CLUSTER
                  username: david
              X509 Authentication:
                description: X509 Authentication
                value:
                  databaseName: $external
                  groupId: 32b6e34b3d91647abb20e7b8
                  roles:
                    - databaseName: sales
                      roleName: readWrite
                    - databaseName: marketing
                      roleName: read
                  scopes:
                    - name: myCluster
                      type: CLUSTER
                  username: CN=david@example.com,OU=users,DC=example,DC=com
                  x509Type: CUSTOMER
            schema:
              $ref: "#/components/schemas/CloudDatabaseUser"
        description: Creates one database user in the specified project.
        required: true
      responses:
        "201":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/CloudDatabaseUser"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Create One Database User in One Project
      tags:
        - Database Users
  "/api/atlas/v2/groups/{groupId}/databaseUsers/{databaseName}/{username}":
    delete:
      description: Removes one database user from the specified project. To use this
        resource, the requesting API Key must have the Project Owner role.
      operationId: deleteDatabaseUser
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the database against which the
            database user authenticates. Database users must provide both a
            username and authentication database to log into MongoDB. If the
            user authenticates with AWS IAM, x.509, or LDAP, this value should
            be `$external`. If the user authenticates with SCRAM-SHA or OIDC,
            this value should be `admin`.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: >
            Human-readable label that represents the user that authenticates to
            MongoDB. The format of this label depends on the method of
            authentication:


            | Authentication Method | Parameter Needed | Parameter Value | username Format |

            |---|---|---|---|

            | AWS IAM | awsType | ROLE | <abbr title="Amazon Resource Name">ARN</abbr> |

            | AWS IAM | awsType | USER | <abbr title="Amazon Resource Name">ARN</abbr> |

            | x.509 | x509Type | CUSTOMER | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |

            | x.509 | x509Type | MANAGED | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |

            | LDAP | ldapAuthType | USER | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |

            | LDAP | ldapAuthType | GROUP | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |

            | OIDC | oidcAuthType | IDP_GROUP | Atlas OIDC IdP ID (found in federation settings), followed by a '/', followed by the IdP group name |

            | SCRAM-SHA | awsType, x509Type, ldapAuthType, oidcAuthType | NONE | Alphanumeric string |
          in: path
          name: username
          required: true
          schema:
            type: string
            example: "SCRAM-SHA: dylan or AWS IAM:
              arn:aws:iam::123456789012:user/sales/enterprise/DylanBloggs or
              x.509/LDAP: CN=Dylan
              Bloggs,OU=Enterprise,OU=Sales,DC=Example,DC=COM or OIDC:
              IdPIdentifier/IdPGroupName"
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/NoBody"
              x-xgen-version: 2023-01-01
          description: This endpoint does not return a response body.
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Remove One Database User from One Project
      tags:
        - Database Users
    get:
      description: Returns one database user that belong to the specified project. To
        use this resource, the requesting API Key must have the Project Read
        Only role.
      operationId: getDatabaseUser
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the database against which the
            database user authenticates. Database users must provide both a
            username and authentication database to log into MongoDB. If the
            user authenticates with AWS IAM, x.509, or LDAP, this value should
            be `$external`. If the user authenticates with SCRAM-SHA or OIDC,
            this value should be `admin`.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: >
            Human-readable label that represents the user that authenticates to
            MongoDB. The format of this label depends on the method of
            authentication:


            | Authentication Method | Parameter Needed | Parameter Value | username Format |

            |---|---|---|---|

            | AWS IAM | awsType | ROLE | <abbr title="Amazon Resource Name">ARN</abbr> |

            | AWS IAM | awsType | USER | <abbr title="Amazon Resource Name">ARN</abbr> |

            | x.509 | x509Type | CUSTOMER | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |

            | x.509 | x509Type | MANAGED | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |

            | LDAP | ldapAuthType | USER | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |

            | LDAP | ldapAuthType | GROUP | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |

            | OIDC | oidcAuthType | IDP_GROUP | Atlas OIDC IdP ID (found in federation settings), followed by a '/', followed by the IdP group name |

            | SCRAM-SHA | awsType, x509Type, ldapAuthType, oidcAuthType | NONE | Alphanumeric string |
          in: path
          name: username
          required: true
          schema:
            type: string
            example: "SCRAM-SHA: dylan or AWS IAM:
              arn:aws:iam::123456789012:user/sales/enterprise/DylanBloggs or
              x.509/LDAP: CN=Dylan
              Bloggs,OU=Enterprise,OU=Sales,DC=Example,DC=COM or OIDC:
              IdPIdentifier/IdPGroupName"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/CloudDatabaseUser"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Database User from One Project
      tags:
        - Database Users
    patch:
      description: Updates one database user that belongs to the specified project. To
        use this resource, the requesting API Key must have the Project Owner or
        Project Charts Admin roles.
      operationId: updateDatabaseUser
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the database against which the
            database user authenticates. Database users must provide both a
            username and authentication database to log into MongoDB. If the
            user authenticates with AWS IAM, x.509, or LDAP, this value should
            be `$external`. If the user authenticates with SCRAM-SHA or OIDC,
            this value should be `admin`.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: >
            Human-readable label that represents the user that authenticates to
            MongoDB. The format of this label depends on the method of
            authentication:


            | Authentication Method | Parameter Needed | Parameter Value | username Format |

            |---|---|---|---|

            | AWS IAM | awsType | ROLE | <abbr title="Amazon Resource Name">ARN</abbr> |

            | AWS IAM | awsType | USER | <abbr title="Amazon Resource Name">ARN</abbr> |

            | x.509 | x509Type | CUSTOMER | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |

            | x.509 | x509Type | MANAGED | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |

            | LDAP | ldapAuthType | USER | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |

            | LDAP | ldapAuthType | GROUP | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |

            | OIDC | oidcAuthType | IDP_GROUP | Atlas OIDC IdP ID (found in federation settings), followed by a '/', followed by the IdP group name |

            | SCRAM-SHA | awsType, x509Type, ldapAuthType, oidcAuthType | NONE | Alphanumeric string |
          in: path
          name: username
          required: true
          schema:
            type: string
            example: "SCRAM-SHA: dylan or AWS IAM:
              arn:aws:iam::123456789012:user/sales/enterprise/DylanBloggs or
              x.509/LDAP: CN=Dylan
              Bloggs,OU=Enterprise,OU=Sales,DC=Example,DC=COM or OIDC:
              IdPIdentifier/IdPGroupName"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/CloudDatabaseUser"
        description: Updates one database user that belongs to the specified project.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/CloudDatabaseUser"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Update One Database User in One Project
      tags:
        - Database Users
  "/api/atlas/v2/groups/{groupId}/databaseUsers/{username}/certs":
    get:
      description: Returns all unexpired X.509 certificates for the specified MongoDB
        user. This MongoDB user belongs to one project. Atlas manages these
        certificates and the MongoDB user. To use this resource, the requesting
        API Key must have the Project Read Only role.
      operationId: listDatabaseUserCertificates
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
        - description: Human-readable label that represents the MongoDB database user
            account whose certificates you want to return.
          in: path
          name: username
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedUserCert"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All X.509 Certificates Assigned to One MongoDB User
      tags:
        - X.509 Authentication
    post:
      description: >-
        Generates one X.509 certificate for the specified MongoDB user. Atlas
        manages the certificate and MongoDB user that belong to one project. To
        use this resource, the requesting API Key must have the Project Owner
        role.


        To get MongoDB Cloud to generate a managed certificate for a database user, set `"x509Type" : "MANAGED"` on the desired MongoDB Database User.


        If you are managing your own Certificate Authority (CA) in Self-Managed X.509 mode, you must generate certificates for database users using your own CA.
      externalDocs:
        description: Self-Managed X.509
        url: https://www.mongodb.com/docs/atlas/security-self-managed-x509/#std-label-self-managed-x509
      operationId: createDatabaseUserCertificate
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that represents the MongoDB database user
            account for whom to create a certificate.
          in: path
          name: username
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/UserCert"
        description: Generates one X.509 certificate for the specified MongoDB user.
        required: true
      responses:
        "201":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                type: string
                description: PEM file that contains the user's X.509 certificate and private
                  key.
              x-xgen-version: 2023-01-01
          description: This endpoint returns a PEM file with the certificate and private
            key.
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Create One X.509 Certificate for One MongoDB User
      tags:
        - X.509 Authentication
  "/api/atlas/v2/groups/{groupId}/dbAccessHistory/clusters/{clusterName}":
    get:
      description: Returns the access logs of one cluster identified by the cluster's
        name. Access logs contain a list of authentication requests made against
        your cluster. You can't use this feature on tenant-tier clusters (M0,
        M2, M5). To use this resource, the requesting API Key must have the
        Project Monitoring Admin role.
      externalDocs:
        description: Database Access History
        url: https://docs.atlas.mongodb.com/access-tracking/
      operationId: listAccessLogsByClusterName
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Flag that indicates whether the response returns the successful
            authentication attempts only.
          in: query
          name: authResult
          schema:
            type: boolean
        - description: Human-readable label that identifies the cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        - description: Date and time when to stop retrieving database history. If you
            specify **end**, you must also specify **start**. This parameter
            uses UNIX epoch time in milliseconds.
          in: query
          name: end
          schema:
            type: integer
            format: int64
        - description: One Internet Protocol address that attempted to authenticate with
            the database.
          in: query
          name: ipAddress
          schema:
            type: string
            pattern: ^((25[0-5]|(2[0-4]|1\d|[1-9]|)\d)(\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$
        - description: Maximum number of lines from the log to return.
          in: query
          name: nLogs
          schema:
            type: integer
            format: int32
            default: 20000
            maximum: 20000
            minimum: 0
        - description: Date and time when MongoDB Cloud begins retrieving database
            history. If you specify **start**, you must also specify **end**.
            This parameter uses UNIX epoch time in milliseconds.
          in: query
          name: start
          schema:
            type: integer
            format: int64
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/MongoDBAccessLogsList"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return Database Access History for One Cluster using Its Cluster Name
      tags:
        - Access Tracking
  "/api/atlas/v2/groups/{groupId}/dbAccessHistory/processes/{hostname}":
    get:
      description: Returns the access logs of one cluster identified by the cluster's
        hostname. Access logs contain a list of authentication requests made
        against your clusters. You can't use this feature on tenant-tier
        clusters (M0, M2, M5). To use this resource, the requesting API Key must
        have the Project Monitoring Admin role.
      externalDocs:
        description: Database Access History
        url: https://docs.atlas.mongodb.com/access-tracking/
      operationId: listAccessLogsByHostname
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Flag that indicates whether the response returns the successful
            authentication attempts only.
          in: query
          name: authResult
          schema:
            type: boolean
        - description: Date and time when to stop retrieving database history. If you
            specify **end**, you must also specify **start**. This parameter
            uses UNIX epoch time in milliseconds.
          in: query
          name: end
          schema:
            type: integer
            format: int64
        - description: Fully qualified domain name or IP address of the MongoDB host that
            stores the log files that you want to download.
          in: path
          name: hostname
          required: true
          schema:
            type: string
        - description: One Internet Protocol address that attempted to authenticate with
            the database.
          in: query
          name: ipAddress
          schema:
            type: string
            pattern: ^((25[0-5]|(2[0-4]|1\d|[1-9]|)\d)(\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$
        - description: Maximum number of lines from the log to return.
          in: query
          name: nLogs
          schema:
            type: integer
            format: int32
            default: 20000
            maximum: 20000
            minimum: 0
        - description: Date and time when MongoDB Cloud begins retrieving database
            history. If you specify **start**, you must also specify **end**.
            This parameter uses UNIX epoch time in milliseconds.
          in: query
          name: start
          schema:
            type: integer
            format: int64
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/MongoDBAccessLogsList"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return Database Access History for One Cluster using Its Hostname
      tags:
        - Access Tracking
  "/api/atlas/v2/groups/{groupId}/encryptionAtRest":
    get:
      description: >-
        Returns the configuration for encryption at rest using the keys you
        manage through your cloud provider. MongoDB Cloud encrypts all storage
        even if you don't use your own key management. This resource requires
        the requesting API Key to have the Project Owner role.


        **LIMITED TO M10 OR GREATER:** MongoDB Cloud limits this feature to dedicated cluster tiers of M10 and greater.
      operationId: getEncryptionAtRest
      parameters:
        - $ref: "#/components/parameters/groupId"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/EncryptionAtRest"
              x-xgen-version: 2023-01-01
          description: OK
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Configuration for Encryption at Rest using Customer-Managed
        Keys for One Project
      tags:
        - Encryption at Rest using Customer Key Management
    patch:
      description: >-
        Updates the configuration for encryption at rest using the keys you
        manage through your cloud provider. MongoDB Cloud encrypts all storage
        even if you don't use your own key management. This resource requires
        the requesting API Key to have the Project Owner role. This feature
        isn't available for `M0` free clusters, `M2`, `M5`, or serverless
        clusters.

         After you configure at least one Encryption at Rest using a Customer Key Management provider for the MongoDB Cloud project, Project Owners can enable Encryption at Rest using Customer Key Management for each MongoDB Cloud cluster for which they require encryption. The Encryption at Rest using Customer Key Management provider doesn't have to match the cluster cloud service provider. MongoDB Cloud doesn't automatically rotate user-managed encryption keys. Defer to your preferred Encryption at Rest using Customer Key Management provider's documentation and guidance for best practices on key rotation. MongoDB Cloud automatically creates a 90-day key rotation alert when you configure Encryption at Rest using Customer Key Management using your Key Management in an MongoDB Cloud project. MongoDB Cloud encrypts all storage whether or not you use your own key management.
      operationId: updateEncryptionAtRest
      parameters:
        - $ref: "#/components/parameters/groupId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/EncryptionAtRest"
        description: >-
          Required parameters depend on whether someone has enabled Encryption
          at Rest using Customer Key Management:


          If you have enabled Encryption at Rest using Customer Key Management (CMK), Atlas requires all of the parameters for the desired encryption provider.


          - To use AWS Key Management Service (KMS), MongoDB Cloud requires all the fields in the **awsKms** object.

          - To use Azure Key Vault, MongoDB Cloud requires all the fields in the **azureKeyVault** object.

          - To use Google Cloud Key Management Service (KMS), MongoDB Cloud requires all the fields in the **googleCloudKms** object.


          If you enabled Encryption at Rest using Customer Key  Management, administrators can pass only the changed fields for the **awsKms**, **azureKeyVault**, or **googleCloudKms** object to update the configuration to this endpoint.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/EncryptionAtRest"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Update Configuration for Encryption at Rest using Customer-Managed Keys
        for One Project
      tags:
        - Encryption at Rest using Customer Key Management
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/events":
    get:
      description: >-
        Returns one event for the specified project. Events identify significant
        database, billing, or security activities or status changes. To use this
        resource, the requesting API Key must have the Project Read Only role.


        This resource remains under revision and may change.
      operationId: listProjectEvents
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
        - description: Human-readable label that identifies the cluster.
          in: query
          name: clusterNames
          schema:
            type: array
            items:
              type: string
              maxLength: 64
              minLength: 1
              pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
          style: form
        - description: >-
            Category of incident recorded at this moment in time.


            **IMPORTANT**: The complete list of event type values changes frequently.
          in: query
          name: eventType
          schema:
            type: array
            items:
              $ref: "#/components/schemas/EventTypeForNdsGroup"
        - description: >-
            Category of event that you would like to exclude from query results,
            such as CLUSTER_CREATED


            **IMPORTANT**: Event type names change frequently. Verify that you specify the event type correctly by checking the complete list of event types.
          in: query
          name: excludedEventType
          schema:
            type: array
            items:
              $ref: "#/components/schemas/EventTypeForNdsGroup"
        - description: Flag that indicates whether to include the raw document in the
            output. The raw document contains additional meta information about
            the event.
          in: query
          name: includeRaw
          schema:
            type: boolean
            default: false
        - description: Date and time from when MongoDB Cloud stops returning events. This
            parameter uses the <a href="https://en.wikipedia.org/wiki/ISO_8601"
            target="_blank" rel="noopener noreferrer">ISO 8601</a> timestamp
            format in UTC.
          in: query
          name: maxDate
          schema:
            type: string
            format: date-time
        - description: Date and time from when MongoDB Cloud starts returning events. This
            parameter uses the <a href="https://en.wikipedia.org/wiki/ISO_8601"
            target="_blank" rel="noopener noreferrer">ISO 8601</a> timestamp
            format in UTC.
          in: query
          name: minDate
          schema:
            type: string
            format: date-time
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/GroupPaginatedEvent"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Events from One Project
      tags:
        - Events
  "/api/atlas/v2/groups/{groupId}/events/{eventId}":
    get:
      description: >-
        Returns one event for the specified project. Events identify significant
        database, billing, or security activities or status changes. To use this
        resource, the requesting API Key must have the Project Read Only role.


        This resource remains under revision and may change.
      operationId: getProjectEvent
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Unique 24-hexadecimal digit string that identifies the event that
            you want to return. Use the
            [/events](#tag/Events/operation/listProjectEvents) endpoint to
            retrieve all events to which the authenticated user has access.
          in: path
          name: eventId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
        - description: Flag that indicates whether to include the raw document in the
            output. The raw document contains additional meta information about
            the event.
          in: query
          name: includeRaw
          schema:
            type: boolean
            default: false
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/EventViewForNdsGroup"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Event from One Project
      tags:
        - Events
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/hosts/{processId}/fts/metrics":
    get:
      description: Returns all Atlas Search metric types available for one process in
        the specified project. You must have the Project Read Only or higher
        role to view the Atlas Search metric types.
      operationId: listMetricTypes
      parameters:
        - $ref: "#/components/parameters/processId"
        - $ref: "#/components/parameters/groupId"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/CloudSearchMetrics"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Atlas Search Metric Types for One Process
      tags:
        - Monitoring and Logs
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/hosts/{processId}/fts/metrics/indexes/{databaseName}/{collectionName}/measurements":
    get:
      description: Returns the Atlas Search index metrics within the specified time
        range for one namespace in the specified process.
      operationId: listIndexMetrics
      parameters:
        - $ref: "#/components/parameters/processId"
        - $ref: "#/components/parameters/databaseName"
        - $ref: "#/components/parameters/collectionName"
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/granularity"
        - $ref: "#/components/parameters/period"
        - $ref: "#/components/parameters/start"
        - $ref: "#/components/parameters/end"
        - description: List that contains the measurements that MongoDB Atlas reports for
            the associated data series.
          in: query
          name: metrics
          required: true
          schema:
            type: array
            description: List that contains the measurements that MongoDB Atlas reports for
              the associated data series.
            items:
              type: string
            maxItems: 10
            uniqueItems: true
          style: form
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/MeasurementsIndexes"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Atlas Search Index Metrics for One Namespace
      tags:
        - Monitoring and Logs
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/hosts/{processId}/fts/metrics/indexes/{databaseName}/{collectionName}/{indexName}/measurements":
    get:
      description: Returns the Atlas Search metrics data series within the provided
        time range for one namespace and index name on the specified process.
        You must have the Project Read Only or higher role to view the Atlas
        Search metric types.
      operationId: getIndexMetrics
      parameters:
        - $ref: "#/components/parameters/processId"
        - $ref: "#/components/parameters/indexName"
        - $ref: "#/components/parameters/databaseName"
        - $ref: "#/components/parameters/collectionName"
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/granularity"
        - $ref: "#/components/parameters/period"
        - $ref: "#/components/parameters/start"
        - $ref: "#/components/parameters/end"
        - description: List that contains the measurements that MongoDB Atlas reports for
            the associated data series.
          in: query
          name: metrics
          required: true
          schema:
            type: array
            description: List that contains the measurements that MongoDB Atlas reports for
              the associated data series.
            items:
              type: string
            maxItems: 10
            uniqueItems: true
          style: form
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/MeasurementsIndexes"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return Atlas Search Metrics for One Index in One Specified Namespace
      tags:
        - Monitoring and Logs
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/hosts/{processId}/fts/metrics/measurements":
    get:
      description: Returns the Atlas Search hardware and status data series within the
        provided time range for one process in the specified project. You must
        have the Project Read Only or higher role to view the Atlas Search
        metric types.
      operationId: getMeasurements
      parameters:
        - $ref: "#/components/parameters/processId"
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/granularity"
        - $ref: "#/components/parameters/period"
        - $ref: "#/components/parameters/start"
        - $ref: "#/components/parameters/end"
        - description: List that contains the metrics that you want MongoDB Atlas to
            report for the associated data series. If you don't set this
            parameter, this resource returns all hardware and status metrics for
            the associated data series.
          in: query
          name: metrics
          required: true
          schema:
            type: array
            description: List that contains the metrics that you want MongoDB Atlas to
              report for the associated data series. If you don't set this
              parameter, this resource returns all hardware and status metrics
              for the associated data series.
            items:
              type: string
            maxItems: 10
            uniqueItems: true
          style: form
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/MeasurementsNonIndex"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return Atlas Search Hardware and Status Metrics
      tags:
        - Monitoring and Logs
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/integrations":
    get:
      description: Returns the settings that permit integrations with all configured
        third-party services. These settings apply to all databases managed in
        one MongoDB Cloud project. To use this resource, the requesting API Key
        must have the Organization Owner or Project Owner role.
      operationId: listThirdPartyIntegrations
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedIntegration"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Active Third-Party Service Integrations
      tags:
        - Third-Party Integrations
  "/api/atlas/v2/groups/{groupId}/integrations/{integrationType}":
    delete:
      description: Removes the settings that permit configuring one third-party
        service integration. These settings apply to all databases managed in
        one MongoDB Cloud project. If you delete an integration from a project,
        you remove that integration configuration only for that project. This
        action doesn't affect any other project or organization's configured
        `{INTEGRATION-TYPE}` integrations. To use this resource, the requesting
        API Key must have the Organization Owner or Project Owner role.
      operationId: deleteThirdPartyIntegration
      parameters:
        - description: Human-readable label that identifies the service which you want to
            integrate with MongoDB Cloud.
          in: path
          name: integrationType
          required: true
          schema:
            type: string
            title: Integration Type
        - $ref: "#/components/parameters/groupId"
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/NoBody"
              x-xgen-version: 2023-01-01
          description: This endpoint does not return a response body.
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Remove One Third-Party Service Integration
      tags:
        - Third-Party Integrations
    get:
      description: Returns the settings for configuring integration with one
        third-party service. These settings apply to all databases managed in
        one MongoDB Cloud project. To use this resource, the requesting API Key
        must have the Organization Owner or Project Owner role.
      operationId: getThirdPartyIntegration
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the service which you want to
            integrate with MongoDB Cloud.
          in: path
          name: integrationType
          required: true
          schema:
            type: string
            title: Integration Type
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/ThirdPartyIntegration"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Third-Party Service Integration
      tags:
        - Third-Party Integrations
    post:
      description: Adds the settings for configuring one third-party service
        integration. These settings apply to all databases managed in the
        specified MongoDB Cloud project. Each project can have only one
        configuration per `{INTEGRATION-TYPE}`. To use this resource, the
        requesting API Key must have the Organization Owner or Project Owner
        role.
      operationId: createThirdPartyIntegration
      parameters:
        - description: Human-readable label that identifies the service which you want to
            integrate with MongoDB Cloud.
          in: path
          name: integrationType
          required: true
          schema:
            type: string
            title: Integration Type
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/ThirdPartyIntegration"
        description: Third-party integration that you want to configure for your project.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedIntegration"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Configure One Third-Party Service Integration
      tags:
        - Third-Party Integrations
    put:
      description: Updates the settings for configuring integration with one
        third-party service. These settings apply to all databases managed in
        one MongoDB Cloud project. To use this resource, the requesting API Key
        must have the Organization Owner or Project Owner role.
      operationId: updateThirdPartyIntegration
      parameters:
        - description: Human-readable label that identifies the service which you want to
            integrate with MongoDB Cloud.
          in: path
          name: integrationType
          required: true
          schema:
            type: string
            title: Integration Type
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/ThirdPartyIntegration"
        description: Third-party integration that you want to configure for your project.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedIntegration"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Update One Third-Party Service Integration
      tags:
        - Third-Party Integrations
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/invites":
    get:
      deprecated: true
      description: Returns all pending invitations to the specified project. To use
        this resource, the requesting API Key must have the Project Owner role.
      operationId: listProjectInvitations
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Email address of the user account invited to this project.
          in: query
          name: username
          schema:
            type: string
            format: email
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GroupInvitation"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Project Invitations
      tags:
        - Projects
      x-sunset: 2024-10-04
    patch:
      deprecated: true
      description: Updates the details of one pending invitation to the specified
        project. To specify which invitation to update, provide the username of
        the invited user. To use this resource, the requesting API Key must have
        the Project Owner role.
      operationId: updateProjectInvitation
      parameters:
        - $ref: "#/components/parameters/groupId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/GroupInvitationRequest"
        description: Updates the details of one pending invitation to the specified project.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/GroupInvitation"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Update One Project Invitation
      tags:
        - Projects
      x-sunset: 2024-10-04
    post:
      deprecated: true
      description: Invites one MongoDB Cloud user to join the specified project. The
        MongoDB Cloud user must accept the invitation to access information
        within the specified project. To use this resource, the requesting API
        Key must have the Project Owner role.
      operationId: createProjectInvitation
      parameters:
        - $ref: "#/components/parameters/groupId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/GroupInvitationRequest"
        description: Invites one MongoDB Cloud user to join the specified project.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/GroupInvitation"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Invite One MongoDB Cloud User to Join One Project
      tags:
        - Projects
      x-sunset: 2024-10-04
  "/api/atlas/v2/groups/{groupId}/invites/{invitationId}":
    delete:
      deprecated: true
      description: Cancels one pending invitation sent to the specified MongoDB Cloud
        user to join a project. You can't cancel an invitation that the user
        accepted. To use this resource, the requesting API Key must have the
        Project Owner role.
      operationId: deleteProjectInvitation
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Unique 24-hexadecimal digit string that identifies the invitation.
          in: path
          name: invitationId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/NoBody"
              x-xgen-version: 2023-01-01
          description: This endpoint does not return a response body.
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Cancel One Project Invitation
      tags:
        - Projects
      x-sunset: 2024-10-04
    get:
      deprecated: true
      description: Returns the details of one pending invitation to the specified
        project. To use this resource, the requesting API Key must have the
        Project Owner role.
      operationId: getProjectInvitation
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Unique 24-hexadecimal digit string that identifies the invitation.
          in: path
          name: invitationId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/GroupInvitation"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Project Invitation
      tags:
        - Projects
      x-sunset: 2024-10-04
    patch:
      deprecated: true
      description: Updates the details of one pending invitation to the specified
        project. To specify which invitation to update, provide the unique
        identification string for that invitation. Use the Return All Project
        Invitations endpoint to retrieve IDs for all pending project
        invitations. To use this resource, the requesting API Key must have the
        Project Owner role.
      operationId: updateProjectInvitationById
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Unique 24-hexadecimal digit string that identifies the invitation.
          in: path
          name: invitationId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/GroupInvitationUpdateRequest"
        description: Updates the details of one pending invitation to the specified project.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/GroupInvitation"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Update One Project Invitation by Invitation ID
      tags:
        - Projects
      x-sunset: 2024-10-04
  "/api/atlas/v2/groups/{groupId}/ipAddresses":
    get:
      description: Returns all IP addresses for this project. To use this resource,
        the requesting API Key must have the Project Read Only role.
      operationId: returnAllIPAddresses
      parameters:
        - $ref: "#/components/parameters/groupId"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/GroupIPAddresses"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All IP Addresses for One Project
      tags:
        - Projects
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/limits":
    get:
      description: Returns all the limits for the specified project. To use this
        resource, the requesting API Key must have the Project Read Only role.
      operationId: listProjectLimits
      parameters:
        - $ref: "#/components/parameters/groupId"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DataFederationLimit"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Limits for One Project
      tags:
        - Projects
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/limits/{limitName}":
    delete:
      description: Removes the specified project limit. Depending on the limit, Atlas
        either resets the limit to its default value or removes the limit
        entirely. To use this resource, the requesting API Key must have the
        Project Owner role.
      operationId: deleteProjectLimit
      parameters:
        - description: >
            Human-readable label that identifies this project limit.


            | Limit Name | Description | Default | API Override Limit |

            | --- | --- | --- | --- |

            | atlas.project.deployment.clusters | Limit on the number of clusters in this project | 25 | 90 |

            | atlas.project.deployment.nodesPerPrivateLinkRegion | Limit on the number of nodes per Private Link region in this project | 50 | 90 |

            | atlas.project.security.databaseAccess.customRoles | Limit on the number of custom roles in this project | 100 | 1400 |

            | atlas.project.security.databaseAccess.users | Limit on the number of database users in this project | 100 | 900 |

            | atlas.project.security.networkAccess.crossRegionEntries | Limit on the number of cross-region network access entries in this project | 40 | 220 |

            | atlas.project.security.networkAccess.entries | Limit on the number of network access entries in this project | 200 | 20 |

            | dataFederation.bytesProcessed.query | Limit on the number of bytes processed during a single Data Federation query | N/A | N/A |

            | dataFederation.bytesProcessed.daily | Limit on the number of bytes processed across all Data Federation tenants for the current day | N/A | N/A |

            | dataFederation.bytesProcessed.weekly | Limit on the number of bytes processed across all Data Federation tenants for the current week | N/A | N/A |

            | dataFederation.bytesProcessed.monthly | Limit on the number of bytes processed across all Data Federation tenants for the current month | N/A | N/A |

            | atlas.project.deployment.privateServiceConnectionsPerRegionGroup | Number of Private Serivce Connections per Region Group | 50 | 100|

            | atlas.project.deployment.privateServiceConnectionsSubnetMask | Subnet mask for GCP PSC Networks. Has lower limit of 20. | 27 | 27|
          in: path
          name: limitName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/groupId"
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/NoBody"
              x-xgen-version: 2023-01-01
          description: This endpoint does not return a response body.
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Remove One Project Limit
      tags:
        - Projects
      x-xgen-experimental: true
    get:
      description: Returns the specified limit for the specified project. To use this
        resource, the requesting API Key must have the Project Read Only role.
      operationId: getProjectLimit
      parameters:
        - description: >
            Human-readable label that identifies this project limit.


            | Limit Name | Description | Default | API Override Limit |

            | --- | --- | --- | --- |

            | atlas.project.deployment.clusters | Limit on the number of clusters in this project | 25 | 90 |

            | atlas.project.deployment.nodesPerPrivateLinkRegion | Limit on the number of nodes per Private Link region in this project | 50 | 90 |

            | atlas.project.security.databaseAccess.customRoles | Limit on the number of custom roles in this project | 100 | 1400 |

            | atlas.project.security.databaseAccess.users | Limit on the number of database users in this project | 100 | 900 |

            | atlas.project.security.networkAccess.crossRegionEntries | Limit on the number of cross-region network access entries in this project | 40 | 220 |

            | atlas.project.security.networkAccess.entries | Limit on the number of network access entries in this project | 200 | 20 |

            | dataFederation.bytesProcessed.query | Limit on the number of bytes processed during a single Data Federation query | N/A | N/A |

            | dataFederation.bytesProcessed.daily | Limit on the number of bytes processed across all Data Federation tenants for the current day | N/A | N/A |

            | dataFederation.bytesProcessed.weekly | Limit on the number of bytes processed across all Data Federation tenants for the current week | N/A | N/A |

            | dataFederation.bytesProcessed.monthly | Limit on the number of bytes processed across all Data Federation tenants for the current month | N/A | N/A |

            | atlas.project.deployment.privateServiceConnectionsPerRegionGroup | Number of Private Serivce Connections per Region Group | 50 | 100|

            | atlas.project.deployment.privateServiceConnectionsSubnetMask | Subnet mask for GCP PSC Networks. Has lower limit of 20. | 27 | 27|
          in: path
          name: limitName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/groupId"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/DataFederationLimit"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Limit for One Project
      tags:
        - Projects
      x-xgen-experimental: true
    patch:
      description: >-
        Sets the specified project limit. To use this resource, the requesting
        API Key must have the Project Owner role.


        **NOTE**: Increasing the following configuration limits might lead to slower response times in the MongoDB Cloud UI or increased user management overhead leading to authentication or authorization re-architecture. If possible, we recommend that you create additional projects to gain access to more of these resources for a more sustainable growth pattern.
      operationId: setProjectLimit
      parameters:
        - description: >
            Human-readable label that identifies this project limit.


            | Limit Name | Description | Default | API Override Limit |

            | --- | --- | --- | --- |

            | atlas.project.deployment.clusters | Limit on the number of clusters in this project | 25 | 90 |

            | atlas.project.deployment.nodesPerPrivateLinkRegion | Limit on the number of nodes per Private Link region in this project | 50 | 90 |

            | atlas.project.security.databaseAccess.customRoles | Limit on the number of custom roles in this project | 100 | 1400 |

            | atlas.project.security.databaseAccess.users | Limit on the number of database users in this project | 100 | 900 |

            | atlas.project.security.networkAccess.crossRegionEntries | Limit on the number of cross-region network access entries in this project | 40 | 220 |

            | atlas.project.security.networkAccess.entries | Limit on the number of network access entries in this project | 200 | 20 |

            | dataFederation.bytesProcessed.query | Limit on the number of bytes processed during a single Data Federation query | N/A | N/A |

            | dataFederation.bytesProcessed.daily | Limit on the number of bytes processed across all Data Federation tenants for the current day | N/A | N/A |

            | dataFederation.bytesProcessed.weekly | Limit on the number of bytes processed across all Data Federation tenants for the current week | N/A | N/A |

            | dataFederation.bytesProcessed.monthly | Limit on the number of bytes processed across all Data Federation tenants for the current month | N/A | N/A |

            | atlas.project.deployment.privateServiceConnectionsPerRegionGroup | Number of Private Serivce Connections per Region Group | 50 | 100|

            | atlas.project.deployment.privateServiceConnectionsSubnetMask | Subnet mask for GCP PSC Networks. Has lower limit of 20. | 27 | 27|
          in: path
          name: limitName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/groupId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/DataFederationLimit"
        description: Limit to update.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/DataFederationLimit"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Set One Project Limit
      tags:
        - Projects
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/liveMigrations":
    post:
      description: >-
        Migrate one cluster that Cloud or Ops Manager manages to MongoDB Atlas.

         Please make sure to [validate](#tag/Cloud-Migration-Service/operation/validateMigration) your migration before initiating it.

         You can use this API endpoint for push live migrations only. Your API Key must have the Organization Owner role to successfully call this resource.

         **NOTE**: Migrating time-series collections is not yet supported on MongoDB 6.0 or higher. Migrations on MongoDB 6.0 or higher will skip any time-series collections on the source cluster.
      operationId: createPushMigration
      parameters:
        - $ref: "#/components/parameters/groupId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/LiveMigrationRequest"
        description: One migration to be created.
        required: true
      responses:
        "201":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/LiveMigrationResponse"
              x-xgen-version: 2023-01-01
          description: Created
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Migrate One Local Managed Cluster to MongoDB Atlas
      tags:
        - Cloud Migration Service
  "/api/atlas/v2/groups/{groupId}/liveMigrations/validate":
    post:
      description: Verifies whether the provided credentials, available disk space,
        MongoDB versions, and so on meet the requirements of the migration
        request. If the check passes, the migration can proceed. Your API Key
        must have the Organization Owner role to successfully call this
        resource.
      operationId: validateMigration
      parameters:
        - $ref: "#/components/parameters/groupId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/LiveMigrationRequest"
        description: One migration to be validated.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/LiveImportValidation"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Validate One Migration Request
      tags:
        - Cloud Migration Service
  "/api/atlas/v2/groups/{groupId}/liveMigrations/validate/{validationId}":
    get:
      description: Return the status of one migration validation job. Your API Key
        must have the Organization Owner role to successfully call this
        resource.
      operationId: getValidationStatus
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Unique 24-hexadecimal digit string that identifies the validation
            job.
          in: path
          name: validationId
          required: true
          schema:
            type: string
            example: 507f1f77bcf86cd799439011
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/LiveImportValidation"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Migration Validation Job
      tags:
        - Cloud Migration Service
  "/api/atlas/v2/groups/{groupId}/liveMigrations/{liveMigrationId}":
    get:
      description: Return details of one cluster migration job. Each push live
        migration job uses one migration host. Your API Key must have the
        Organization Member role to successfully call this resource.
      operationId: getPushMigration
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/liveMigrationId"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/LiveMigrationResponse"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Migration Job
      tags:
        - Cloud Migration Service
  "/api/atlas/v2/groups/{groupId}/liveMigrations/{liveMigrationId}/cutover":
    put:
      description: Cut over the migrated cluster to MongoDB Atlas. Confirm when the
        cut over completes. When the cut over completes, MongoDB Atlas completes
        the live migration process and stops synchronizing with the source
        cluster. Your API Key must have the Organization Owner role to
        successfully call this resource.
      operationId: cutoverMigration
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/liveMigrationId"
      responses:
        "202":
          content:
            application/vnd.atlas.2023-01-01+json:
              x-xgen-version: 2023-01-01
          description: Accepted.
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Cut Over the Migrated Cluster
      tags:
        - Cloud Migration Service
  "/api/atlas/v2/groups/{groupId}/maintenanceWindow":
    delete:
      description: Resets the maintenance window for the specified project. To use
        this resource, the requesting API Key must have the Project Owner role.
        Urgent maintenance activities such as security patches can't wait for
        your chosen window. MongoDB Cloud starts those maintenance activities
        when needed. After you schedule maintenance for your cluster, you can't
        change your maintenance window until the current maintenance efforts
        complete. The maintenance procedure that MongoDB Cloud performs requires
        at least one replica set election during the maintenance window per
        replica set. Maintenance always begins as close to the scheduled hour as
        possible, but in-progress cluster updates or unexpected system issues
        could delay the start time. To use this resource, the requesting API Key
        must have the Project Owner role.
      operationId: resetMaintenanceWindow
      parameters:
        - $ref: "#/components/parameters/groupId"
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              x-xgen-version: 2023-01-01
          description: This endpoint does not return a response body.
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Reset One Maintenance Window for One Project
      tags:
        - Maintenance Windows
    get:
      description: Returns the maintenance window for the specified project. MongoDB
        Cloud starts those maintenance activities when needed. You can't change
        your maintenance window until the current maintenance efforts complete.
        The maintenance procedure that MongoDB Cloud performs requires at least
        one replica set election during the maintenance window per replica set.
        Maintenance always begins as close to the scheduled hour as possible,
        but in-progress cluster updates or unexpected system issues could delay
        the start time. To use this resource, the requesting API Key must have
        the Project Owner role.
      operationId: getMaintenanceWindow
      parameters:
        - $ref: "#/components/parameters/groupId"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/GroupMaintenanceWindow"
              x-xgen-version: 2023-01-01
          description: OK
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Maintenance Window for One Project
      tags:
        - Maintenance Windows
    patch:
      description: Updates the maintenance window for the specified project. Urgent
        maintenance activities such as security patches can't wait for your
        chosen window. MongoDB Cloud starts those maintenance activities when
        needed. After you schedule maintenance for your cluster, you can't
        change your maintenance window until the current maintenance efforts
        complete. The maintenance procedure that MongoDB Cloud performs requires
        at least one replica set election during the maintenance window per
        replica set. Maintenance always begins as close to the scheduled hour as
        possible, but in-progress cluster updates or unexpected system issues
        could delay the start time. To use this resource, the requesting API Key
        must have the Project Owner role.
      operationId: updateMaintenanceWindow
      parameters:
        - $ref: "#/components/parameters/groupId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/GroupMaintenanceWindow"
        description: Updates the maintenance window for the specified project.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/NoBody"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Update Maintenance Window for One Project
      tags:
        - Maintenance Windows
  "/api/atlas/v2/groups/{groupId}/maintenanceWindow/autoDefer":
    post:
      description: Toggles automatic deferral of the maintenance window for the
        specified project. To use this resource, the requesting API Key must
        have the Project Owner role.
      operationId: toggleMaintenanceAutoDefer
      parameters:
        - $ref: "#/components/parameters/groupId"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Toggle Automatic Deferral of Maintenance for One Project
      tags:
        - Maintenance Windows
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/maintenanceWindow/defer":
    post:
      description: Defers the maintenance window for the specified project. Urgent
        maintenance activities such as security patches can't wait for your
        chosen window. MongoDB Cloud starts those maintenance activities when
        needed. After you schedule maintenance for your cluster, you can't
        change your maintenance window until the current maintenance efforts
        complete. The maintenance procedure that MongoDB Cloud performs requires
        at least one replica set election during the maintenance window per
        replica set. Maintenance always begins as close to the scheduled hour as
        possible, but in-progress cluster updates or unexpected system issues
        could delay the start time. To use this resource, the requesting API Key
        must have the Project Owner role.
      operationId: deferMaintenanceWindow
      parameters:
        - $ref: "#/components/parameters/groupId"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Defer One Maintenance Window for One Project
      tags:
        - Maintenance Windows
  "/api/atlas/v2/groups/{groupId}/managedSlowMs/disable":
    delete:
      description: Disables the slow operation threshold that MongoDB Cloud calculated
        for the specified project. The threshold determines which operations the
        Performance Advisor and Query Profiler considers slow. When enabled,
        MongoDB Cloud uses the average execution time for operations on your
        cluster to determine slow-running queries. As a result, the threshold is
        more pertinent to your cluster workload. The slow operation threshold is
        enabled by default for dedicated clusters (M10+). When disabled, MongoDB
        Cloud considers any operation that takes longer than 100 milliseconds to
        be slow. To use this resource, the requesting API Key must have the
        Project Owner role.
      operationId: disableSlowOperationThresholding
      parameters:
        - $ref: "#/components/parameters/groupId"
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              x-xgen-version: 2023-01-01
          description: This endpoint does not return a response body.
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Disable Managed Slow Operation Threshold
      tags:
        - Performance Advisor
  "/api/atlas/v2/groups/{groupId}/managedSlowMs/enable":
    post:
      description: Enables MongoDB Cloud to use its slow operation threshold for the
        specified project. The threshold determines which operations the
        Performance Advisor and Query Profiler considers slow. When enabled,
        MongoDB Cloud uses the average execution time for operations on your
        cluster to determine slow-running queries. As a result, the threshold is
        more pertinent to your cluster workload. The slow operation threshold is
        enabled by default for dedicated clusters (M10+). When disabled, MongoDB
        Cloud considers any operation that takes longer than 100 milliseconds to
        be slow. To use this resource, the requesting API Key must have the
        Project Owner role.
      operationId: enableSlowOperationThresholding
      parameters:
        - $ref: "#/components/parameters/groupId"
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              x-xgen-version: 2023-01-01
          description: This endpoint does not return a response body.
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Enable Managed Slow Operation Threshold
      tags:
        - Performance Advisor
  "/api/atlas/v2/groups/{groupId}/peers":
    get:
      description: Returns details about all network peering connections in the
        specified project. Network peering allows multiple cloud-hosted
        applications to securely connect to the same project. To use this
        resource, the requesting API Key must have the Project Read Only role.
      operationId: listPeeringConnections
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
        - description: Cloud service provider to use for this VPC peering connection.
          in: query
          name: providerName
          schema:
            type: string
            default: AWS
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedContainerPeer"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Network Peering Connections in One Project
      tags:
        - Network Peering
    post:
      description: Creates one new network peering connection in the specified
        project. Network peering allows multiple cloud-hosted applications to
        securely connect to the same project. To use this resource, the
        requesting API Key must have the Project Owner role. To learn more about
        considerations and prerequisites, see the Network Peering Documentation.
      externalDocs:
        description: Azure Network Peering Prerequisites
        url: https://docs.atlas.mongodb.com/reference/api/vpc-create-peering-connection/#prerequisites
      operationId: createPeeringConnection
      parameters:
        - $ref: "#/components/parameters/groupId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/BaseNetworkPeeringConnectionSettings"
        description: Create one network peering connection.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/BaseNetworkPeeringConnectionSettings"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Create One New Network Peering Connection
      tags:
        - Network Peering
  "/api/atlas/v2/groups/{groupId}/peers/{peerId}":
    delete:
      description: Removes one network peering connection in the specified project. If
        you Removes the last network peering connection associated with a
        project, MongoDB Cloud also removes any AWS security groups from the
        project IP access list. To use this resource, the requesting API Key
        must have the Project Owner role.
      operationId: deletePeeringConnection
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Unique 24-hexadecimal digit string that identifies the network
            peering connection that you want to delete.
          in: path
          name: peerId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "202":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/RequestAccepted"
              x-xgen-version: 2023-01-01
          description: Accepted
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Remove One Existing Network Peering Connection
      tags:
        - Network Peering
    get:
      description: Returns details about one specified network peering connection in
        the specified project. To use this resource, the requesting API Key must
        have the Project Read Only role.
      operationId: getPeeringConnection
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Unique 24-hexadecimal digit string that identifies the network
            peering connection that you want to retrieve.
          in: path
          name: peerId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/BaseNetworkPeeringConnectionSettings"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Network Peering Connection in One Project
      tags:
        - Network Peering
    patch:
      description: Updates one specified network peering connection in the specified
        project. To use this resource, the requesting API Key must have the
        Project Owner role.
      operationId: updatePeeringConnection
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Unique 24-hexadecimal digit string that identifies the network
            peering connection that you want to update.
          in: path
          name: peerId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/BaseNetworkPeeringConnectionSettings"
        description: Modify one network peering connection.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/BaseNetworkPeeringConnectionSettings"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Update One New Network Peering Connection
      tags:
        - Network Peering
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/pipelines":
    get:
      description: Returns a list of Data Lake Pipelines. To use this resource, the
        requesting API Key must have the Project Read Only role.
      operationId: listPipelines
      parameters:
        - $ref: "#/components/parameters/groupId"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DataLakeIngestionPipeline"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Data Lake Pipelines from One Project
      tags:
        - Data Lake Pipelines
    post:
      description: Creates one Data Lake Pipeline.
      operationId: createPipeline
      parameters:
        - $ref: "#/components/parameters/groupId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/DataLakeIngestionPipeline"
        description: Creates one Data Lake Pipeline.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/DataLakeIngestionPipeline"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Create One Data Lake Pipeline
      tags:
        - Data Lake Pipelines
  "/api/atlas/v2/groups/{groupId}/pipelines/{pipelineName}":
    delete:
      description: Removes one Data Lake Pipeline.
      operationId: deletePipeline
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the Data Lake Pipeline.
          in: path
          name: pipelineName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[^/\\ "$]{1,64}$
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/NoBody"
              x-xgen-version: 2023-01-01
          description: This endpoint does not return a response body.
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Remove One Data Lake Pipeline
      tags:
        - Data Lake Pipelines
    get:
      description: Returns the details of one Data Lake Pipeline within the specified
        project. To use this resource, the requesting API Key must have the
        Project Read Only role.
      operationId: getPipeline
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the Data Lake Pipeline.
          in: path
          name: pipelineName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[^/\\ "$]{1,64}$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/DataLakeIngestionPipeline"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Data Lake Pipeline
      tags:
        - Data Lake Pipelines
    patch:
      description: Updates one Data Lake Pipeline.
      operationId: updatePipeline
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the Data Lake Pipeline.
          in: path
          name: pipelineName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[^/\\ "$]{1,64}$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/DataLakeIngestionPipeline"
        description: Updates one Data Lake Pipeline.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/DataLakeIngestionPipeline"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Update One Data Lake Pipeline
      tags:
        - Data Lake Pipelines
  "/api/atlas/v2/groups/{groupId}/pipelines/{pipelineName}/availableSchedules":
    get:
      description: Returns a list of backup schedule policy items that you can use as
        a Data Lake Pipeline source. To use this resource, the requesting API
        Key must have the Project Read Only role.
      operationId: listPipelineSchedules
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the Data Lake Pipeline.
          in: path
          name: pipelineName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[^/\\ "$]{1,64}$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DiskBackupApiPolicyItem"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return Available Ingestion Schedules for One Data Lake Pipeline
      tags:
        - Data Lake Pipelines
  "/api/atlas/v2/groups/{groupId}/pipelines/{pipelineName}/availableSnapshots":
    get:
      description: Returns a list of backup snapshots that you can use to trigger an
        on demand pipeline run. To use this resource, the requesting API Key
        must have the Project Read Only role.
      operationId: listPipelineSnapshots
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
        - description: Date and time after which MongoDB Cloud created the snapshot. If
            specified, MongoDB Cloud returns available backup snapshots created
            after this time and date only. This parameter expresses its value in
            the ISO 8601 timestamp format in UTC.
          in: query
          name: completedAfter
          schema:
            type: string
            format: date-time
            example: 2022-01-01T00:00:00Z
        - description: Human-readable label that identifies the Data Lake Pipeline.
          in: path
          name: pipelineName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[^/\\ "$]{1,64}$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedBackupSnapshot"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return Available Backup Snapshots for One Data Lake Pipeline
      tags:
        - Data Lake Pipelines
  "/api/atlas/v2/groups/{groupId}/pipelines/{pipelineName}/pause":
    post:
      description: Pauses ingestion for a Data Lake Pipeline within the specified
        project. To use this resource, the requesting API Key must have the
        Project Read Only role.
      operationId: pausePipeline
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the Data Lake Pipeline.
          in: path
          name: pipelineName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[^/\\ "$]{1,64}$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/DataLakeIngestionPipeline"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Pause One Data Lake Pipeline
      tags:
        - Data Lake Pipelines
  "/api/atlas/v2/groups/{groupId}/pipelines/{pipelineName}/resume":
    post:
      description: Resumes ingestion for a Data Lake Pipeline within the specified
        project. To use this resource, the requesting API Key must have the
        Project Read Only role.
      operationId: resumePipeline
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the Data Lake Pipeline.
          in: path
          name: pipelineName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[^/\\ "$]{1,64}$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/DataLakeIngestionPipeline"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Resume One Data Lake Pipeline
      tags:
        - Data Lake Pipelines
  "/api/atlas/v2/groups/{groupId}/pipelines/{pipelineName}/runs":
    get:
      description: Returns a list of past Data Lake Pipeline runs. To use this
        resource, the requesting API Key must have the Project Read Only role.
      operationId: listPipelineRuns
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
        - description: If specified, Atlas returns only Data Lake Pipeline runs initiated
            before this time and date.
          in: query
          name: createdBefore
          schema:
            type: string
            format: date-time
            example: 2022-01-01T00:00:00Z
        - description: Human-readable label that identifies the Data Lake Pipeline.
          in: path
          name: pipelineName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[^/\\ "$]{1,64}$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedPipelineRun"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Data Lake Pipeline Runs from One Project
      tags:
        - Data Lake Pipelines
  "/api/atlas/v2/groups/{groupId}/pipelines/{pipelineName}/runs/{pipelineRunId}":
    delete:
      description: Deletes dataset that Atlas generated during the specified pipeline run.
      operationId: deletePipelineRunDataset
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the Data Lake Pipeline.
          in: path
          name: pipelineName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[^/\\ "$]{1,64}$
        - description: Unique 24-hexadecimal character string that identifies a Data Lake
            Pipeline run.
          in: path
          name: pipelineRunId
          required: true
          schema:
            type: string
            example: 32b6e34b3d91647abb20e7b8
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "202":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/RequestAccepted"
              x-xgen-version: 2023-01-01
          description: Accepted
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Delete Pipeline Run Dataset
      tags:
        - Data Lake Pipelines
    get:
      description: Returns the details of one Data Lake Pipeline run within the
        specified project. To use this resource, the requesting API Key must
        have the Project Read Only role.
      operationId: getPipelineRun
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the Data Lake Pipeline.
          in: path
          name: pipelineName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[^/\\ "$]{1,64}$
        - description: Unique 24-hexadecimal character string that identifies a Data Lake
            Pipeline run.
          in: path
          name: pipelineRunId
          required: true
          schema:
            type: string
            example: 32b6e34b3d91647abb20e7b8
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/IngestionPipelineRun"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Data Lake Pipeline Run
      tags:
        - Data Lake Pipelines
  "/api/atlas/v2/groups/{groupId}/pipelines/{pipelineName}/trigger":
    post:
      description: Triggers a Data Lake Pipeline ingestion of a specified snapshot.
      operationId: triggerSnapshotIngestion
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the Data Lake Pipeline.
          in: path
          name: pipelineName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[^/\\ "$]{1,64}$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/TriggerIngestionPipelineRequest"
        description: Triggers a single ingestion run of a snapshot.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/IngestionPipelineRun"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Trigger on demand snapshot ingestion
      tags:
        - Data Lake Pipelines
  "/api/atlas/v2/groups/{groupId}/privateEndpoint/endpointService":
    post:
      description: Creates one private endpoint service for the specified cloud
        service provider. This cloud service provider manages the private
        endpoint service for the project. When you create a private endpoint
        service, MongoDB Cloud creates a network container in the project for
        the cloud provider for which you create the private endpoint service if
        one doesn't already exist. To learn more about private endpoint
        terminology in MongoDB Cloud, see Private Endpoint Concepts. To use this
        resource, the requesting API Key must have the Project Owner role.
      externalDocs:
        description: Private Endpoint Concepts
        url: https://dochub.mongodb.org/core/private-endpoint-concepts
      operationId: createPrivateEndpointService
      parameters:
        - $ref: "#/components/parameters/groupId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/CloudProviderEndpointServiceRequest"
        description: Creates one private endpoint for the specified cloud service provider.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/EndpointService"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Create One Private Endpoint Service for One Provider
      tags:
        - Private Endpoint Services
  "/api/atlas/v2/groups/{groupId}/privateEndpoint/regionalMode":
    get:
      description: Checks whether each region in the specified cloud service provider
        can create multiple private endpoints per region. The cloud service
        provider manages the private endpoint for the project. To use this
        resource, the requesting API Key must have the Project Read Only role.
      operationId: getRegionalizedPrivateEndpointSetting
      parameters:
        - $ref: "#/components/parameters/groupId"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/ProjectSettingItem"
              x-xgen-version: 2023-01-01
          description: OK
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return Regionalized Private Endpoint Status
      tags:
        - Private Endpoint Services
    patch:
      description: Enables or disables the ability to create multiple private
        endpoints per region in all cloud service providers in one project. The
        cloud service provider manages the private endpoints for the project.
        Connection strings to existing multi-region and global sharded clusters
        change when you enable this setting. You must update your applications
        to use the new connection strings. This might cause downtime. To use
        this resource, the requesting API Key must have the Project Owner role
        and all clusters in the deployment must be sharded clusters. Once
        enabled, you cannot create replica sets.
      operationId: toggleRegionalizedPrivateEndpointSetting
      parameters:
        - $ref: "#/components/parameters/groupId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/ProjectSettingItem"
        description: Enables or disables the ability to create multiple private
          endpoints per region in all cloud service providers in one project.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/ProjectSettingItem"
              x-xgen-version: 2023-01-01
          description: OK
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Toggle Regionalized Private Endpoint Status
      tags:
        - Private Endpoint Services
  "/api/atlas/v2/groups/{groupId}/privateEndpoint/serverless/instance/{instanceName}/endpoint":
    get:
      description: Returns all private endpoints for one serverless instance. You must
        have at least the Project Read Only role for the project to successfully
        call this resource.
      operationId: listServerlessPrivateEndpoints
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the serverless instance
            associated with the tenant endpoint.
          in: path
          name: instanceName
          required: true
          schema:
            type: string
            maxLength: 64
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ServerlessTenantEndpoint"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Private Endpoints for One Serverless Instance
      tags:
        - Serverless Private Endpoints
    post:
      description: >-
        Creates one private endpoint for one serverless instance. To use this
        resource, the requesting API Key must have the Project Owner role.

         A new endpoint won't be immediately available after creation.  Read the steps in the linked tutorial for detailed guidance.
      externalDocs:
        description: Set Up a Private Endpoint for a Serverless Instance Tutorial
        url: https://dochub.mongodb.org/core/serverless-private-endpoint
      operationId: createServerlessPrivateEndpoint
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the serverless instance for
            which the tenant endpoint will be created.
          in: path
          name: instanceName
          required: true
          schema:
            type: string
            maxLength: 64
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/ServerlessTenantCreateRequest"
        description: Information about the Private Endpoint to create for the Serverless
          Instance.
        required: true
      responses:
        "201":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/ServerlessTenantEndpoint"
              x-xgen-version: 2023-01-01
          description: Created
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Create One Private Endpoint for One Serverless Instance
      tags:
        - Serverless Private Endpoints
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/privateEndpoint/serverless/instance/{instanceName}/endpoint/{endpointId}":
    delete:
      description: Remove one private endpoint from one serverless instance. To use
        this resource, the requesting API Key must have the Project Owner role.
      operationId: deleteServerlessPrivateEndpoint
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the serverless instance from
            which the tenant endpoint will be removed.
          in: path
          name: instanceName
          required: true
          schema:
            type: string
            maxLength: 64
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        - description: Unique 24-hexadecimal digit string that identifies the tenant
            endpoint which will be removed.
          in: path
          name: endpointId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/NoBody"
              x-xgen-version: 2023-01-01
          description: This endpoint does not return a response body.
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Remove One Private Endpoint for One Serverless Instance
      tags:
        - Serverless Private Endpoints
      x-xgen-experimental: true
    get:
      description: Return one private endpoint for one serverless instance. Identify
        this endpoint using its unique ID. You must have at least the Project
        Read Only role for the project to successfully call this resource.
      operationId: getServerlessPrivateEndpoint
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the serverless instance
            associated with the tenant endpoint.
          in: path
          name: instanceName
          required: true
          schema:
            type: string
            maxLength: 64
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        - description: Unique 24-hexadecimal digit string that identifies the tenant
            endpoint.
          in: path
          name: endpointId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/ServerlessTenantEndpoint"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Private Endpoint for One Serverless Instance
      tags:
        - Serverless Private Endpoints
      x-xgen-experimental: true
    patch:
      description: Updates one private endpoint for one serverless instance. To use
        this resource, the requesting API Key must have the Project Owner role.
      operationId: updateServerlessPrivateEndpoint
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the serverless instance
            associated with the tenant endpoint that will be updated.
          in: path
          name: instanceName
          required: true
          schema:
            type: string
            maxLength: 64
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        - description: Unique 24-hexadecimal digit string that identifies the tenant
            endpoint which will be updated.
          in: path
          name: endpointId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/ServerlessTenantEndpointUpdate"
        description: Object used for update.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/ServerlessTenantEndpoint"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Update One Private Endpoint for One Serverless Instance
      tags:
        - Serverless Private Endpoints
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/privateEndpoint/{cloudProvider}/endpointService":
    get:
      description: Returns the name, interfaces, and state of all private endpoint
        services for the specified cloud service provider. This cloud service
        provider manages the private endpoint service for the project. To use
        this resource, the requesting API Key must have the Project Read Only
        role.
      operationId: listPrivateEndpointServices
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Cloud service provider that manages this private endpoint service.
          in: path
          name: cloudProvider
          required: true
          schema:
            type: string
            default: AWS
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EndpointService"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Private Endpoint Services for One Provider
      tags:
        - Private Endpoint Services
  "/api/atlas/v2/groups/{groupId}/privateEndpoint/{cloudProvider}/endpointService/{endpointServiceId}":
    delete:
      description: Removes one private endpoint service from the specified project.
        This cloud service provider manages the private endpoint service that
        belongs to the project. To use this resource, the requesting API Key
        must have the Project Owner role.
      operationId: deletePrivateEndpointService
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Cloud service provider that manages this private endpoint service.
          in: path
          name: cloudProvider
          required: true
          schema:
            type: string
            default: AWS
        - description: Unique 24-hexadecimal digit string that identifies the private
            endpoint service that you want to delete.
          in: path
          name: endpointServiceId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/NoBody"
              x-xgen-version: 2023-01-01
          description: This endpoint does not return a response body.
        "400":
          $ref: "#/components/responses/badRequest"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Remove One Private Endpoint Service for One Provider
      tags:
        - Private Endpoint Services
    get:
      description: Returns the name, interfaces, and state of the specified private
        endpoint service from one project. The cloud service provider hosted
        this private endpoint service that belongs to the project. To use this
        resource, the requesting API Key must have the Project Read Only role.
      operationId: getPrivateEndpointService
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Cloud service provider that manages this private endpoint service.
          in: path
          name: cloudProvider
          required: true
          schema:
            type: string
            default: AWS
        - description: Unique 24-hexadecimal digit string that identifies the private
            endpoint service that you want to return.
          in: path
          name: endpointServiceId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/EndpointService"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Private Endpoint Service for One Provider
      tags:
        - Private Endpoint Services
  "/api/atlas/v2/groups/{groupId}/privateEndpoint/{cloudProvider}/endpointService/{endpointServiceId}/endpoint":
    post:
      description: Creates one private endpoint for the specified cloud service
        provider. This cloud service provider manages the private endpoint
        service, which in turn manages the private endpoints for the project. To
        use this resource, the requesting API Key must have the Project Owner
        role. To learn more about considerations, limitations, and
        prerequisites, see the MongoDB documentation for setting up a private
        endpoint.
      operationId: createPrivateEndpoint
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Cloud service provider that manages this private endpoint.
          in: path
          name: cloudProvider
          required: true
          schema:
            type: string
            default: AWS
        - description: Unique 24-hexadecimal digit string that identifies the private
            endpoint service for which you want to create a private endpoint.
          in: path
          name: endpointServiceId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/CreateEndpointRequest"
        description: Creates one private endpoint for the specified cloud service provider.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PrivateLinkEndpoint"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "402":
          $ref: "#/components/responses/paymentRequired"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Create One Private Endpoint for One Provider
      tags:
        - Private Endpoint Services
  "/api/atlas/v2/groups/{groupId}/privateEndpoint/{cloudProvider}/endpointService/{endpointServiceId}/endpoint/{endpointId}":
    delete:
      description: Removes one private endpoint from the specified project and private
        endpoint service, as managed by the specified cloud service provider.
        When the last private endpoint is removed from a given private endpoint
        service, that private endpoint service is also removed. To use this
        resource, the requesting API Key must have the Project Owner role.
      operationId: deletePrivateEndpoint
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Cloud service provider that manages this private endpoint.
          in: path
          name: cloudProvider
          required: true
          schema:
            type: string
            default: AWS
        - description: Unique string that identifies the private endpoint you want to
            delete. The format of the **endpointId** parameter differs for AWS
            and Azure. You must URL encode the **endpointId** for Azure private
            endpoints.
          in: path
          name: endpointId
          required: true
          schema:
            type: string
            pattern: ^vpce-[0-9a-f]{17}|^%2[fF]subscriptions%2[fF][0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}%2[fF]resource[gG]roups%2[fF]([-\w._()]+)%2[fF]providers%2[fF]Microsoft\.Network%2[fF]privateEndpoints%2[fF]([-\w._()]+)
        - description: Unique 24-hexadecimal digit string that identifies the private
            endpoint service from which you want to delete a private endpoint.
          in: path
          name: endpointServiceId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/NoBody"
              x-xgen-version: 2023-01-01
          description: This endpoint does not return a response body.
        "400":
          $ref: "#/components/responses/badRequest"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Remove One Private Endpoint for One Provider
      tags:
        - Private Endpoint Services
    get:
      description: Returns the connection state of the specified private endpoint. The
        private endpoint service manages this private endpoint which belongs to
        one project hosted from one cloud service provider. To use this
        resource, the requesting API Key must have the Project Read Only role.
      operationId: getPrivateEndpoint
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Cloud service provider that manages this private endpoint.
          in: path
          name: cloudProvider
          required: true
          schema:
            type: string
            default: AWS
        - description: Unique string that identifies the private endpoint you want to
            return. The format of the **endpointId** parameter differs for AWS
            and Azure. You must URL encode the **endpointId** for Azure private
            endpoints.
          in: path
          name: endpointId
          required: true
          schema:
            type: string
            pattern: ^vpce-[0-9a-f]{17}|^%2[fF]subscriptions%2[fF][0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}%2[fF]resource[gG]roups%2[fF]([-\w._()]+)%2[fF]providers%2[fF]Microsoft\.Network%2[fF]privateEndpoints%2[fF]([-\w._()]+)
        - description: Unique 24-hexadecimal digit string that identifies the private
            endpoint service for which you want to return a private endpoint.
          in: path
          name: endpointServiceId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PrivateLinkEndpoint"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Private Endpoint for One Provider
      tags:
        - Private Endpoint Services
  "/api/atlas/v2/groups/{groupId}/privateIpMode":
    get:
      deprecated: true
      description: Verifies if someone set the specified project to **Connect via
        Peering Only** mode. To use this resource, the requesting API Key must
        have the Project Read Only role.
      externalDocs:
        description: Changes to Connection Strings
        url: https://docs.atlas.mongodb.com/reference/faq/connection-changes/
      operationId: verifyConnectViaPeeringOnlyModeForOneProject
      parameters:
        - $ref: "#/components/parameters/groupId"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PrivateIPMode"
              x-xgen-version: 2023-01-01
          description: OK
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Verify Connect via Peering Only Mode for One Project
      tags:
        - Network Peering
      x-xgen-experimental: true
    patch:
      deprecated: true
      description: Disables Connect via Peering Only mode for the specified project.
        To use this resource, the requesting API Key must have the Project Owner
        role.
      externalDocs:
        description: Changes to Connection Strings
        url: https://docs.atlas.mongodb.com/reference/faq/connection-changes/
      operationId: disablePeering
      parameters:
        - $ref: "#/components/parameters/groupId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/PrivateIPMode"
        description: Disables Connect via Peering Only mode for the specified project.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PrivateIPMode"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Disable Connect via Peering Only Mode for One Project
      tags:
        - Network Peering
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/privateNetworkSettings/endpointIds":
    get:
      description: Returns all private endpoints for Federated Database Instances and
        Online Archives in the specified project. To use this resource, the
        requesting API Key must have the Project Read Only or Project Charts
        Admin roles.
      operationId: listDataFederationPrivateEndpoints
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedPrivateNetworkEndpointIdEntry"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Federated Database Instance and Online Archive Private
        Endpoints in One Project
      tags:
        - Data Federation
    post:
      description: >-
        Adds one private endpoint for Federated Database Instances and Online
        Archives to the specified projects. If the endpoint ID already exists
        and the associated comment is unchanged, Atlas Data Federation makes no
        change to the endpoint ID list. If the endpoint ID already exists and
        the associated comment is changed, Atlas Data Federation updates the
        comment value only in the endpoint ID list. If the endpoint ID doesn't
        exist, Atlas Data Federation appends the new endpoint to the list of
        endpoints in the endpoint ID list. Each region has an associated service
        name for the various endpoints in each region.

         `us-east-1` is `com.amazonaws.vpce.us-east-1.vpce-svc-00e311695874992b4`.

         `us-west-1` is `com.amazonaws.vpce.us-west-2.vpce-svc-09d86b19e59d1b4bb`.

         `eu-west-1` is `com.amazonaws.vpce.eu-west-1.vpce-svc-0824460b72e1a420e`.

         `eu-west-2` is `com.amazonaws.vpce.eu-west-2.vpce-svc-052f1840aa0c4f1f9`.

         `eu-central-1` is `com.amazonaws.vpce.eu-central-1.vpce-svc-0ac8ce91871138c0d`.

         `sa-east-1` is `com.amazonaws.vpce.sa-east-1.vpce-svc-0b56e75e8cdf50044`.

         `ap-southeast-2` is `com.amazonaws.vpce.ap-southeast-2.vpce-svc-036f1de74d761706e`.

         `ap-south-1` is `com.amazonaws.vpce.ap-south-1.vpce-svc-03eb8a541f96d356d`.

         To use this resource, the requesting API Key must have the Project Owner or Project Charts Admin roles.
      operationId: createDataFederationPrivateEndpoint
      parameters:
        - $ref: "#/components/parameters/groupId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/PrivateNetworkEndpointIdEntry"
        description: Private endpoint for Federated Database Instances and Online
          Archives to add to the specified project.
        required: true
      responses:
        "201":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedPrivateNetworkEndpointIdEntry"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Create One Federated Database Instance and Online Archive Private
        Endpoint for One Project
      tags:
        - Data Federation
  "/api/atlas/v2/groups/{groupId}/privateNetworkSettings/endpointIds/{endpointId}":
    delete:
      description: Removes one private endpoint for Federated Database Instances and
        Online Archives in the specified project. To use this resource, the
        requesting API Key must have the Project Owner role.
      operationId: deleteDataFederationPrivateEndpoint
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Unique 22-character alphanumeric string that identifies the private
            endpoint to remove. Atlas Data Federation supports AWS private
            endpoints using the AWS PrivateLink feature.
          in: path
          name: endpointId
          required: true
          schema:
            type: string
            maxLength: 22
            minLength: 22
            pattern: ^vpce-[0-9a-f]{17}$
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/NoBody"
              x-xgen-version: 2023-01-01
          description: This endpoint does not return a response body.
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Remove One Federated Database Instance and Online Archive Private
        Endpoint from One Project
      tags:
        - Data Federation
    get:
      description: Returns the specified private endpoint for Federated Database
        Instances or Online Archives in the specified project. To use this
        resource, the requesting API Key must have the Project Read Only or
        Project Charts Admin roles.
      operationId: getDataFederationPrivateEndpoint
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Unique 22-character alphanumeric string that identifies the private
            endpoint to return. Atlas Data Federation supports AWS private
            endpoints using the AWS PrivateLink feature.
          in: path
          name: endpointId
          required: true
          schema:
            type: string
            maxLength: 22
            minLength: 22
            pattern: ^vpce-[0-9a-f]{17}$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PrivateNetworkEndpointIdEntry"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Federated Database Instance and Online Archive Private
        Endpoint in One Project
      tags:
        - Data Federation
  "/api/atlas/v2/groups/{groupId}/processes":
    get:
      description: Returns details of all processes for the specified project. A
        MongoDB process can be either a `mongod` or `mongos`. To use this
        resource, the requesting API Key must have the Project Read Only role.
      operationId: listAtlasProcesses
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedHostView_Atlas"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All MongoDB Processes in One Project
      tags:
        - Monitoring and Logs
  "/api/atlas/v2/groups/{groupId}/processes/{processId}":
    get:
      description: Returns the processes for the specified host for the specified
        project. To use this resource, the requesting API Key must have the
        Project Read Only role.
      operationId: getAtlasProcess
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Combination of hostname and Internet Assigned Numbers Authority
            (IANA) port that serves the MongoDB process. The host must be the
            hostname, fully qualified domain name (FQDN), or Internet Protocol
            address (IPv4 or IPv6) of the host that runs the MongoDB process
            (`mongod` or `mongos`). The port must be the IANA port on which the
            MongoDB process listens for requests.
          in: path
          name: processId
          required: true
          schema:
            type: string
            example: mongodb.example.com:27017
            pattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\.){1,10}[a-z]+)?(\:[0-9]{4,5})$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/ApiHostView_Atlas"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One MongoDB Process by ID
      tags:
        - Monitoring and Logs
  "/api/atlas/v2/groups/{groupId}/processes/{processId}/collStats/namespaces":
    get:
      description: Return the subset of namespaces from the given process ranked by
        highest total execution time (descending) within the given time window.
      operationId: getCollStatsLatencyNamespacesForHost
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/processId"
        - $ref: "#/components/parameters/start"
        - $ref: "#/components/parameters/end"
        - $ref: "#/components/parameters/period"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-11-15+json:
              schema:
                $ref: "#/components/schemas/CollStatsRankedNamespaces"
              x-xgen-version: 2023-11-15
          description: Succeeded
        "403":
          $ref: "#/components/responses/forbidden"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return Ranked Namespaces from a Host
      tags:
        - Collection Level Metrics
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/processes/{processId}/databases":
    get:
      description: Returns the list of databases running on the specified host for the
        specified project. `M0` free clusters, `M2`, `M5`, and serverless
        clusters have some [operational
        limits](https://www.mongodb.com/docs/atlas/reference/free-shared-limitations/#operational-limitations).
        The MongoDB Cloud process must be a `mongod`. To use this resource, the
        requesting API Key must have the Project Read Only role.
      operationId: listDatabases
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
        - description: Combination of hostname and Internet Assigned Numbers Authority
            (IANA) port that serves the MongoDB process. The host must be the
            hostname, fully qualified domain name (FQDN), or Internet Protocol
            address (IPv4 or IPv6) of the host that runs the MongoDB process
            (`mongod`). The port must be the IANA port on which the MongoDB
            process listens for requests.
          in: path
          name: processId
          required: true
          schema:
            type: string
            example: mongodb.example.com:27017
            pattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\.){1,10}[a-z]+)?(\:[0-9]{4,5})$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedDatabase"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return Available Databases for One MongoDB Process
      tags:
        - Monitoring and Logs
  "/api/atlas/v2/groups/{groupId}/processes/{processId}/databases/{databaseName}":
    get:
      description: Returns one database running on the specified host for the
        specified project. To use this resource, the requesting API Key must
        have the Project Read Only role.
      operationId: getDatabase
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the database that the
            specified MongoDB process serves.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: Combination of hostname and Internet Assigned Numbers Authority
            (IANA) port that serves the MongoDB process. The host must be the
            hostname, fully qualified domain name (FQDN), or Internet Protocol
            address (IPv4 or IPv6) of the host that runs the MongoDB process
            (`mongod` or `mongos`). The port must be the IANA port on which the
            MongoDB process listens for requests.
          in: path
          name: processId
          required: true
          schema:
            type: string
            example: mongodb.example.com:27017
            pattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\.){1,10}[a-z]+)?(\:[0-9]{4,5})$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/MesurementsDatabase"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Database for a MongoDB Process
      tags:
        - Monitoring and Logs
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/processes/{processId}/databases/{databaseName}/measurements":
    get:
      description: Returns the measurements of one database for the specified host for
        the specified project. Returns the database's on-disk storage space
        based on the MongoDB `dbStats` command output. To calculate some metric
        series, Atlas takes the rate between every two adjacent points. For
        these metric series, the first data point has a null value because Atlas
        can't calculate a rate for the first data point given the query time
        range. Atlas retrieves database metrics every 20 minutes but reduces
        frequency when necessary to optimize database performance. To use this
        resource, the requesting API Key must have the Project Read Only role.
      operationId: getDatabaseMeasurements
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the database that the
            specified MongoDB process serves.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: One or more types of measurement to request for this MongoDB
            process. If omitted, the resource returns all measurements. To
            specify multiple values for `m`, repeat the `m` parameter for each
            value. Specify measurements that apply to the specified host.
            MongoDB Cloud returns an error if you specified any invalid
            measurements.
          in: query
          name: m
          schema:
            type: array
            items:
              type: string
              description: One measurement requested for this MongoDB process.
            maxItems: 10
            minItems: 1
            uniqueItems: true
          style: form
        - description: Combination of hostname and Internet Assigned Numbers Authority
            (IANA) port that serves the MongoDB process. The host must be the
            hostname, fully qualified domain name (FQDN), or Internet Protocol
            address (IPv4 or IPv6) of the host that runs the MongoDB process
            (`mongod` or `mongos`). The port must be the IANA port on which the
            MongoDB process listens for requests.
          in: path
          name: processId
          required: true
          schema:
            type: string
            example: mongodb.example.com:27017
            pattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\.){1,10}[a-z]+)?(\:[0-9]{4,5})$
        - $ref: "#/components/parameters/granularity"
        - $ref: "#/components/parameters/period"
        - $ref: "#/components/parameters/start"
        - $ref: "#/components/parameters/end"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/ApiMeasurementsGeneralView_Atlas"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return Measurements of One Database for One MongoDB Process
      tags:
        - Monitoring and Logs
  "/api/atlas/v2/groups/{groupId}/processes/{processId}/disks":
    get:
      description: Returns the list of disks or partitions for the specified host for
        the specified project. To use this resource, the requesting API Key must
        have the Project Read Only role.
      operationId: listDiskPartitions
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
        - description: Combination of hostname and Internet Assigned Numbers Authority
            (IANA) port that serves the MongoDB process. The host must be the
            hostname, fully qualified domain name (FQDN), or Internet Protocol
            address (IPv4 or IPv6) of the host that runs the MongoDB process
            (`mongod` or `mongos`). The port must be the IANA port on which the
            MongoDB process listens for requests.
          in: path
          name: processId
          required: true
          schema:
            type: string
            example: mongodb.example.com:27017
            pattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\.){1,10}[a-z]+)?(\:[0-9]{4,5})$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedDiskPartition"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return Available Disks for One MongoDB Process
      tags:
        - Monitoring and Logs
  "/api/atlas/v2/groups/{groupId}/processes/{processId}/disks/{partitionName}":
    get:
      description: Returns measurement details for one disk or partition for the
        specified host for the specified project. To use this resource, the
        requesting API Key must have the Project Read Only role.
      operationId: listDiskMeasurements
      parameters:
        - description: Human-readable label of the disk or partition to which the
            measurements apply.
          in: path
          name: partitionName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/groupId"
        - description: Combination of hostname and Internet Assigned Numbers Authority
            (IANA) port that serves the MongoDB process. The host must be the
            hostname, fully qualified domain name (FQDN), or Internet Protocol
            address (IPv4 or IPv6) of the host that runs the MongoDB process
            (`mongod` or `mongos`). The port must be the IANA port on which the
            MongoDB process listens for requests.
          in: path
          name: processId
          required: true
          schema:
            type: string
            example: mongodb.example.com:27017
            pattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\.){1,10}[a-z]+)?(\:[0-9]{4,5})$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/MeasurementDiskPartition"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return Measurements of One Disk
      tags:
        - Monitoring and Logs
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/processes/{processId}/disks/{partitionName}/measurements":
    get:
      description: >-
        Returns the measurements of one disk or partition for the specified host
        for the specified project. Returned value can be one of the following:

        - Throughput of I/O operations for the disk partition used for the MongoDB process

        - Percentage of time during which requests the partition issued and serviced

        - Latency per operation type of the disk partition used for the MongoDB process

        - Amount of free and used disk space on the disk partition used for the MongoDB process


        To use this resource, the requesting API Key must have the Project Read Only role.
      operationId: getDiskMeasurements
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: One or more types of measurement to request for this MongoDB
            process. If omitted, the resource returns all measurements. To
            specify multiple values for `m`, repeat the `m` parameter for each
            value. Specify measurements that apply to the specified host.
            MongoDB Cloud returns an error if you specified any invalid
            measurements.
          in: query
          name: m
          schema:
            type: array
            items:
              type: string
              description: One measurement requested for this MongoDB process.
            maxItems: 10
            minItems: 1
            uniqueItems: true
          style: form
        - description: Human-readable label of the disk or partition to which the
            measurements apply.
          in: path
          name: partitionName
          required: true
          schema:
            type: string
        - description: Combination of hostname and Internet Assigned Numbers Authority
            (IANA) port that serves the MongoDB process. The host must be the
            hostname, fully qualified domain name (FQDN), or Internet Protocol
            address (IPv4 or IPv6) of the host that runs the MongoDB process
            (`mongod` or `mongos`). The port must be the IANA port on which the
            MongoDB process listens for requests.
          in: path
          name: processId
          required: true
          schema:
            type: string
            example: mongodb.example.com:27017
            pattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\.){1,10}[a-z]+)?(\:[0-9]{4,5})$
        - $ref: "#/components/parameters/granularity"
        - $ref: "#/components/parameters/period"
        - $ref: "#/components/parameters/start"
        - $ref: "#/components/parameters/end"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/ApiMeasurementsGeneralView_Atlas"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return Measurements of One Disk for One MongoDB Process
      tags:
        - Monitoring and Logs
  "/api/atlas/v2/groups/{groupId}/processes/{processId}/measurements":
    get:
      description: >-
        Returns disk, partition, or host measurements per process for the
        specified host for the specified project. Returned value can be one of
        the following:

        - Throughput of I/O operations for the disk partition used for the MongoDB process

        - Percentage of time during which requests the partition issued and serviced

        - Latency per operation type of the disk partition used for the MongoDB process

        - Amount of free and used disk space on the disk partition used for the MongoDB process

        - Measurements for the host, such as CPU usage or number of I/O operations


        To use this resource, the requesting API Key must have the Project Read Only role.
      operationId: getHostMeasurements
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: One or more types of measurement to request for this MongoDB
            process. If omitted, the resource returns all measurements. To
            specify multiple values for `m`, repeat the `m` parameter for each
            value. Specify measurements that apply to the specified host.
            MongoDB Cloud returns an error if you specified any invalid
            measurements.
          in: query
          name: m
          schema:
            type: array
            items:
              type: string
              description: One measurement requested for this MongoDB process.
            maxItems: 10
            minItems: 1
            uniqueItems: true
          style: form
        - $ref: "#/components/parameters/period"
        - description: Combination of hostname and Internet Assigned Numbers Authority
            (IANA) port that serves the MongoDB process. The host must be the
            hostname, fully qualified domain name (FQDN), or Internet Protocol
            address (IPv4 or IPv6) of the host that runs the MongoDB process
            (`mongod` or `mongos`). The port must be the IANA port on which the
            MongoDB process listens for requests.
          in: path
          name: processId
          required: true
          schema:
            type: string
            example: mongodb.example.com:27017
            pattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\.){1,10}[a-z]+)?(\:[0-9]{4,5})$
        - $ref: "#/components/parameters/granularity"
        - $ref: "#/components/parameters/start"
        - $ref: "#/components/parameters/end"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/ApiMeasurementsGeneralView_Atlas"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return Measurements for One MongoDB Process
      tags:
        - Monitoring and Logs
  "/api/atlas/v2/groups/{groupId}/processes/{processId}/performanceAdvisor/namespaces":
    get:
      description: Returns up to 20 namespaces for collections experiencing slow
        queries on the specified host. If you specify a secondary member of a
        replica set that hasn't received any database read operations, the
        endpoint doesn't return any namespaces. To use this resource, the
        requesting API Key must have the Project Read Only role.
      operationId: listSlowQueryNamespaces
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: >-
            Length of time expressed during which the query finds suggested
            indexes among the managed namespaces in the cluster. This parameter
            expresses its value in milliseconds.


            - If you don't specify the **since** parameter, the endpoint returns data covering the duration before the current time.

            - If you specify neither the **duration** nor **since** parameters, the endpoint returns data from the previous 24 hours.
          in: query
          name: duration
          schema:
            type: integer
            format: int64
        - description: Combination of host and port that serves the MongoDB process. The
            host must be the hostname, FQDN, IPv4 address, or IPv6 address of
            the host that runs the MongoDB process (`mongod` or `mongos`). The
            port must be the IANA port on which the MongoDB process listens for
            requests.
          in: path
          name: processId
          required: true
          schema:
            type: string
            pattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\.){1,10}[a-z]+)?(\:[0-9]{4,5})$
        - description: >-
            Date and time from which the query retrieves the suggested indexes.
            This parameter expresses its value in the number of milliseconds
            that have elapsed since the [UNIX
            epoch](https://en.wikipedia.org/wiki/Unix_time).


            - If you don't specify the **duration** parameter, the endpoint returns data covering from the **since** value and the current time.

            - If you specify neither the **duration** nor the **since** parameters, the endpoint returns data from the previous 24 hours.
          in: query
          name: since
          schema:
            type: integer
            format: int64
            minimum: 1199145600000
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/Namespaces"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Namespaces for One Host
      tags:
        - Performance Advisor
  "/api/atlas/v2/groups/{groupId}/processes/{processId}/performanceAdvisor/slowQueryLogs":
    get:
      description: Returns log lines for slow queries that the Performance Advisor and
        Query Profiler identified. The Performance Advisor monitors queries that
        MongoDB considers slow and suggests new indexes to improve query
        performance. MongoDB Cloud bases the threshold for slow queries on the
        average time of operations on your cluster. This enables
        workload-relevant recommendations. To use this resource, the requesting
        API Key must have the Project Data Access Read Write role.
      operationId: listSlowQueries
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: >-
            Length of time expressed during which the query finds slow queries
            among the managed namespaces in the cluster. This parameter
            expresses its value in milliseconds.


            - If you don't specify the **since** parameter, the endpoint returns data covering the duration before the current time.

            - If you specify neither the **duration** nor **since** parameters, the endpoint returns data from the previous 24 hours.
          in: query
          name: duration
          schema:
            type: integer
            format: int64
        - description: "Namespaces from which to retrieve slow queries. A namespace
            consists of one database and one collection resource written as `.`:
            `<database>.<collection>`. To include multiple namespaces, pass the
            parameter multiple times delimited with an ampersand (`&`) between
            each namespace. Omit this parameter to return results for all
            namespaces."
          in: query
          name: namespaces
          schema:
            type: array
            items:
              type: string
          style: form
        - description: Maximum number of lines from the log to return.
          in: query
          name: nLogs
          schema:
            type: integer
            format: int64
            default: 20000
            maximum: 20000
            minimum: 0
        - description: Combination of host and port that serves the MongoDB process. The
            host must be the hostname, FQDN, IPv4 address, or IPv6 address of
            the host that runs the MongoDB process (`mongod` or `mongos`). The
            port must be the IANA port on which the MongoDB process listens for
            requests.
          in: path
          name: processId
          required: true
          schema:
            type: string
            pattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\.){1,10}[a-z]+)?(\:[0-9]{4,5})$
        - description: >-
            Date and time from which the query retrieves the slow queries. This
            parameter expresses its value in the number of milliseconds that
            have elapsed since the [UNIX
            epoch](https://en.wikipedia.org/wiki/Unix_time).


            - If you don't specify the **duration** parameter, the endpoint returns data covering from the **since** value and the current time.

            - If you specify neither the **duration** nor the **since** parameters, the endpoint returns data from the previous 24 hours.
          in: query
          name: since
          schema:
            type: integer
            format: int64
            minimum: 1199145600000
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PerformanceAdvisorSlowQueryList"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return Slow Queries
      tags:
        - Performance Advisor
  "/api/atlas/v2/groups/{groupId}/processes/{processId}/performanceAdvisor/suggestedIndexes":
    get:
      description: Returns the indexes that the Performance Advisor suggests. The
        Performance Advisor monitors queries that MongoDB considers slow and
        suggests new indexes to improve query performance. To use this resource,
        the requesting API Key must have the Project Read Only role.
      operationId: listSuggestedIndexes
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
        - description: >-
            Length of time expressed during which the query finds suggested
            indexes among the managed namespaces in the cluster. This parameter
            expresses its value in milliseconds.


            - If you don't specify the **since** parameter, the endpoint returns data covering the duration before the current time.

            - If you specify neither the **duration** nor **since** parameters, the endpoint returns data from the previous 24 hours.
          in: query
          name: duration
          schema:
            type: integer
            format: int64
        - description: "Namespaces from which to retrieve suggested indexes. A namespace
            consists of one database and one collection resource written as `.`:
            `<database>.<collection>`. To include multiple namespaces, pass the
            parameter multiple times delimited with an ampersand (`&`) between
            each namespace. Omit this parameter to return results for all
            namespaces."
          in: query
          name: namespaces
          schema:
            type: array
            items:
              type: string
          style: form
        - description: Maximum number of example queries that benefit from the suggested
            index.
          in: query
          name: nExamples
          schema:
            type: integer
            format: int64
            default: 5
        - description: Number that indicates the maximum indexes to suggest.
          in: query
          name: nIndexes
          schema:
            type: integer
            format: int64
        - description: Combination of host and port that serves the MongoDB process. The
            host must be the hostname, FQDN, IPv4 address, or IPv6 address of
            the host that runs the MongoDB process (`mongod` or `mongos`). The
            port must be the IANA port on which the MongoDB process listens for
            requests.
          in: path
          name: processId
          required: true
          schema:
            type: string
            pattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\.){1,10}[a-z]+)?(\:[0-9]{4,5})$
        - description: >-
            Date and time from which the query retrieves the suggested indexes.
            This parameter expresses its value in the number of milliseconds
            that have elapsed since the [UNIX
            epoch](https://en.wikipedia.org/wiki/Unix_time).


            - If you don't specify the **duration** parameter, the endpoint returns data covering from the **since** value and the current time.

            - If you specify neither the **duration** nor the **since** parameters, the endpoint returns data from the previous 24 hours.
          in: query
          name: since
          schema:
            type: integer
            format: int64
            minimum: 1199145600000
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PerformanceAdvisorResponse"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return Suggested Indexes
      tags:
        - Performance Advisor
  "/api/atlas/v2/groups/{groupId}/processes/{processId}/{databaseName}/{collectionName}/collStats/measurements":
    get:
      description: Get a list of the Coll Stats Latency process-level measurements for
        the given namespace
      operationId: getCollStatsLatencyNamespaceHostMeasurements
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/processId"
        - $ref: "#/components/parameters/databaseName"
        - $ref: "#/components/parameters/collectionName"
        - description: List that contains the metrics that you want to retrieve for the
            associated data series. If you don't set this parameter, this
            resource returns data series for all Coll Stats Latency metrics.
          in: query
          name: metrics
          schema:
            type: array
            items:
              type: string
              description: Metric requested for the given process
            uniqueItems: true
        - $ref: "#/components/parameters/start"
        - $ref: "#/components/parameters/end"
        - $ref: "#/components/parameters/period"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-11-15+json:
              schema:
                $ref: "#/components/schemas/MeasurementsCollStatsLatencyHost"
              x-xgen-version: 2023-11-15
          description: Succeeded
        "400":
          $ref: "#/components/responses/badRequest"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return Host-Level Query Latency
      tags:
        - Collection Level Metrics
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/pushBasedLogExport":
    delete:
      description: Disables the push-based log export feature by resetting the project
        level settings to its default configuration.
      operationId: deletePushBasedLogConfiguration
      parameters:
        - $ref: "#/components/parameters/groupId"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Disable the push-based log export feature for a project
      tags:
        - Push-Based Log Export
      x-xgen-experimental: true
    get:
      description: Fetches the current project level settings for the push-based log
        export feature.
      operationId: getPushBasedLogConfiguration
      parameters:
        - $ref: "#/components/parameters/groupId"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PushBasedLogExportProject"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Get the push-based log export configuration for a project
      tags:
        - Push-Based Log Export
      x-xgen-experimental: true
    patch:
      description: Updates the project level settings for the push-based log export feature.
      operationId: updatePushBasedLogConfiguration
      parameters:
        - $ref: "#/components/parameters/groupId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/PushBasedLogExportProject"
            x-xgen-version: 2023-01-01
        description: The project configuration details. The S3 bucket name, IAM role ID,
          and prefix path fields are the only fields that may be specified.
          Fields left unspecified will not be modified.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Update the push-based log export feature for a project
      tags:
        - Push-Based Log Export
      x-xgen-experimental: true
    post:
      description: Configures the project level settings for the push-based log export
        feature.
      operationId: createPushBasedLogConfiguration
      parameters:
        - $ref: "#/components/parameters/groupId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/PushBasedLogExportProject"
            x-xgen-version: 2023-01-01
        description: The project configuration details. The S3 bucket name, IAM role ID,
          and prefix path fields are required.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Enable the push-based log export feature for a project
      tags:
        - Push-Based Log Export
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/sampleDatasetLoad/{name}":
    post:
      description: Requests loading the MongoDB sample dataset into the specified
        cluster. To use this resource, the requesting API Key must have the
        Project Owner role.
      operationId: loadSampleDataset
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster into which you
            load the sample dataset.
          in: path
          name: name
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      responses:
        "201":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/SampleDatasetStatus"
              x-xgen-version: 2023-01-01
          description: Created
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Load Sample Dataset Request into Cluster
      tags:
        - Clusters
  "/api/atlas/v2/groups/{groupId}/sampleDatasetLoad/{sampleDatasetId}":
    get:
      description: Checks the progress of loading the sample dataset into one cluster.
        To use this resource, the requesting API Key must have the Project Owner
        role.
      operationId: getSampleDatasetLoadStatus
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Unique 24-hexadecimal digit string that identifies the loaded
            sample dataset.
          in: path
          name: sampleDatasetId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/SampleDatasetStatus"
              x-xgen-version: 2023-01-01
          description: OK
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Check Status of Cluster Sample Dataset Request
      tags:
        - Clusters
  "/api/atlas/v2/groups/{groupId}/serverless":
    get:
      description: Returns details for all serverless instances in the specified
        project. To use this resource, the requesting API Key must have the
        Project Read Only role.
      operationId: listServerlessInstances
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedServerlessInstanceDescription"
              x-xgen-version: 2023-01-01
          description: OK
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Serverless Instances from One Project
      tags:
        - Serverless Instances
    post:
      description: Creates one serverless instance in the specified project. To use
        this resource, the requesting API Key must have the Project Owner role.
      operationId: createServerlessInstance
      parameters:
        - $ref: "#/components/parameters/groupId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/ServerlessInstanceDescriptionCreate"
        description: Create One Serverless Instance in One Project.
        required: true
      responses:
        "201":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/ServerlessInstanceDescription"
              x-xgen-version: 2023-01-01
          description: Created
        "400":
          $ref: "#/components/responses/badRequest"
        "402":
          $ref: "#/components/responses/paymentRequired"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Create One Serverless Instance in One Project
      tags:
        - Serverless Instances
  "/api/atlas/v2/groups/{groupId}/serverless/{clusterName}/backup/restoreJobs":
    get:
      description: Returns all restore jobs for one serverless instance from the
        specified project. To use this resource, the requesting API Key must
        have the Project Owner role.
      operationId: listServerlessBackupRestoreJobs
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
        - description: Human-readable label that identifies the serverless instance.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedApiAtlasServerlessBackupRestoreJob"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Restore Jobs for One Serverless Instance
      tags:
        - Cloud Backups
    post:
      description: Restores one snapshot of one serverless instance from the specified
        project. To use this resource, the requesting API Key must have the
        Project Owner role.
      operationId: createServerlessBackupRestoreJob
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the serverless instance whose
            snapshot you want to restore.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/ServerlessBackupRestoreJob"
        description: Restores one snapshot of one serverless instance from the specified
          project.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/ServerlessBackupRestoreJob"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Restore One Snapshot of One Serverless Instance
      tags:
        - Cloud Backups
  "/api/atlas/v2/groups/{groupId}/serverless/{clusterName}/backup/restoreJobs/{restoreJobId}":
    get:
      description: Returns one restore job for one serverless instance from the
        specified project. To use this resource, the requesting API Key must
        have the Project Owner role.
      operationId: getServerlessBackupRestoreJob
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the serverless instance.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        - description: Unique 24-hexadecimal digit string that identifies the restore job
            to return.
          in: path
          name: restoreJobId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/ServerlessBackupRestoreJob"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Restore Job for One Serverless Instance
      tags:
        - Cloud Backups
  "/api/atlas/v2/groups/{groupId}/serverless/{clusterName}/backup/snapshots":
    get:
      description: Returns all snapshots of one serverless instance from the specified
        project. To use this resource, the requesting API Key must have the
        Project Read Only role.
      operationId: listServerlessBackups
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
        - description: Human-readable label that identifies the serverless instance.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedApiAtlasServerlessBackupSnapshot"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Snapshots of One Serverless Instance
      tags:
        - Cloud Backups
  "/api/atlas/v2/groups/{groupId}/serverless/{clusterName}/backup/snapshots/{snapshotId}":
    get:
      description: Returns one snapshot of one serverless instance from the specified
        project. To use this resource, the requesting API Key must have the
        Project Read Only role.
      operationId: getServerlessBackup
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the serverless instance.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        - description: Unique 24-hexadecimal digit string that identifies the desired
            snapshot.
          in: path
          name: snapshotId
          required: true
          schema:
            type: string
            example: 32b6e34b3d91647abb20e7b8
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/ServerlessBackupSnapshot"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Snapshot of One Serverless Instance
      tags:
        - Cloud Backups
  "/api/atlas/v2/groups/{groupId}/serverless/{clusterName}/performanceAdvisor/autoIndexing":
    get:
      description: Get whether the Serverless Auto Indexing feature is enabled.
      operationId: getServerlessAutoIndexing
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                type: boolean
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return Serverless Auto Indexing Enabled
      tags:
        - Performance Advisor
      x-xgen-experimental: true
    post:
      description: Set whether the Serverless Auto Indexing feature is enabled.
      operationId: setServerlessAutoIndexing
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the cluster.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        - description: Value that we want to set for the Serverless Auto Indexing toggle.
          in: query
          name: enable
          required: true
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/NoBody"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Set Serverless Auto Indexing
      tags:
        - Performance Advisor
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/serverless/{name}":
    delete:
      description: Removes one serverless instance from the specified project. The
        serverless instance must have termination protection disabled in order
        to be deleted. To use this resource, the requesting API Key must have
        the Project Owner role.
      operationId: deleteServerlessInstance
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the serverless instance.
          in: path
          name: name
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/NoBody"
              x-xgen-version: 2023-01-01
          description: This endpoint does not return a response body.
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Remove One Serverless Instance from One Project
      tags:
        - Serverless Instances
    get:
      description: Returns details for one serverless instance in the specified
        project. To use this resource, the requesting API Key must have the
        Project Read Only role.
      operationId: getServerlessInstance
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the serverless instance.
          in: path
          name: name
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/ServerlessInstanceDescription"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Serverless Instance from One Project
      tags:
        - Serverless Instances
    patch:
      description: Updates one serverless instance in the specified project. To use
        this resource, the requesting API Key must have the Project Owner role.
      operationId: updateServerlessInstance
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the serverless instance.
          in: path
          name: name
          required: true
          schema:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/ServerlessInstanceDescriptionUpdate"
        description: Update One Serverless Instance in One Project.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/ServerlessInstanceDescription"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "402":
          $ref: "#/components/responses/paymentRequired"
        "409":
          $ref: "#/components/responses/conflict"
      security:
        - DigestAuth: []
      summary: Update One Serverless Instance in One Project
      tags:
        - Serverless Instances
  "/api/atlas/v2/groups/{groupId}/settings":
    get:
      description: Returns details about the specified project's settings. To use this
        resource, the requesting API Key must have the Project Read Only role.
      operationId: getProjectSettings
      parameters:
        - $ref: "#/components/parameters/groupId"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/GroupSettings"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Project Settings
      tags:
        - Projects
    patch:
      description: Updates the settings of the specified project. You can update any
        of the options available. MongoDB cloud only updates the options
        provided in the request. To use this resource, the requesting API Key
        must have the Project Owner role.
      operationId: updateProjectSettings
      parameters:
        - $ref: "#/components/parameters/groupId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/GroupSettings"
        description: Settings to update.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/GroupSettings"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Update One Project Settings
      tags:
        - Projects
  "/api/atlas/v2/groups/{groupId}/streams":
    get:
      description: Returns all stream instances for the specified project.
      operationId: listStreamInstances
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-02-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedApiStreamsTenant"
              x-xgen-version: 2023-02-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Project Stream Instances
      tags:
        - Streams
      x-xgen-changelog:
        2023-09-11: The MongoDB Atlas Streams Processing API is now exposed as part of
          private preview, but is subject to change until GA.
      x-xgen-experimental: true
    post:
      description: Creates one stream instance in the specified project. To use this
        resource, the requesting API Key must have the Project Owner roles.
      operationId: createStreamInstance
      parameters:
        - $ref: "#/components/parameters/groupId"
      requestBody:
        content:
          application/vnd.atlas.2023-02-01+json:
            schema:
              $ref: "#/components/schemas/StreamsTenant"
        description: Details to create one streams instance in the specified project.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-02-01+json:
              schema:
                $ref: "#/components/schemas/StreamsTenant"
              x-xgen-version: 2023-02-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Create One Stream Instance
      tags:
        - Streams
      x-xgen-changelog:
        2023-09-11: The MongoDB Atlas Streams Processing API is now exposed as part of
          private preview, but is subject to change until GA.
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/streams/{tenantName}":
    delete:
      description: Delete one stream instance in the specified project. To use this
        resource, the requesting API Key must have the Project Owner roles.
      operationId: deleteStreamInstance
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the stream instance to delete.
          in: path
          name: tenantName
          required: true
          schema:
            type: string
      responses:
        "202":
          content:
            application/vnd.atlas.2023-02-01+json:
              schema:
                $ref: "#/components/schemas/NoBody"
              x-xgen-version: 2023-02-01
          description: Accepted
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Delete One Stream Instance
      tags:
        - Streams
      x-xgen-changelog:
        2023-09-11: The MongoDB Atlas Streams Processing API is now exposed as part of
          private preview, but is subject to change until GA.
      x-xgen-experimental: true
    get:
      description: Returns the details of one stream instance within the specified
        project. To use this resource, the requesting API Key must have the
        Project Read Only role.
      operationId: getStreamInstance
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the stream instance to return.
          in: path
          name: tenantName
          required: true
          schema:
            type: string
        - description: Flag to indicate whether connections information should be included
            in the stream instance.
          in: query
          name: includeConnections
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/vnd.atlas.2023-02-01+json:
              schema:
                $ref: "#/components/schemas/StreamsTenant"
              x-xgen-version: 2023-02-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Stream Instance
      tags:
        - Streams
      x-xgen-changelog:
        2023-09-11: The MongoDB Atlas Streams Processing API is now exposed as part of
          private preview, but is subject to change until GA.
      x-xgen-experimental: true
    patch:
      description: Update one stream instance in the specified project. To use this
        resource, the requesting API Key must have the Project Owner roles.
      operationId: updateStreamInstance
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the stream instance to update.
          in: path
          name: tenantName
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/vnd.atlas.2023-02-01+json:
            schema:
              $ref: "#/components/schemas/StreamsDataProcessRegion"
        description: Details of the new data process region to update in the streams
          instance.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-02-01+json:
              schema:
                $ref: "#/components/schemas/StreamsTenant"
              x-xgen-version: 2023-02-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Update One Stream Instance
      tags:
        - Streams
      x-xgen-changelog:
        2023-09-11: The MongoDB Atlas Streams Processing API is now exposed as part of
          private preview, but is subject to change until GA.
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/streams/{tenantName}/auditLogs":
    get:
      description: Downloads the audit logs for the specified Atlas Streams Processing
        instance. By default, logs cover periods of 30 days. To use this
        resource, the requesting API Key must have the Project Owner roles or
        Project Data Access Read Write roles.
      operationId: downloadStreamTenantAuditLogs
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Timestamp that specifies the end point for the range of log
            messages to download.  MongoDB Cloud expresses this timestamp in the
            number of seconds that have elapsed since the UNIX epoch.
          in: query
          name: endDate
          schema:
            type: integer
            format: int64
            example: 1636481348
            pattern: "1199145600"
        - description: Timestamp that specifies the starting point for the range of log
            messages to download. MongoDB Cloud expresses this timestamp in the
            number of seconds that have elapsed since the UNIX epoch.
          in: query
          name: startDate
          schema:
            type: integer
            format: int64
            example: 1636466948
            pattern: "1199145600"
        - description: Human-readable label that identifies the stream instance.
          in: path
          name: tenantName
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/vnd.atlas.2023-02-01+gzip:
              schema:
                type: string
                format: binary
                description: Compressed archive labeled `auditLogs.gz` downloads
              x-xgen-version: 2023-02-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Download Audit Logs for One Atlas Stream Processing Instance
      tags:
        - Streams
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/streams/{tenantName}/connections":
    get:
      description: Returns all connections of the stream instance for the specified project.
      operationId: listStreamConnections
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
        - description: Human-readable label that identifies the stream instance.
          in: path
          name: tenantName
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/vnd.atlas.2023-02-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedApiStreamsConnection"
              x-xgen-version: 2023-02-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Connections Of The Stream Instances
      tags:
        - Streams
      x-xgen-changelog:
        2023-09-11: The MongoDB Atlas Streams Processing API is now exposed as part of
          private preview, but is subject to change until GA.
      x-xgen-experimental: true
    post:
      description: Creates one connection for a stream instance in the specified
        project. To use this resource, the requesting API Key must have the
        Project Owner roles.
      operationId: createStreamConnection
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the stream instance.
          in: path
          name: tenantName
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/vnd.atlas.2023-02-01+json:
            schema:
              $ref: "#/components/schemas/StreamsConnection"
        description: Details to create one connection for a streams instance in the
          specified project.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-02-01+json:
              schema:
                $ref: "#/components/schemas/StreamsConnection"
              x-xgen-version: 2023-02-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "409":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Create One Connection
      tags:
        - Streams
      x-xgen-changelog:
        2023-09-11: The MongoDB Atlas Streams Processing API is now exposed as part of
          private preview, but is subject to change until GA.
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/streams/{tenantName}/connections/{connectionName}":
    delete:
      description: Delete one connection of the specified stream instance. To use this
        resource, the requesting API Key must have the Project Owner roles.
      operationId: deleteStreamConnection
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the stream instance.
          in: path
          name: tenantName
          required: true
          schema:
            type: string
        - description: Human-readable label that identifies the stream connection.
          in: path
          name: connectionName
          required: true
          schema:
            type: string
      responses:
        "202":
          content:
            application/vnd.atlas.2023-02-01+json:
              schema:
                $ref: "#/components/schemas/NoBody"
              x-xgen-version: 2023-02-01
          description: Accepted
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Delete One Stream Connection
      tags:
        - Streams
      x-xgen-changelog:
        2023-09-11: The MongoDB Atlas Streams Processing API is now exposed as part of
          private preview, but is subject to change until GA.
      x-xgen-experimental: true
    get:
      description: Returns the details of one stream connection within the specified
        stream instance. To use this resource, the requesting API Key must have
        the Project Read Only role.
      operationId: getStreamConnection
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the stream instance to return.
          in: path
          name: tenantName
          required: true
          schema:
            type: string
        - description: Human-readable label that identifies the stream connection to return.
          in: path
          name: connectionName
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/vnd.atlas.2023-02-01+json:
              schema:
                $ref: "#/components/schemas/StreamsConnection"
              x-xgen-version: 2023-02-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Stream Connection
      tags:
        - Streams
      x-xgen-changelog:
        2023-09-11: The MongoDB Atlas Streams Processing API is now exposed as part of
          private preview, but is subject to change until GA.
      x-xgen-experimental: true
    patch:
      description: Update one connection for the specified stream instance in the
        specified project. To use this resource, the requesting API Key must
        have the Project Owner roles.
      operationId: updateStreamConnection
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the stream instance.
          in: path
          name: tenantName
          required: true
          schema:
            type: string
        - description: Human-readable label that identifies the stream connection.
          in: path
          name: connectionName
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/vnd.atlas.2023-02-01+json:
            schema:
              $ref: "#/components/schemas/StreamsConnection"
        description: Details to update one connection for a streams instance in the
          specified project.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-02-01+json:
              schema:
                $ref: "#/components/schemas/StreamsConnection"
              x-xgen-version: 2023-02-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Update One Stream Connection
      tags:
        - Streams
      x-xgen-changelog:
        2023-09-11: The MongoDB Atlas Streams Processing API is now exposed as part of
          private preview, but is subject to change until GA.
      x-xgen-experimental: true
  "/api/atlas/v2/groups/{groupId}/teams":
    get:
      description: Returns all teams to which the authenticated user has access in the
        project specified using its unique 24-hexadecimal digit identifier. All
        members of the team share the same project access. To use this resource,
        the requesting API Key must have the Project Read Only role.
      operationId: listProjectTeams
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedTeamRole"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Teams in One Project
      tags:
        - Teams
    post:
      description: Adds one team to the specified project. All members of the team
        share the same project access. MongoDB Cloud limits the number of users
        to a maximum of 100 teams per project and a maximum of 250 teams per
        organization. To use this resource, the requesting API Key must have the
        Project Owner role.
      externalDocs:
        description: Manage Organization Teams
        url: https://docs.atlas.mongodb.com/access/manage-teams-in-orgs/#std-label-manage-teams
      operationId: addAllTeamsToProject
      parameters:
        - $ref: "#/components/parameters/groupId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/TeamRole"
        description: Team to add to the specified project.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedTeamRole"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Add One or More Teams to One Project
      tags:
        - Teams
  "/api/atlas/v2/groups/{groupId}/teams/{teamId}":
    delete:
      description: Removes one team specified using its unique 24-hexadecimal digit
        identifier from the project specified using its unique 24-hexadecimal
        digit identifier. To use this resource, the requesting API Key must have
        the Project Owner role.
      externalDocs:
        description: Manage Organization Teams
        url: https://docs.atlas.mongodb.com/access/manage-teams-in-orgs/#std-label-manage-teams
      operationId: removeProjectTeam
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Unique 24-hexadecimal digit string that identifies the team that
            you want to remove from the specified project.
          in: path
          name: teamId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              x-xgen-version: 2023-01-01
          description: This endpoint does not return a response body.
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Remove One Team from One Project
      tags:
        - Teams
    patch:
      description: Updates the project roles assigned to the specified team. You can
        grant team roles for specific projects and grant project access roles to
        users in the team. All members of the team share the same project
        access. To use this resource, the requesting API Key must have the
        Project Owner role.
      externalDocs:
        description: Manage Organization Teams
        url: https://docs.atlas.mongodb.com/access/manage-teams-in-orgs/#std-label-manage-teams
      operationId: updateTeamRoles
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Unique 24-hexadecimal digit string that identifies the team for
            which you want to update roles.
          in: path
          name: teamId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/TeamRole"
        description: The project roles assigned to the specified team.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedTeamRole"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Update Team Roles in One Project
      tags:
        - Teams
  "/api/atlas/v2/groups/{groupId}/userSecurity":
    get:
      description: Returns the current LDAP configuration for the specified project.
        To use this resource, the requesting API Key must have the Project Owner
        role.
      operationId: getLDAPConfiguration
      parameters:
        - $ref: "#/components/parameters/groupId"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/UserSecurity"
              x-xgen-version: 2023-01-01
          description: OK
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return the Current LDAP or X.509 Configuration
      tags:
        - LDAP Configuration
    patch:
      description: >-
        Edits the LDAP configuration for the specified project. To use this
        resource, the requesting API Key must have the Project Owner role.


        Updating this configuration triggers a rolling restart of the database.
      operationId: saveLDAPConfiguration
      parameters:
        - $ref: "#/components/parameters/groupId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/UserSecurity"
        description: Updates the LDAP configuration for the specified project.
        required: true
      responses:
        "202":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/UserSecurity"
              x-xgen-version: 2023-01-01
          description: Accepted
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Edit the LDAP or X.509 Configuration
      tags:
        - LDAP Configuration
  "/api/atlas/v2/groups/{groupId}/userSecurity/customerX509":
    delete:
      description: >-
        Clears the customer-managed X.509 settings on a project, including the
        uploaded Certificate Authority, which disables self-managed X.509.

         Updating this configuration triggers a rolling restart of the database. You must have the Project Owner role to use this endpoint.
      operationId: disableCustomerManagedX509
      parameters:
        - $ref: "#/components/parameters/groupId"
      responses:
        "202":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/UserSecurity"
              x-xgen-version: 2023-01-01
          description: Accepted
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Disable Customer-Managed X.509
      tags:
        - X.509 Authentication
  "/api/atlas/v2/groups/{groupId}/userSecurity/ldap/userToDNMapping":
    delete:
      description: Removes the current LDAP Distinguished Name mapping captured in the
        ``userToDNMapping`` document from the LDAP configuration for the
        specified project. To use this resource, the requesting API Key must
        have the Project Owner role.
      operationId: deleteLDAPConfiguration
      parameters:
        - $ref: "#/components/parameters/groupId"
      responses:
        "202":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/UserSecurity"
              x-xgen-version: 2023-01-01
          description: Accepted
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Remove the Current LDAP User to DN Mapping
      tags:
        - LDAP Configuration
  "/api/atlas/v2/groups/{groupId}/userSecurity/ldap/verify":
    post:
      description: Verifies the LDAP configuration for the specified project. To use
        this resource, the requesting API Key must have the Project Owner role.
      operationId: verifyLDAPConfiguration
      parameters:
        - $ref: "#/components/parameters/groupId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/LDAPVerifyConnectivityJobRequestParams"
        description: The LDAP configuration for the specified project that you want to
          verify.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/LDAPVerifyConnectivityJobRequest"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Verify the LDAP Configuration in One Project
      tags:
        - LDAP Configuration
  "/api/atlas/v2/groups/{groupId}/userSecurity/ldap/verify/{requestId}":
    get:
      description: Returns the status of one request to verify one LDAP configuration
        for the specified project. To use this resource, the requesting API Key
        must have the Project Owner role.
      operationId: getLDAPConfigurationStatus
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Unique string that identifies the request to verify an <abbr
            title="Lightweight Directory Access Protocol">LDAP</abbr>
            configuration.
          in: path
          name: requestId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/LDAPVerifyConnectivityJobRequest"
              x-xgen-version: 2023-01-01
          description: OK
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return the Status of One Verify LDAP Configuration Request
      tags:
        - LDAP Configuration
  "/api/atlas/v2/groups/{groupId}/users":
    get:
      description: Returns details about all users in the specified project. Users
        belong to an organization. To use this resource, the requesting API Key
        must have the Project Read Only role.
      operationId: listProjectUsers
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
        - description: 'Flag that indicates whether the returned list should include users
            who belong to a team with a role in this project. You might not have
            assigned the individual users a role in this project. If
            `"flattenTeams" : false`, this resource returns only users with a
            role in the project.  If `"flattenTeams" : true`, this resource
            returns both users with roles in the project and users who belong to
            teams with roles in the project.'
          in: query
          name: flattenTeams
          schema:
            type: boolean
            default: false
        - description: 'Flag that indicates whether the returned list should include users
            with implicit access to the project, the Organization Owner or
            Organization Read Only role. You might not have assigned the
            individual users a role in this project. If `"includeOrgUsers":
            false`, this resource returns only users with a role in the project.
            If `"includeOrgUsers": true`, this resource returns both users with
            roles in the project and users who have implicit access to the
            project through their organization role.'
          in: query
          name: includeOrgUsers
          schema:
            type: boolean
            default: false
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedAppUser"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Users in One Project
      tags:
        - Projects
  "/api/atlas/v2/groups/{groupId}/users/{userId}":
    delete:
      description: Removes the specified user from the specified project. To use this
        resource, the requesting API Key must have the Project Owner role.
      operationId: removeProjectUser
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Unique 24-hexadecimal string that identifies MongoDB Cloud user you
            want to remove from the specified project. To return a application
            user's ID using their application username, use the Get All
            application users in One Project endpoint.
          in: path
          name: userId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              x-xgen-version: 2023-01-01
          description: This endpoint does not return a response body.
        "400":
          $ref: "#/components/responses/badRequest"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Remove One User from One Project
      tags:
        - Projects
  "/api/atlas/v2/groups/{groupId}/users/{userId}/roles":
    put:
      description: Updates the roles of the specified user in the specified project.
        To specify the user to update, provide the unique 24-hexadecimal digit
        string that identifies the user in the specified project. To use this
        resource, the requesting API Key must have the Group User Admin role.
      operationId: updateProjectRoles
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Unique 24-hexadecimal digit string that identifies the user to
            modify.
          in: path
          name: userId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/UpdateGroupRolesForUser"
        description: Roles to update for the specified user.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/UpdateGroupRolesForUser"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Update Project Roles for One MongoDB Cloud User
      tags:
        - Projects
      x-xgen-experimental: true
  /api/atlas/v2/orgs:
    get:
      description: Returns all organizations to which the requesting API Key has
        access. To use this resource, the requesting API Key must have the
        Organization Member role.
      operationId: listOrganizations
      parameters:
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
        - description: Human-readable label of the organization to use to filter the
            returned list. Performs a case-insensitive search for an
            organization that starts with the specified name.
          in: query
          name: name
          schema:
            type: string
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedOrganization"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Organizations
      tags:
        - Organizations
    post:
      description: Creates one organization in MongoDB Cloud and links it to the
        requesting API Key's organization. To use this resource, the requesting
        API Key must have the Organization Owner role. The requesting API Key's
        organization must be a paying organization. To learn more, see
        [Configure a Paying
        Organization](https://www.mongodb.com/docs/atlas/billing/#configure-a-paying-organization)
        in the MongoDB Atlas documentation.
      operationId: createOrganization
      parameters: []
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/CreateOrganizationRequest"
        description: Organization that you want to create.
        required: true
      responses:
        "201":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/CreateOrganizationResponse"
              x-xgen-version: 2023-01-01
          description: Created
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Create One Organization
      tags:
        - Organizations
  "/api/atlas/v2/orgs/{orgId}":
    delete:
      description: >-
        Removes one specified organization. MongoDB Cloud imposes the following
        limits on this resource:

         - Organizations with active projects cannot be removed.
         - All projects in the organization must be removed before you can remove the organization.
         To use this resource, the requesting API Key must have the Organization Owner role.
      operationId: deleteOrganization
      parameters:
        - $ref: "#/components/parameters/orgId"
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/NoBody"
              x-xgen-version: 2023-01-01
          description: This endpoint does not return a response body.
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "402":
          $ref: "#/components/responses/paymentRequired"
        "403":
          $ref: "#/components/responses/forbidden"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Remove One Organization
      tags:
        - Organizations
    get:
      description: Returns one organization to which the requesting API key has
        access. To use this resource, the requesting API Key must have the
        Organization Member role.
      operationId: getOrganization
      parameters:
        - $ref: "#/components/parameters/orgId"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/AtlasOrganization"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Organization
      tags:
        - Organizations
    patch:
      description: Renames one organization. To use this resource, the requesting API
        Key must have the Organization Owner role.
      operationId: renameOrganization
      parameters:
        - $ref: "#/components/parameters/orgId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/AtlasOrganization"
        description: Details to update on the specified organization.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/AtlasOrganization"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Rename One Organization
      tags:
        - Organizations
      x-xgen-experimental: true
  "/api/atlas/v2/orgs/{orgId}/apiKeys":
    get:
      description: Returns all organization API keys for the specified organization.
        The organization API keys grant programmatic access to an organization.
        You can't use the API key to log into MongoDB Cloud through the console.
        To use this resource, the requesting API Key must have the Organization
        Member role.
      externalDocs:
        description: Programmatic API Keys
        url: https://docs.atlas.mongodb.com/configure-api-access/#std-label-atlas-prog-api-key
      operationId: listApiKeys
      parameters:
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/orgId"
        - $ref: "#/components/parameters/pageNum"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedApiApiUser"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Organization API Keys
      tags:
        - Programmatic API Keys
    post:
      description: Creates one API key for the specified organization. An organization
        API key grants programmatic access to an organization. You can't use the
        API key to log into the console. To use this resource, the requesting
        API Key must have the Organization Owner role.
      externalDocs:
        description: Programmatic API Keys
        url: https://docs.atlas.mongodb.com/configure-api-access/#std-label-atlas-prog-api-key
      operationId: createApiKey
      parameters:
        - $ref: "#/components/parameters/orgId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/CreateAtlasOrganizationApiKey"
        description: Organization API Key to be created.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/ApiKeyUserDetails"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Create One Organization API Key
      tags:
        - Programmatic API Keys
  "/api/atlas/v2/orgs/{orgId}/apiKeys/{apiUserId}":
    delete:
      description: Removes one organization API key from the specified organization.
        When you remove an API key from an organization, MongoDB Cloud also
        removes that key from any projects that use that key. To use this
        resource, the requesting API Key must have the Organization Owner role.
      externalDocs:
        description: Configure Atlas API Access
        url: https://docs.atlas.mongodb.com/configure-api-access/#std-label-enable-api-access-list
      operationId: deleteApiKey
      parameters:
        - $ref: "#/components/parameters/orgId"
        - description: Unique 24-hexadecimal digit string that identifies this
            organization API key.
          in: path
          name: apiUserId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/NoBody"
              x-xgen-version: 2023-01-01
          description: This endpoint does not return a response body.
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Remove One Organization API Key
      tags:
        - Programmatic API Keys
    get:
      description: Returns one organization API key. The organization API keys grant
        programmatic access to an organization. You can't use the API key to log
        into MongoDB Cloud through the user interface. To use this resource, the
        requesting API Key must have the  Organization Member role.
      externalDocs:
        description: Programmatic API Keys
        url: https://docs.atlas.mongodb.com/configure-api-access/#std-label-atlas-prog-api-key
      operationId: getApiKey
      parameters:
        - $ref: "#/components/parameters/orgId"
        - description: Unique 24-hexadecimal digit string that identifies this
            organization API key that  you want to update.
          in: path
          name: apiUserId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/ApiKeyUserDetails"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Organization API Key
      tags:
        - Programmatic API Keys
    patch:
      description: Updates one organization API key in the specified organization. The
        organization API keys  grant programmatic access to an organization. To
        use this resource, the requesting  API Key must have the Organization
        Owner role.
      externalDocs:
        description: Programmatic API Keys
        url: https://docs.atlas.mongodb.com/configure-api-access/#std-label-atlas-prog-api-key
      operationId: updateApiKey
      parameters:
        - $ref: "#/components/parameters/orgId"
        - description: Unique 24-hexadecimal digit string that identifies this
            organization API key you  want to update.
          in: path
          name: apiUserId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/UpdateAtlasOrganizationApiKey"
        description: Organization API key to be updated. This request requires a minimum
          of one of the two body parameters.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/ApiKeyUserDetails"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Update One Organization API Key
      tags:
        - Programmatic API Keys
  "/api/atlas/v2/orgs/{orgId}/apiKeys/{apiUserId}/accessList":
    get:
      description: Returns all access list entries that you configured for the
        specified organization API key. To use this resource, the requesting API
        Key must have the Organization Member role.
      externalDocs:
        description: Programmatic API Keys
        url: https://docs.atlas.mongodb.com/configure-api-access/#view-the-details-of-one-api-key-in-one-organization
      operationId: listApiKeyAccessListsEntries
      parameters:
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/orgId"
        - $ref: "#/components/parameters/pageNum"
        - description: Unique 24-hexadecimal digit string that identifies this
            organization API key for which you want to return access list
            entries.
          in: path
          name: apiUserId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedApiUserAccessListResponse"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Access List Entries for One Organization API Key
      tags:
        - Programmatic API Keys
    post:
      description: Creates the access list entries for the specified organization API
        key. Resources require all API requests originate from IP addresses on
        the API access list. To use this resource, the requesting API Key must
        have the Read Write role.
      operationId: createApiKeyAccessList
      parameters:
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/orgId"
        - $ref: "#/components/parameters/pageNum"
        - description: Unique 24-hexadecimal digit string that identifies this
            organization API key for which you want to create a new access list
            entry.
          in: path
          name: apiUserId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/UserAccessListRequest"
        description: Access list entries to be created for the specified organization
          API key.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedApiUserAccessListResponse"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Create Access List Entries for One Organization API Key
      tags:
        - Programmatic API Keys
  "/api/atlas/v2/orgs/{orgId}/apiKeys/{apiUserId}/accessList/{ipAddress}":
    delete:
      description: Removes the specified access list entry from the specified
        organization API key. Resources require all API requests originate from
        the IP addresses on the API access list. To use this resource, the
        requesting API Key must have the Read Write role. In addition, you
        cannot remove the requesting IP address from the requesting organization
        API key.
      externalDocs:
        description: Configure Atlas API Access
        url: https://docs.atlas.mongodb.com/configure-api-access/#std-label-enable-api-access-list
      operationId: deleteApiKeyAccessListEntry
      parameters:
        - $ref: "#/components/parameters/orgId"
        - description: Unique 24-hexadecimal digit string that identifies this
            organization API key for which you want to remove access list
            entries.
          in: path
          name: apiUserId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
        - description: One IP address or multiple IP addresses represented as one CIDR
            block to limit requests to API resources in the specified
            organization. When adding a CIDR block with a subnet mask, such as
            192.0.2.0/24, use the URL-encoded value %2F for the forward slash /.
          in: path
          name: ipAddress
          required: true
          schema:
            type: string
            example: 192.0.2.0%2F24
            pattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\:){7}[0-9a-f]{1,4}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\:){1,6}\:(%2[fF][0-9]{1,3})?$
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/NoBody"
              x-xgen-version: 2023-01-01
          description: This endpoint does not return a response body.
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Remove One Access List Entry for One Organization API Key
      tags:
        - Programmatic API Keys
    get:
      description: Returns one access list entry for the specified organization API
        key. Resources require  all API requests originate from IP addresses on
        the API access list. To use this resource, the requesting API Key must
        have the Organization Member role.
      externalDocs:
        description: Configure Atlas API Access
        url: https://docs.atlas.mongodb.com/configure-api-access/#std-label-enable-api-access-list
      operationId: getApiKeyAccessList
      parameters:
        - $ref: "#/components/parameters/orgId"
        - description: One IP address or multiple IP addresses represented as one CIDR
            block to limit  requests to API resources in the specified
            organization. When adding a CIDR block with a subnet mask, such
            as  192.0.2.0/24, use the URL-encoded value %2F for the forward
            slash /.
          in: path
          name: ipAddress
          required: true
          schema:
            type: string
            example: 192.0.2.0%2F24
            pattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\:){7}[0-9a-f]{1,4}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\:){1,6}\:(%2[fF][0-9]{1,3})?$
        - description: Unique 24-hexadecimal digit string that identifies this
            organization API key for  which you want to return access list
            entries.
          in: path
          name: apiUserId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/UserAccessListResponse"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Access List Entry for One Organization API Key
      tags:
        - Programmatic API Keys
      x-xgen-experimental: true
  "/api/atlas/v2/orgs/{orgId}/billing/costExplorer/usage":
    post:
      description: Creates a query process within the Cost Explorer for the given
        parameters. A token is returned that can be used to poll the status of
        the query and eventually retrieve the results.
      operationId: createCostExplorerQueryProcess
      parameters:
        - $ref: "#/components/parameters/orgId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/CostExplorerFilterRequestBody"
        description: Filter parameters for the Cost Explorer query.
        required: true
      responses:
        "202":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/CostExplorerFilterResponse"
              x-xgen-version: 2023-01-01
          description: Accepted
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Create Cost Explorer query process
      tags:
        - Invoices
      x-xgen-experimental: true
  "/api/atlas/v2/orgs/{orgId}/billing/costExplorer/usage/{token}":
    get:
      description: Returns the usage details for a Cost Explorer query, if the query
        is finished and the data is ready to be viewed. If the data is not
        ready, a 'processing' response willindicate that another request should
        be sent later to view the data.
      operationId: createCostExplorerQueryProcess_1
      parameters:
        - $ref: "#/components/parameters/orgId"
        - description: Unique 64 digit string that identifies the Cost Explorer query.
          in: path
          name: token
          required: true
          schema:
            type: string
            example: 4ABBE973862346D40F3AE859D4BE96E0F895764EB14EAB039E7B82F9D638C05C
            maxLength: 64
            minLength: 64
      responses:
        "102":
          description: Processing
        "200":
          content:
            application/vnd.atlas.2023-01-01+csv:
              schema:
                type: string
              x-xgen-version: 2023-01-01
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/CostExplorerQueryResult"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return results from a given Cost Explorer query, or notify that the
        results are not ready yet.
      tags:
        - Invoices
      x-xgen-experimental: true
  "/api/atlas/v2/orgs/{orgId}/events":
    get:
      description: >-
        Returns all events for the specified organization. Events identify
        significant database, billing, or security activities or status changes.
        To use this resource, the requesting API Key must have the Organization
        Member role.


        This resource remains under revision and may change.
      operationId: listOrganizationEvents
      parameters:
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/orgId"
        - $ref: "#/components/parameters/pageNum"
        - description: >-
            Category of incident recorded at this moment in time.


            **IMPORTANT**: The complete list of event type values changes frequently.
          in: query
          name: eventType
          schema:
            type: array
            items:
              $ref: "#/components/schemas/EventTypeForOrg"
        - description: Flag that indicates whether to include the raw document in the
            output. The raw document contains additional meta information about
            the event.
          in: query
          name: includeRaw
          schema:
            type: boolean
            default: false
        - description: Date and time from when MongoDB Cloud stops returning events. This
            parameter uses the <a href="https://en.wikipedia.org/wiki/ISO_8601"
            target="_blank" rel="noopener noreferrer">ISO 8601</a> timestamp
            format in UTC.
          in: query
          name: maxDate
          schema:
            type: string
            format: date-time
        - description: Date and time from when MongoDB Cloud starts returning events. This
            parameter uses the <a href="https://en.wikipedia.org/wiki/ISO_8601"
            target="_blank" rel="noopener noreferrer">ISO 8601</a> timestamp
            format in UTC.
          in: query
          name: minDate
          schema:
            type: string
            format: date-time
            example: 2021-11-17T23:15:00.06Z
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/OrgPaginatedEvent"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Events from One Organization
      tags:
        - Events
  "/api/atlas/v2/orgs/{orgId}/events/{eventId}":
    get:
      description: >-
        Returns one event for the specified organization. Events identify
        significant database, billing, or security activities or status changes.
        To use this resource, the requesting API Key must have the Organization
        Member role.


        This resource remains under revision and may change.
      operationId: getOrganizationEvent
      parameters:
        - $ref: "#/components/parameters/orgId"
        - description: Unique 24-hexadecimal digit string that identifies the event that
            you want to return. Use the
            [/events](#tag/Events/operation/listOrganizationEvents) endpoint to
            retrieve all events to which the authenticated user has access.
          in: path
          name: eventId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
        - description: Flag that indicates whether to include the raw document in the
            output. The raw document contains additional meta information about
            the event.
          in: query
          name: includeRaw
          schema:
            type: boolean
            default: false
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/EventViewForOrg"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Event from One Organization
      tags:
        - Events
      x-xgen-experimental: true
  "/api/atlas/v2/orgs/{orgId}/federationSettings":
    get:
      description: Returns information about the federation settings for the specified
        organization. To use this resource, the requesting API Key must have the
        Organization Owner role in the connected org.
      operationId: getFederationSettings
      parameters:
        - $ref: "#/components/parameters/orgId"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/OrgFederationSettings"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return Federation Settings for One Organization
      tags:
        - Federated Authentication
      x-xgen-experimental: true
  "/api/atlas/v2/orgs/{orgId}/groups":
    get:
      description: >-
        Returns multiple projects in the specified organization. Each
        organization can have multiple projects. Use projects to:


        - Isolate different environments, such as development, test, or production environments, from each other.

        - Associate different MongoDB Cloud users or teams with different environments, or give different permission to MongoDB Cloud users in different environments.

        - Maintain separate cluster security configurations.

        - Create different alert settings.


        To use this resource, the requesting API Key must have the Organization Member role.
      operationId: listOrganizationProjects
      parameters:
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/orgId"
        - $ref: "#/components/parameters/pageNum"
        - description: Human-readable label of the project to use to filter the returned
            list. Performs a case-insensitive search for a project within the
            organization which is prefixed by the specified name.
          in: query
          name: name
          schema:
            type: string
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedAtlasGroup"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One or More Projects in One Organization
      tags:
        - Organizations
  "/api/atlas/v2/orgs/{orgId}/invites":
    get:
      description: Returns all pending invitations to the specified organization. To
        use this resource, the requesting API Key must have the Organization
        Owner role.
      operationId: listOrganizationInvitations
      parameters:
        - $ref: "#/components/parameters/orgId"
        - description: Email address of the user account invited to this organization. If
            you exclude this parameter, this resource returns all pending
            invitations.
          in: query
          name: username
          schema:
            type: string
            format: email
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrganizationInvitation"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Organization Invitations
      tags:
        - Organizations
    patch:
      description: Updates the details of one pending invitation to the specified
        organization. To specify which invitation, provide the username of the
        invited user. To use this resource, the requesting API Key must have the
        Organization Owner role.
      operationId: updateOrganizationInvitation
      parameters:
        - $ref: "#/components/parameters/orgId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/OrganizationInvitationRequest"
        description: Updates the details of one pending invitation to the specified
          organization.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/OrganizationInvitation"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Update One Organization Invitation
      tags:
        - Organizations
    post:
      description: Invites one MongoDB Cloud user to join the specified organization.
        The user must accept the invitation to access information within the
        specified organization. To use this resource, the requesting API Key
        must have the Organization Owner role.
      operationId: createOrganizationInvitation
      parameters:
        - $ref: "#/components/parameters/orgId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/OrganizationInvitationRequest"
        description: Invites one MongoDB Cloud user to join the specified organization.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/OrganizationInvitation"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Invite One MongoDB Cloud User to Join One Atlas Organization
      tags:
        - Organizations
  "/api/atlas/v2/orgs/{orgId}/invites/{invitationId}":
    delete:
      description: Cancels one pending invitation sent to the specified MongoDB Cloud
        user to join an organization. You can't cancel an invitation that the
        user accepted. To use this resource, the requesting API Key must have
        the Organization Owner role.
      operationId: deleteOrganizationInvitation
      parameters:
        - $ref: "#/components/parameters/orgId"
        - description: Unique 24-hexadecimal digit string that identifies the invitation.
          in: path
          name: invitationId
          required: true
          schema:
            type: string
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/NoBody"
              x-xgen-version: 2023-01-01
          description: This endpoint does not return a response body.
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Cancel One Organization Invitation
      tags:
        - Organizations
    get:
      description: Returns the details of one pending invitation to the specified
        organization. To use this resource, the requesting API Key must have the
        Organization Owner role.
      operationId: getOrganizationInvitation
      parameters:
        - $ref: "#/components/parameters/orgId"
        - description: Unique 24-hexadecimal digit string that identifies the invitation.
          in: path
          name: invitationId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/OrganizationInvitation"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Organization Invitation
      tags:
        - Organizations
    patch:
      description: Updates the details of one pending invitation to the specified
        organization. To specify which invitation, provide the unique
        identification string for that invitation. Use the Return All
        Organization Invitations endpoint to retrieve IDs for all pending
        organization invitations. To use this resource, the requesting API Key
        must have the Organization Owner role.
      operationId: updateOrganizationInvitationById
      parameters:
        - $ref: "#/components/parameters/orgId"
        - description: Unique 24-hexadecimal digit string that identifies the invitation.
          in: path
          name: invitationId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/OrganizationInvitationUpdateRequest"
        description: Updates the details of one pending invitation to the specified
          organization.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/OrganizationInvitation"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Update One Organization Invitation by Invitation ID
      tags:
        - Organizations
  "/api/atlas/v2/orgs/{orgId}/invoices":
    get:
      description: Returns all invoices that MongoDB issued to the specified
        organization. This list includes all invoices regardless of invoice
        status. To use this resource, the requesting API Key must have the
        Organization Billing Viewer, Organization Billing Admin, or Organization
        Owner role. If you have a cross-organization setup, you can view linked
        invoices if you have the Organization Billing Admin or Organization
        Owner role.
      operationId: listInvoices
      parameters:
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/orgId"
        - $ref: "#/components/parameters/pageNum"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedApiInvoice"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Invoices for One Organization
      tags:
        - Invoices
      x-xgen-experimental: true
  "/api/atlas/v2/orgs/{orgId}/invoices/pending":
    get:
      description: Returns all invoices accruing charges for the current billing cycle
        for the specified organization. To use this resource, the requesting API
        Key must have the Organization Billing Viewer, Organization Billing
        Admin, or Organization Owner role. If you have a cross-organization
        setup, you can view linked invoices if you have the Organization Billing
        Admin or Organization Owner Role.
      operationId: listPendingInvoices
      parameters:
        - $ref: "#/components/parameters/orgId"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedApiInvoice"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Pending Invoices for One Organization
      tags:
        - Invoices
      x-xgen-experimental: true
  "/api/atlas/v2/orgs/{orgId}/invoices/{invoiceId}":
    get:
      description: Returns one invoice that MongoDB issued to the specified
        organization. A unique 24-hexadecimal digit string identifies the
        invoice. You can choose to receive this invoice in JSON or CSV format.
        To use this resource, the requesting API Key must have the Organization
        Billing Viewer, Organization Billing Admin, or Organization Owner role.
        If you have a cross-organization setup, you can query for a linked
        invoice if you have the Organization Billing Admin or Organization Owner
        role.
      operationId: getInvoice
      parameters:
        - $ref: "#/components/parameters/orgId"
        - description: Unique 24-hexadecimal digit string that identifies the invoice
            submitted to the specified organization. Charges typically post the
            next day.
          in: path
          name: invoiceId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+csv:
              schema:
                type: string
              x-xgen-version: 2023-01-01
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/BillingInvoice"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Organization Invoice
      tags:
        - Invoices
      x-xgen-experimental: true
  "/api/atlas/v2/orgs/{orgId}/invoices/{invoiceId}/csv":
    get:
      description: Returns one invoice that MongoDB issued to the specified
        organization in CSV format. A unique 24-hexadecimal digit string
        identifies the invoice. To use this resource, the requesting API Key
        have at least the Organization Billing Viewer, Organization Billing
        Admin, or Organization Owner role. If you have a cross-organization
        setup, you can query for a linked invoice if you have the Organization
        Billing Admin or Organization Owner Role.
      operationId: downloadInvoiceCSV
      parameters:
        - $ref: "#/components/parameters/orgId"
        - description: Unique 24-hexadecimal digit string that identifies the invoice
            submitted to the specified organization. Charges typically post the
            next day.
          in: path
          name: invoiceId
          required: true
          schema:
            type: string
            pattern: "[0-9a-f]+"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+csv:
              schema:
                type: string
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Organization Invoice as CSV
      tags:
        - Invoices
      x-xgen-experimental: true
  "/api/atlas/v2/orgs/{orgId}/liveMigrations/availableProjects":
    get:
      description: Return all projects that you can migrate to the specified organization.
      operationId: listSourceProjects
      parameters:
        - $ref: "#/components/parameters/orgId"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LiveImportAvailableProject"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Projects Available for Migration
      tags:
        - Cloud Migration Service
      x-xgen-experimental: true
  "/api/atlas/v2/orgs/{orgId}/liveMigrations/linkTokens":
    delete:
      description: Remove one organization link and its associated public API key.
        MongoDB Atlas uses the link-token for push live migrations only. Live
        migrations (push) let you securely push data from Cloud Manager or Ops
        Manager into MongoDB Atlas. Your API Key must have the Organization
        Owner role to successfully call this resource.
      operationId: deleteLinkToken
      parameters:
        - $ref: "#/components/parameters/orgId"
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/NoBody"
              x-xgen-version: 2023-01-01
          description: This endpoint does not return a response body.
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Remove One Link-Token
      tags:
        - Cloud Migration Service
    post:
      description: Create one link-token that contains all the information required to
        complete the link. MongoDB Atlas uses the link-token for push live
        migrations only. Live migration (push) allows you to securely push data
        from Cloud Manager or Ops Manager into MongoDB Atlas. Your API Key must
        have the Organization Owner role to successfully call this resource.
      operationId: createLinkToken
      parameters:
        - $ref: "#/components/parameters/orgId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/TargetOrgRequest"
        description: IP address access list entries associated with the migration.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/TargetOrg"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Create One Link-Token
      tags:
        - Cloud Migration Service
  "/api/atlas/v2/orgs/{orgId}/settings":
    get:
      description: Returns details about the specified organization's settings. To use
        this resource, the requesting API Key must have the Organization Owner
        role.
      operationId: getOrganizationSettings
      parameters:
        - $ref: "#/components/parameters/orgId"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/OrganizationSettings"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return Settings for One Organization
      tags:
        - Organizations
      x-xgen-experimental: true
    patch:
      description: Updates the organization's settings. To use this resource, the
        requesting API Key must have the Organization Owner role.
      operationId: updateOrganizationSettings
      parameters:
        - $ref: "#/components/parameters/orgId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/OrganizationSettings"
        description: Details to update on the specified organization's settings.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/OrganizationSettings"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Update Settings for One Organization
      tags:
        - Organizations
      x-xgen-experimental: true
  "/api/atlas/v2/orgs/{orgId}/teams":
    get:
      description: Returns all teams that belong to the specified organization. Teams
        enable you to grant project access roles to MongoDB Cloud users. MongoDB
        Cloud only returns teams for which you have access. To use this
        resource, the requesting API Key must have the Organization Member role.
      externalDocs:
        description: Manage Organization Teams
        url: https://docs.atlas.mongodb.com/access/manage-teams-in-orgs/#std-label-manage-teams
      operationId: listOrganizationTeams
      parameters:
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/pageNum"
        - $ref: "#/components/parameters/orgId"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedTeam"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All Teams in One Organization
      tags:
        - Teams
    post:
      description: Creates one team in the specified organization. Teams enable you to
        grant project access roles to MongoDB Cloud users. MongoDB Cloud limits
        the number of teams to a maximum of 250 teams per organization. To use
        this resource, the requesting API Key must have the Organization Owner
        role.
      externalDocs:
        description: Manage Organization Teams
        url: https://docs.atlas.mongodb.com/access/manage-teams-in-orgs/#std-label-manage-teams
      operationId: createTeam
      parameters:
        - $ref: "#/components/parameters/orgId"
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/Team"
        description: Team that you want to create in the specified organization.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/Team"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Create One Team in One Organization
      tags:
        - Teams
  "/api/atlas/v2/orgs/{orgId}/teams/byName/{teamName}":
    get:
      description: Returns one team that you identified using its human-readable name.
        This team belongs to one organization. Teams enable you to grant project
        access roles to MongoDB Cloud users. To use this resource, the
        requesting API Key must have the Organization Member role.
      externalDocs:
        description: Manage Organization Teams
        url: https://docs.atlas.mongodb.com/access/manage-teams-in-orgs/#std-label-manage-teams
      operationId: getTeamByName
      parameters:
        - $ref: "#/components/parameters/orgId"
        - description: Name of the team whose information you want to return.
          in: path
          name: teamName
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/TeamResponse"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Team using its Name
      tags:
        - Teams
  "/api/atlas/v2/orgs/{orgId}/teams/{teamId}":
    delete:
      description: Removes one team specified using its unique 24-hexadecimal digit
        identifier from the organization specified using its unique
        24-hexadecimal digit identifier. To use this resource, the requesting
        API Key must have the Organization Owner role.
      externalDocs:
        description: Manage Organization Teams
        url: https://docs.atlas.mongodb.com/access/manage-teams-in-orgs/#std-label-manage-teams
      operationId: deleteTeam
      parameters:
        - $ref: "#/components/parameters/orgId"
        - description: Unique 24-hexadecimal digit string that identifies the team that
            you want to delete.
          in: path
          name: teamId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/NoBody"
              x-xgen-version: 2023-01-01
          description: This endpoint does not return a response body.
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Remove One Team from One Organization
      tags:
        - Teams
    get:
      description: Returns one team that you identified using its unique
        24-hexadecimal digit ID. This team belongs to one organization. Teams
        enable you to grant project access roles to MongoDB Cloud users. To use
        this resource, the requesting API Key must have the Organization Member
        role.
      externalDocs:
        description: Manage Organization Teams
        url: https://docs.atlas.mongodb.com/access/manage-teams-in-orgs/#std-label-manage-teams
      operationId: getTeamById
      parameters:
        - $ref: "#/components/parameters/orgId"
        - description: Unique 24-hexadecimal digit string that identifies the team whose
            information you want to return.
          in: path
          name: teamId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/TeamResponse"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One Team using its ID
      tags:
        - Teams
    patch:
      description: Renames one team in the specified organization. Teams enable you to
        grant project access roles to MongoDB Cloud users. To use this resource,
        the requesting API Key must have the Organization Owner role.
      externalDocs:
        description: Manage Organization Teams
        url: https://docs.atlas.mongodb.com/access/manage-teams-in-orgs/#std-label-manage-teams
      operationId: renameTeam
      parameters:
        - $ref: "#/components/parameters/orgId"
        - description: Unique 24-hexadecimal digit string that identifies the team that
            you want to rename.
          in: path
          name: teamId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/TeamUpdate"
        description: Details to update on the specified team.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/TeamResponse"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Rename One Team
      tags:
        - Teams
      x-xgen-experimental: true
  "/api/atlas/v2/orgs/{orgId}/teams/{teamId}/users":
    get:
      description: Returns all MongoDB Cloud users assigned to the team specified
        using its unique 24-hexadecimal digit identifier. This team belongs to
        one organization. Teams enable you to grant project access roles to
        MongoDB Cloud users. To use this resource, the requesting API Key must
        have the Organization Member role.
      externalDocs:
        description: Manage Organization Teams
        url: https://docs.atlas.mongodb.com/access/manage-teams-in-orgs/#std-label-manage-teams
      operationId: listTeamUsers
      parameters:
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/orgId"
        - $ref: "#/components/parameters/pageNum"
        - description: Unique 24-hexadecimal digit string that identifies the team whose
            application users you want to return.
          in: path
          name: teamId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedApiAppUser"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All MongoDB Cloud Users Assigned to One Team
      tags:
        - Teams
    post:
      description: Adds one or more MongoDB Cloud users from the specified
        organization to the specified team. Teams enable you to grant project
        access roles to MongoDB Cloud users. You can assign up to 250 MongoDB
        Cloud users from one organization to one team. To use this resource, the
        requesting API Key must have the Organization Owner role.
      externalDocs:
        description: Manage Organization Teams
        url: https://docs.atlas.mongodb.com/access/manage-teams-in-orgs/#std-label-manage-teams
      operationId: addTeamUser
      parameters:
        - $ref: "#/components/parameters/orgId"
        - description: Unique 24-hexadecimal character string that identifies the team to
            which you want to add MongoDB Cloud users.
          in: path
          name: teamId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/AddUserToTeam"
        description: One or more MongoDB Cloud users that you want to add to the
          specified team.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedApiAppUser"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "409":
          $ref: "#/components/responses/conflict"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Assign MongoDB Cloud Users from One Organization to One Team
      tags:
        - Teams
  "/api/atlas/v2/orgs/{orgId}/teams/{teamId}/users/{userId}":
    delete:
      description: Removes one MongoDB Cloud user from the specified team. This team
        belongs to one organization. Teams enable you to grant project access
        roles to MongoDB Cloud users. To use this resource, the requesting API
        Key must have the Organization Owner role.
      externalDocs:
        description: Manage Organization Teams
        url: https://docs.atlas.mongodb.com/access/manage-teams-in-orgs/#std-label-manage-teams
      operationId: removeTeamUser
      parameters:
        - $ref: "#/components/parameters/orgId"
        - description: Unique 24-hexadecimal digit string that identifies the team from
            which you want to remove one database application user.
          in: path
          name: teamId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
        - description: Unique 24-hexadecimal digit string that identifies MongoDB Cloud
            user that you want to remove from the specified team.
          in: path
          name: userId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              x-xgen-version: 2023-01-01
          description: This endpoint does not return a response body.
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Remove One MongoDB Cloud User from One Team
      tags:
        - Teams
  "/api/atlas/v2/orgs/{orgId}/users":
    get:
      description: Returns details about the MongoDB Cloud users associated with the
        specified organization. Each MongoDB Cloud user returned must belong to
        the specified organization or to a project within the specified
        organization. To use this resource, the requesting API Key must have the
        Organization Member role.
      operationId: listOrganizationUsers
      parameters:
        - $ref: "#/components/parameters/orgId"
        - $ref: "#/components/parameters/includeCount"
        - $ref: "#/components/parameters/itemsPerPage"
        - $ref: "#/components/parameters/pageNum"
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/PaginatedAppUser"
              x-xgen-version: 2023-01-01
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return All MongoDB Cloud Users in One Organization
      tags:
        - Organizations
  "/api/atlas/v2/orgs/{orgId}/users/{userId}":
    delete:
      description: Removes one MongoDB Cloud user from the specified organization. To
        use this resource, the requesting API Key must have the Organization
        User Admin role.
      operationId: removeOrganizationUser
      parameters:
        - $ref: "#/components/parameters/orgId"
        - description: Unique 24-hexadecimal digit string that identifies the user to be
            deleted.
          in: path
          name: userId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "204":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/NoBody"
              x-xgen-version: 2023-01-01
          description: This endpoint does not return a response body.
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Remove One MongoDB Cloud User from One Organization
      tags:
        - Organizations
      x-xgen-experimental: true
  "/api/atlas/v2/orgs/{orgId}/users/{userId}/roles":
    put:
      description: Updates the roles of the specified user in the specified
        organization. To specify the user to update, provide the unique
        24-hexadecimal digit string that identifies the user in the specified
        organization. To use this resource, the requesting API Key must have the
        Organization User Admin role.
      operationId: updateOrganizationRoles
      parameters:
        - $ref: "#/components/parameters/orgId"
        - description: Unique 24-hexadecimal digit string that identifies the user to
            modify.
          in: path
          name: userId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/UpdateOrgRolesForUser"
        description: Roles to update for the specified user.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/UpdateOrgRolesForUser"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Update Organization Roles for One MongoDB Cloud User
      tags:
        - Organizations
      x-xgen-experimental: true
  /api/atlas/v2/unauth/controlPlaneIPAddresses:
    get:
      description: Returns all control plane IP addresses.
      operationId: returnAllControlPlaneIPAddresses
      parameters: []
      responses:
        "200":
          content:
            application/vnd.atlas.2023-11-15+json:
              schema:
                $ref: "#/components/schemas/ControlPlaneIPAddresses"
              x-xgen-version: 2023-11-15
          description: OK
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - Unauthenticated: []
      summary: Return All Control Plane IP Addresses
      tags:
        - Root
      x-xgen-experimental: true
  /api/atlas/v2/users:
    post:
      description: >-
        Creates one MongoDB Cloud user account. A MongoDB Cloud user account
        grants access to only the MongoDB Cloud application. To grant database
        access, create a database user. MongoDB Cloud sends an email to the
        users you specify, inviting them to join the project. Invited users
        don't have access to the project until they accept the invitation.
        Invitations expire after 30 days.

         MongoDB Cloud limits MongoDB Cloud user membership to a maximum of 250 MongoDB Cloud users per team. MongoDB Cloud limits MongoDB Cloud user membership to 500 MongoDB Cloud users per project and 500 MongoDB Cloud users per organization, which includes the combined membership of all projects in the organization. MongoDB Cloud raises an error if an operation exceeds these limits. For example, if you have an organization with five projects, and each project has 100 MongoDB Cloud users, and each MongoDB Cloud user belongs to only one project, you can't add any MongoDB Cloud users to this organization without first removing existing MongoDB Cloud users from the organization.

         To use this resource, the requesting API Key can have any role.
      operationId: createUser
      parameters: []
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: "#/components/schemas/CloudAppUser"
        description: MongoDB Cloud user account to create.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/CloudAppUser"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Create One MongoDB Cloud User
      tags:
        - MongoDB Cloud Users
  "/api/atlas/v2/users/byName/{userName}":
    get:
      description: Returns the details for one MongoDB Cloud user account with the
        specified username. You can't use this endpoint to return information
        about an API Key. To return information about an API Key, use the
        [Return One Organization](#tag/Organizations/operation/getOrganization)
        API Key endpoint. To use this resource, the requesting API Key can have
        any role.
      operationId: getUserByUsername
      parameters:
        - description: Email address that belongs to the MongoDB Cloud user account. You
            cannot modify this address after creating the user.
          in: path
          name: userName
          required: true
          schema:
            type: string
            pattern: ^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/CloudAppUser"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One MongoDB Cloud User using Their Username
      tags:
        - MongoDB Cloud Users
  "/api/atlas/v2/users/{userId}":
    get:
      description: Returns the details for one MongoDB Cloud user account with the
        specified unique identifier for the user. You can't use this endpoint to
        return information on an API Key. To return information about an API
        Key, use the [Return One
        Organization](#tag/Organizations/operation/getOrganization) API Key
        endpoint. You can always retrieve your own user account. If you are the
        owner of a MongoDB Cloud organization or project, you can also retrieve
        the user profile for any user with membership in that organization or
        project. To use this resource, the requesting API Key can have any role.
      operationId: getUser
      parameters:
        - description: Unique 24-hexadecimal digit string that identifies this user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/CloudAppUser"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return One MongoDB Cloud User using Its ID
      tags:
        - MongoDB Cloud Users
components:
  parameters:
    collectionName:
      description: Human-readable label that identifies the collection.
      in: path
      name: collectionName
      required: true
      schema:
        type: string
        example: mycoll
    databaseName:
      description: Human-readable label that identifies the database.
      in: path
      name: databaseName
      required: true
      schema:
        type: string
        example: mydb
    end:
      description: Date and time when MongoDB Cloud stops reporting the metrics. This
        parameter expresses its value in the ISO 8601 timestamp format in UTC.
        Include this parameter when you do not set **period**.
      in: query
      name: end
      required: false
      schema:
        type: string
        format: date-time
    envelope:
      description: Flag that indicates whether Application wraps the response in an
        `envelope` JSON object. Some API clients cannot access the HTTP response
        headers or status code. To remediate this, set envelope=true in the
        query. Endpoints that return a list of results use the results object as
        an envelope. Application adds the status parameter to the response body.
      in: query
      name: envelope
      required: false
      schema:
        type: boolean
        default: false
        example: false
    federationSettingsId:
      description: Unique 24-hexadecimal digit string that identifies your federation.
      in: path
      name: federationSettingsId
      required: true
      schema:
        type: string
        example: 55fa922fb343282757d9554e
        maxLength: 24
        minLength: 24
        pattern: ^([a-f0-9]{24})$
    granularity:
      description: Duration that specifies the interval at which Atlas reports the
        metrics. This parameter expresses its value in the ISO 8601 duration
        format in UTC.
      in: query
      name: granularity
      required: true
      schema:
        type: string
        example: PT1M
    groupId:
      description: >-
        Unique 24-hexadecimal digit string that identifies your project. Use the
        [/groups](#tag/Projects/operation/listProjects) endpoint to retrieve all
        projects to which the authenticated user has access.


        **NOTE**: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.
      in: path
      name: groupId
      required: true
      schema:
        type: string
        example: 32b6e34b3d91647abb20e7b8
        maxLength: 24
        minLength: 24
        pattern: ^([a-f0-9]{24})$
    identityProviderId:
      description: Unique 20-hexadecimal digit string that identifies the identity provider.
      in: path
      name: identityProviderId
      required: true
      schema:
        type: string
        example: c2777a9eca931f29fc2f
        maxLength: 20
        minLength: 20
        pattern: ^([a-f0-9]{20})$
    includeCount:
      description: Flag that indicates whether the response returns the total number
        of items (**totalCount**) in the response.
      in: query
      name: includeCount
      required: false
      schema:
        type: boolean
        default: true
        example: true
    indexName:
      description: Human-readable label that identifies the index.
      in: path
      name: indexName
      required: true
      schema:
        type: string
        example: myindex
    itemsPerPage:
      description: Number of items that the response returns per page.
      in: query
      name: itemsPerPage
      required: false
      schema:
        type: integer
        default: 100
        example: 100
        maximum: 500
        minimum: 1
    liveMigrationId:
      description: Unique 24-hexadecimal digit string that identifies the migration.
      in: path
      name: liveMigrationId
      required: true
      schema:
        type: string
        example: 6296fb4c7c7aa997cf94e9a8
        maxLength: 24
        minLength: 24
        pattern: ^([a-f0-9]{24})$
    orgId:
      description: Unique 24-hexadecimal digit string that identifies the organization
        that contains your projects. Use the
        [/orgs](#tag/Organizations/operation/listOrganizations) endpoint to
        retrieve all organizations to which the authenticated user has access.
      in: path
      name: orgId
      required: true
      schema:
        type: string
        example: 4888442a3354817a7320eb61
        maxLength: 24
        minLength: 24
        pattern: ^([a-f0-9]{24})$
    pageNum:
      description: Number of the page that displays the current set of the total
        objects that the response returns.
      in: query
      name: pageNum
      required: false
      schema:
        type: integer
        default: 1
        example: 1
        minimum: 1
    period:
      description: Duration over which Atlas reports the metrics. This parameter
        expresses its value in the ISO 8601 duration format in UTC. Include this
        parameter when you do not set **start** and **end**.
      in: query
      name: period
      required: false
      schema:
        type: string
        example: PT10H
    pretty:
      description: Flag that indicates whether the response body should be in the <a
        href="https://en.wikipedia.org/wiki/Prettyprint" target="_blank"
        rel="noopener noreferrer">prettyprint</a> format.
      in: query
      name: pretty
      required: false
      schema:
        type: boolean
        default: false
        example: false
    processId:
      description: Combination of hostname and IANA port that serves the MongoDB
        process. The host must be the hostname, fully qualified domain name
        (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that
        runs the MongoDB process (mongod or mongos). The port must be the IANA
        port on which the MongoDB process listens for requests.
      in: path
      name: processId
      required: true
      schema:
        type: string
        example: my.host.name.com:27017
        pattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\.){1,10}[a-z]+)?(\:[0-9]{4,5})$
    start:
      description: Date and time when MongoDB Cloud begins reporting the metrics. This
        parameter expresses its value in the ISO 8601 timestamp format in UTC.
        Include this parameter when you do not set **period**.
      in: query
      name: start
      required: false
      schema:
        type: string
        format: date-time
  responses:
    accepted:
      description: Accepted.
    badRequest:
      content:
        application/json:
          example:
            detail: (This is just an example, the exception may not be related to this
              endpoint) No provider AWS exists.
            error: 400
            errorCode: VALIDATION_ERROR
            reason: Bad Request
          schema:
            $ref: "#/components/schemas/ApiError"
      description: Bad Request.
    conflict:
      content:
        application/json:
          example:
            detail: "(This is just an example, the exception may not be related to this
              endpoint) Cannot delete organization link while there is active
              migration in following project ids: 60c4fd418ebe251047c50554"
            error: 409
            errorCode: CANNOT_DELETE_ORG_ACTIVE_LIVE_MIGRATION_ATLAS_ORG_LINK
            reason: Conflict
          schema:
            $ref: "#/components/schemas/ApiError"
      description: Conflict.
    forbidden:
      content:
        application/json:
          example:
            detail: (This is just an example, the exception may not be related to this
              endpoint)
            error: 403
            errorCode: CANNOT_CHANGE_GROUP_NAME
            reason: Forbidden
          schema:
            $ref: "#/components/schemas/ApiError"
      description: Forbidden.
    gone:
      content:
        application/json:
          example:
            detail: This happens when a resource is marked for sunset and the sunset date is
              in the past.
            error: 410
            errorCode: VERSION_GONE
            reason: Gone
          schema:
            $ref: "#/components/schemas/ApiError"
      description: Gone.
    internalServerError:
      content:
        application/json:
          example:
            detail: (This is just an example, the exception may not be related to this
              endpoint)
            error: 500
            errorCode: UNEXPECTED_ERROR
            reason: Internal Server Error
          schema:
            $ref: "#/components/schemas/ApiError"
      description: Internal Server Error.
    methodNotAllowed:
      content:
        application/json:
          example:
            detail: (This is just an example, the exception may not be related to this
              endpoint)
            error: 405
            errorCode: ATLAS_BACKUP_CANCEL_SHARD_RESTORE_JOB_NOT_ALLOWED
            reason: Method Not Allowed
          schema:
            $ref: "#/components/schemas/ApiError"
      description: Method Not Allowed.
    noBody:
      description: This endpoint does not return a response body.
    notFound:
      content:
        application/json:
          example:
            detail: (This is just an example, the exception may not be related to this
              endpoint) Cannot find resource AWS
            error: 404
            errorCode: RESOURCE_NOT_FOUND
            reason: Not Found
          schema:
            $ref: "#/components/schemas/ApiError"
      description: Not Found.
    paymentRequired:
      content:
        application/json:
          example:
            detail: (This is just an example, the exception may not be related to this
              endpoint)
            error: 402
            errorCode: NO_PAYMENT_INFORMATION_FOUND
            reason: Payment Required
          schema:
            $ref: "#/components/schemas/ApiError"
      description: Payment Required.
    unauthorized:
      content:
        application/json:
          example:
            detail: (This is just an example, the exception may not be related to this
              endpoint)
            error: 401
            errorCode: NOT_ORG_GROUP_CREATOR
            reason: Unauthorized
          schema:
            $ref: "#/components/schemas/ApiError"
      description: Unauthorized.
  schemas:
    AWSKMSConfiguration:
      type: object
      description: Amazon Web Services (AWS) KMS configuration details and encryption
        at rest configuration set for the specified project.
      externalDocs:
        description: Amazon Web Services Key Management Service
        url: https://www.mongodb.com/docs/atlas/security-aws-kms/
      properties:
        accessKeyID:
          type: string
          description: Unique alphanumeric string that identifies an Identity and Access
            Management (IAM) access key with permissions required to access your
            Amazon Web Services (AWS) Customer Master Key (CMK).
          example: 019dd98d94b4bb778e7552e4
          maxLength: 128
          minLength: 16
        customerMasterKeyID:
          type: string
          description: Unique alphanumeric string that identifies the Amazon Web Services
            (AWS) Customer Master Key (CMK) you used to encrypt and decrypt the
            MongoDB master keys.
          maxLength: 2048
          minLength: 1
        enabled:
          type: boolean
          description: Flag that indicates whether someone enabled encryption at rest for
            the specified project through Amazon Web Services (AWS) Key
            Management Service (KMS). To disable encryption at rest using
            customer key management and remove the configuration details, pass
            only this parameter with a value of `false`.
        region:
          type: string
          description: Physical location where MongoDB Cloud deploys your AWS-hosted
            MongoDB cluster nodes. The region you choose can affect network
            latency for clients accessing your databases. When MongoDB Cloud
            deploys a dedicated cluster, it checks if a VPC or VPC connection
            exists for that provider and region. If not, MongoDB Cloud creates
            them as part of the deployment. MongoDB Cloud assigns the VPC a CIDR
            block. To limit a new VPC peering connection to one CIDR block and
            region, create the connection first. Deploy the cluster after the
            connection starts.
          title: AWS Regions
        roleId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies an Amazon Web
            Services (AWS) Identity and Access Management (IAM) role. This IAM
            role has the permissions required to manage your AWS customer master
            key.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          writeOnly: true
        secretAccessKey:
          type: string
          description: Human-readable label of the Identity and Access Management (IAM)
            secret access key with permissions required to access your Amazon
            Web Services (AWS) customer master key.
          writeOnly: true
        valid:
          type: boolean
          description: Flag that indicates whether the Amazon Web Services (AWS) Key
            Management Service (KMS) encryption key can encrypt and decrypt
            data.
          readOnly: true
    AddUserToTeam:
      type: object
      properties:
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the MongoDB
            Cloud user.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
      required:
        - id
    AdvancedAutoScalingSettings:
      type: object
      description: Options that determine how this cluster handles resource scaling.
      properties:
        compute:
          $ref: "#/components/schemas/AdvancedComputeAutoScaling"
        diskGB:
          $ref: "#/components/schemas/DiskGBAutoScaling"
      title: Automatic Scaling Settings
    AdvancedClusterDescription:
      type: object
      properties:
        acceptDataRisksAndForceReplicaSetReconfig:
          type: string
          format: date-time
          description: If reconfiguration is necessary to regain a primary due to a
            regional outage, submit this field alongside your topology
            reconfiguration to request a new regional outage resistant topology.
            Forced reconfigurations during an outage of the majority of
            electable nodes carry a risk of data loss if replicated writes (even
            majority committed writes) have not been replicated to the new
            primary node. MongoDB Atlas docs contain more information. To
            proceed with an operation which carries that risk, set
            **acceptDataRisksAndForceReplicaSetReconfig** to the current date.
          externalDocs:
            description: Reconfiguring a Replica Set during a regional outage
            url: https://dochub.mongodb.org/core/regional-outage-reconfigure-replica-set
        backupEnabled:
          type: boolean
          default: false
          description: Flag that indicates whether the cluster can perform backups. If set
            to `true`, the cluster can perform backups. You must set this value
            to `true` for NVMe clusters. Backup uses [Cloud
            Backups](https://docs.atlas.mongodb.com/backup/cloud-backup/overview/)
            for dedicated clusters and [Shared Cluster
            Backups](https://docs.atlas.mongodb.com/backup/shared-tier/overview/)
            for tenant clusters. If set to `false`, the cluster doesn't use
            backups.
        biConnector:
          $ref: "#/components/schemas/BiConnector"
        clusterType:
          type: string
          description: Configuration of nodes that comprise the cluster.
        connectionStrings:
          $ref: "#/components/schemas/ClusterConnectionStrings"
        createDate:
          type: string
          format: date-time
          description: Date and time when MongoDB Cloud created this cluster. This
            parameter expresses its value in ISO 8601 format in UTC.
          readOnly: true
        diskSizeGB:
          type: number
          format: double
          description: Storage capacity that the host's root volume possesses expressed in
            gigabytes. Increase this number to add capacity. MongoDB Cloud
            requires this parameter if you set **replicationSpecs**. If you
            specify a disk size below the minimum (10 GB), this parameter
            defaults to the minimum disk size value. Storage charge calculations
            depend on whether you choose the default value or a custom
            value.  The maximum value for disk storage cannot exceed 50 times
            the maximum RAM for the selected cluster. If you require more
            storage space, consider upgrading your cluster to a higher tier.
          maximum: 4096
          minimum: 10
        diskWarmingMode:
          type: string
          default: FULLY_WARMED
          description: Disk warming mode selection.
          externalDocs:
            description: Reduce Secondary Disk Warming Impact
            url: https://docs.atlas.mongodb.com/reference/replica-set-tags/#reduce-secondary-disk-warming-impact
        encryptionAtRestProvider:
          type: string
          description: 'Cloud service provider that manages your customer keys to provide
            an additional layer of encryption at rest for the cluster. To enable
            customer key management for encryption at rest, the cluster
            **replicationSpecs[n].regionConfigs[m].{type}Specs.instanceSize**
            setting must be `M10` or higher and `"backupEnabled" : false` or
            omitted entirely.'
          externalDocs:
            description: Encryption at Rest using Customer Key Management
            url: https://www.mongodb.com/docs/atlas/security-kms-encryption/
        groupId:
          type: string
          description: Unique 24-hexadecimal character string that identifies the project.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the replication
            object for a zone in a Global Cluster. If you include existing zones
            in the request, you must specify this parameter. If you add a new
            zone to an existing Global Cluster, you may specify this parameter.
            The request deletes any existing zones in a Global Cluster that you
            exclude from the request.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        labels:
          type: array
          deprecated: true
          description: >-
            Collection of key-value pairs between 1 to 255 characters in length
            that tag and categorize the cluster. The MongoDB Cloud console
            doesn't display your labels.


            Cluster labels are deprecated and will be removed in a future release. We strongly recommend that you use [resource tags](https://dochub.mongodb.org/core/add-cluster-tag-atlas) instead.
          items:
            $ref: "#/components/schemas/ComponentLabel"
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        mongoDBMajorVersion:
          type: string
          default: "7.0"
          description: Major MongoDB version of the cluster. MongoDB Cloud deploys the
            cluster with the latest stable release of the specified version.
        mongoDBVersion:
          type: string
          description: Version of MongoDB that the cluster runs.
          pattern: ([\d]+\.[\d]+\.[\d]+)
          readOnly: true
        name:
          type: string
          description: Human-readable label that identifies the advanced cluster.
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        paused:
          type: boolean
          description: Flag that indicates whether the cluster is paused.
        pitEnabled:
          type: boolean
          description: Flag that indicates whether the cluster uses continuous cloud
            backups.
          externalDocs:
            description: Continuous Cloud Backups
            url: https://docs.atlas.mongodb.com/backup/cloud-backup/overview/
        replicationSpecs:
          type: array
          description: List of settings that configure your cluster regions. For Global
            Clusters, each object in the array represents a zone where your
            clusters nodes deploy. For non-Global sharded clusters and replica
            sets, this array has one object representing where your clusters
            nodes deploy.
          items:
            $ref: "#/components/schemas/ReplicationSpec"
        rootCertType:
          type: string
          default: ISRGROOTX1
          description: Root Certificate Authority that MongoDB Cloud cluster uses. MongoDB
            Cloud supports Internet Security Research Group.
        stateName:
          type: string
          description: Human-readable label that indicates the current operating condition
            of this cluster.
          readOnly: true
        tags:
          type: array
          description: List that contains key-value pairs between 1 to 255 characters in
            length for tagging and categorizing the cluster.
          externalDocs:
            description: Resource Tags
            url: https://dochub.mongodb.org/core/add-cluster-tag-atlas
          items:
            $ref: "#/components/schemas/ResourceTag"
        terminationProtectionEnabled:
          type: boolean
          default: false
          description: Flag that indicates whether termination protection is enabled on
            the cluster. If set to `true`, MongoDB Cloud won't delete the
            cluster. If set to `false`, MongoDB Cloud will delete the cluster.
        versionReleaseSystem:
          type: string
          default: LTS
          description: Method by which the cluster maintains the MongoDB versions. If
            value is `CONTINUOUS`, you must not specify **mongoDBMajorVersion**.
    AdvancedComputeAutoScaling:
      type: object
      description: Options that determine how this cluster handles CPU scaling.
      properties:
        enabled:
          type: boolean
          description: >-
            Flag that indicates whether someone enabled instance size
            auto-scaling.


            - Set to `true` to enable instance size auto-scaling. If enabled, you must specify a value for **replicationSpecs[n].regionConfigs[m].autoScaling.compute.maxInstanceSize**.

            - Set to `false` to disable instance size automatic scaling.
        maxInstanceSize:
          $ref: "#/components/schemas/BaseCloudProviderInstanceSize"
        minInstanceSize:
          $ref: "#/components/schemas/BaseCloudProviderInstanceSize"
        scaleDownEnabled:
          type: boolean
          description: 'Flag that indicates whether the instance size may scale down.
            MongoDB Cloud requires this parameter if
            `"replicationSpecs[n].regionConfigs[m].autoScaling.compute.enabled"
            : true`. If you enable this option, specify a value for
            **replicationSpecs[n].regionConfigs[m].autoScaling.compute.minInstanceSize**.'
      title: Automatic Compute Scaling Settings
    AdvancedDiskBackupSnapshotSchedulePolicy:
      type: object
      description: List that contains a document for each backup policy item in the
        desired backup policy.
      properties:
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies this backup
            policy.
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
        policyItems:
          type: array
          description: List that contains the specifications for one policy.
          items:
            $ref: "#/components/schemas/DiskBackupApiPolicyItem"
    AlertViewForNdsGroup:
      type: object
      properties:
        acknowledgedUntil:
          type: string
          format: date-time
          description: >-
            Date and time until which this alert has been acknowledged. This
            parameter expresses its value in the <a
            href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank"
            rel="noopener noreferrer">ISO 8601</a> timestamp format in UTC. The
            resource returns this parameter if a MongoDB User previously
            acknowledged this alert.


            - To acknowledge this alert forever, set the parameter value to 100 years in the future.


            - To unacknowledge a previously acknowledged alert, set the parameter value to a date in the past.
        acknowledgementComment:
          type: string
          description: Comment that a MongoDB Cloud user submitted when acknowledging the
            alert.
          example: Expiration on 3/19.  Silencing for 7days.
          maxLength: 200
        acknowledgingUsername:
          type: string
          format: email
          description: MongoDB Cloud username of the person who acknowledged the alert.
            The response returns this parameter if a MongoDB Cloud user
            previously acknowledged this alert.
          readOnly: true
        alertConfigId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the alert
            configuration that sets this alert.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        created:
          type: string
          format: date-time
          description: Date and time when MongoDB Cloud created this alert. This parameter
            expresses its value in the <a
            href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank"
            rel="noopener noreferrer">ISO 8601</a> timestamp format in UTC.
          readOnly: true
        eventTypeName:
          type: string
          description: Incident that triggered this alert.
          readOnly: true
        groupId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the project that
            owns this alert.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies this alert.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        lastNotified:
          type: string
          format: date-time
          description: Date and time that any notifications were last sent for this alert.
            This parameter expresses its value in the <a
            href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank"
            rel="noopener noreferrer">ISO 8601</a> timestamp format in UTC. The
            resource returns this parameter if MongoDB Cloud has sent
            notifications for this alert.
          readOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        orgId:
          type: string
          description: Unique 24-hexadecimal character string that identifies the
            organization that owns the project to which this alert applies.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        resolved:
          type: string
          format: date-time
          description: 'Date and time that this alert changed to `"status" : "CLOSED"`.
            This parameter expresses its value in the <a
            href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank"
            rel="noopener noreferrer">ISO 8601</a> timestamp format in UTC. The
            resource returns this parameter once `"status" : "CLOSED"`.'
          readOnly: true
        status:
          type: string
          description: State of this alert at the time you requested its details.
          example: OPEN
          readOnly: true
        updated:
          type: string
          format: date-time
          description: Date and time when someone last updated this alert. This parameter
            expresses its value in the <a
            href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank"
            rel="noopener noreferrer">ISO 8601</a> timestamp format in UTC.
          readOnly: true
        clusterName:
          type: string
          description: Human-readable label that identifies the cluster to which this
            alert applies. This resource returns this parameter for alerts of
            events impacting backups, replica sets, or sharded clusters.
          example: cluster1
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
          readOnly: true
        hostnameAndPort:
          type: string
          description: Hostname and port of the host to which this alert applies. The
            resource returns this parameter for alerts of events impacting hosts
            or replica sets.
          example: cloud-test.mongodb.com:27017
          readOnly: true
        replicaSetName:
          type: string
          description: Name of the replica set to which this alert applies. The response
            returns this parameter for alerts of events impacting backups,
            hosts, or replica sets.
          example: event-replica-set
          readOnly: true
        currentValue:
          $ref: "#/components/schemas/NumberMetricValue"
        metricName:
          type: string
          description: >-
            Name of the metric against which Atlas checks the configured
            `metricThreshold.threshold`.


            To learn more about the available metrics, see <a href="https://www.mongodb.com/docs/atlas/reference/alert-host-metrics/#std-label-measurement-types" target="_blank">Host Metrics</a>.


            **NOTE**: If you set eventTypeName to OUTSIDE_SERVERLESS_METRIC_THRESHOLD, you can specify only metrics available for serverless. To learn more, see <a href="https://dochub.mongodb.org/core/alert-config-serverless-measurements" target="_blank">Serverless Measurements</a>.
          example: ASSERT_USER
          readOnly: true
        nonRunningHostIds:
          type: array
          description: List of unique 24-hexadecimal character strings that identify the
            replica set members that are not in PRIMARY nor SECONDARY state.
          items:
            type: string
            example: 32b6e34b3d91647abb20e7b8
            maxLength: 32
            minLength: 8
            pattern: ^([a-f0-9]{8,32})$
            readOnly: true
          readOnly: true
        parentClusterId:
          type: string
          description: Unique 24-hexadecimal character string that identifies the parent
            cluster to which this alert applies. The parent cluster contains the
            sharded nodes. MongoDB Cloud returns this parameter only for alerts
            of events impacting sharded clusters.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 64
          minLength: 1
          pattern: ^([a-f0-9]{24})$
          readOnly: true
    AlertsNotificationRootForGroup:
      type: object
      description: One target that MongoDB Cloud sends notifications when an alert triggers.
      properties:
        datadogApiKey:
          type: string
          description: >-
            Datadog API Key that MongoDB Cloud needs to send alert notifications
            to Datadog. You can find this API key in the Datadog dashboard. The
            resource requires this parameter when `"notifications.[n].typeName"
            : "DATADOG"`.


            **NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:


            * View or edit the alert through the Atlas UI.


            * Query the alert for the notification through the Atlas Administration API.
          example: "****************************a23c"
        datadogRegion:
          type: string
          default: US
          description: >-
            Datadog region that indicates which API Uniform Resource Locator
            (URL) to use. The resource requires this parameter when
            `"notifications.[n].typeName" : "DATADOG"`.


            To learn more about Datadog's regions, see <a href="https://docs.datadoghq.com/getting_started/site/" target="_blank" rel="noopener noreferrer">Datadog Sites</a>.
        delayMin:
          type: integer
          format: int32
          description: Number of minutes that MongoDB Cloud waits after detecting an alert
            condition before it sends out the first notification.
        intervalMin:
          type: integer
          format: int32
          description: >-
            Number of minutes to wait between successive notifications. MongoDB
            Cloud sends notifications until someone acknowledges the
            unacknowledged alert.


            PagerDuty, VictorOps, and OpsGenie notifications don't return this element. Configure and manage the notification interval within each of those services.
          minimum: 5
        notifierId:
          type: string
          description: The notifierId is a system-generated unique identifier assigned to
            each notification method. This is needed when updating third-party
            notifications without requiring explicit authentication credentials.
          example: 6462742adc47d365036da07c
        typeName:
          type: string
          description: Human-readable label that displays the alert notification type.
        emailAddress:
          type: string
          format: email
          description: >-
            Email address to which MongoDB Cloud sends alert notifications. The
            resource requires this parameter when `"notifications.[n].typeName"
            : "EMAIL"`. You don't need to set this value to send emails to
            individual or groups of MongoDB Cloud users including:


            - specific MongoDB Cloud users (`"notifications.[n].typeName" : "USER"`)

            - MongoDB Cloud users with specific project roles (`"notifications.[n].typeName" : "GROUP"`)

            - MongoDB Cloud users with specific organization roles (`"notifications.[n].typeName" : "ORG"`)

            - MongoDB Cloud teams (`"notifications.[n].typeName" : "TEAM"`)


            To send emails to one MongoDB Cloud user or grouping of users, set the `notifications.[n].emailEnabled` parameter.
        emailEnabled:
          type: boolean
          description: >-
            Flag that indicates whether MongoDB Cloud should send email
            notifications. The resource requires this parameter when one of the
            following values have been set:


            - `"notifications.[n].typeName" : "ORG"`

            - `"notifications.[n].typeName" : "GROUP"`

            - `"notifications.[n].typeName" : "USER"`
        roles:
          type: array
          description: 'List that contains the one or more
            [organization](https://dochub.mongodb.org/core/atlas-org-roles) or
            [project roles](https://dochub.mongodb.org/core/atlas-proj-roles)
            that receive the configured alert. The resource requires this
            parameter when `"notifications.[n].typeName" : "GROUP"` or
            `"notifications.[n].typeName" : "ORG"`. If you include this
            parameter, MongoDB Cloud sends alerts only to users assigned the
            roles you specify in the array. If you omit this parameter, MongoDB
            Cloud sends alerts to users assigned any role.'
          items:
            type: string
            description: One organization or project role that receive the configured alert.
        smsEnabled:
          type: boolean
          description: >-
            Flag that indicates whether MongoDB Cloud should send text message
            notifications. The resource requires this parameter when one of the
            following values have been set:


            - `"notifications.[n].typeName" : "ORG"`

            - `"notifications.[n].typeName" : "GROUP"`

            - `"notifications.[n].typeName" : "USER"`
        notificationToken:
          type: string
          description: >-
            HipChat API token that MongoDB Cloud needs to send alert
            notifications to HipChat. The resource requires this parameter when
            `"notifications.[n].typeName" : "HIP_CHAT"`". If the token later
            becomes invalid, MongoDB Cloud sends an email to the project owners.
            If the token remains invalid, MongoDB Cloud removes it.


            **NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:


            * View or edit the alert through the Atlas UI.


            * Query the alert for the notification through the Atlas Administration API.
          example: "************************************1234"
        roomName:
          type: string
          description: 'HipChat API room name to which MongoDB Cloud sends alert
            notifications. The resource requires this parameter when
            `"notifications.[n].typeName" : "HIP_CHAT"`".'
          example: test room
        microsoftTeamsWebhookUrl:
          type: string
          description: >-
            Microsoft Teams Webhook Uniform Resource Locator (URL) that MongoDB
            Cloud needs to send this notification via Microsoft Teams. The
            resource requires this parameter when `"notifications.[n].typeName"
            : "MICROSOFT_TEAMS"`. If the URL later becomes invalid, MongoDB
            Cloud sends an email to the project owners. If the key remains
            invalid, MongoDB Cloud removes it.


            **NOTE**: When you view or edit the alert for a Microsoft Teams notification, the URL appears partially redacted.
          example: https://webhook.com/****
        opsGenieApiKey:
          type: string
          description: >-
            API Key that MongoDB Cloud needs to send this notification via
            Opsgenie. The resource requires this parameter when
            `"notifications.[n].typeName" : "OPS_GENIE"`. If the key later
            becomes invalid, MongoDB Cloud sends an email to the project owners.
            If the key remains invalid, MongoDB Cloud removes it.


            **NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:


            * View or edit the alert through the Atlas UI.


            * Query the alert for the notification through the Atlas Administration API.
          example: "********************************a111"
        opsGenieRegion:
          type: string
          default: US
          description: Opsgenie region that indicates which API Uniform Resource Locator
            (URL) to use.
        region:
          type: string
          default: US
          description: PagerDuty region that indicates which API Uniform Resource Locator
            (URL) to use.
        serviceKey:
          type: string
          description: >-
            PagerDuty service key that MongoDB Cloud needs to send notifications
            via PagerDuty. The resource requires this parameter when
            `"notifications.[n].typeName" : "PAGER_DUTY"`. If the key later
            becomes invalid, MongoDB Cloud sends an email to the project owners.
            If the key remains invalid, MongoDB Cloud removes it.


            **NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:


            * View or edit the alert through the Atlas UI.


            * Query the alert for the notification through the Atlas Administration API.
          example: "****************************7890"
        apiToken:
          type: string
          description: >-
            Slack API token or Bot token that MongoDB Cloud needs to send alert
            notifications via Slack. The resource requires this parameter when
            `"notifications.[n].typeName" : "SLACK"`. If the token later becomes
            invalid, MongoDB Cloud sends an email to the project owners. If the
            token remains invalid, MongoDB Cloud removes the token. 


            **NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:


            * View or edit the alert through the Atlas UI.


            * Query the alert for the notification through the Atlas Administration API.
          example: "*********************************************************************\
            *abcd"
        channelName:
          type: string
          description: 'Name of the Slack channel to which MongoDB Cloud sends alert
            notifications. The resource requires this parameter when
            `"notifications.[n].typeName" : "SLACK"`.'
          example: alerts
        mobileNumber:
          type: string
          description: 'Mobile phone number to which MongoDB Cloud sends alert
            notifications. The resource requires this parameter when
            `"notifications.[n].typeName" : "SMS"`.'
          example: "1233337892"
        teamId:
          type: string
          description: 'Unique 24-hexadecimal digit string that identifies one MongoDB
            Cloud team. The resource requires this parameter when
            `"notifications.[n].typeName" : "TEAM"`.'
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
        teamName:
          type: string
          description: 'Name of the MongoDB Cloud team that receives this notification.
            The resource requires this parameter when
            `"notifications.[n].typeName" : "TEAM"`.'
          example: Atlas
        username:
          type: string
          format: email
          description: 'MongoDB Cloud username of the person to whom MongoDB Cloud sends
            notifications. Specify only MongoDB Cloud users who belong to the
            project that owns the alert configuration. The resource requires
            this parameter when `"notifications.[n].typeName" : "USER"`.'
        victorOpsApiKey:
          type: string
          description: >-
            API key that MongoDB Cloud needs to send alert notifications to
            Splunk On-Call. The resource requires this parameter when
            `"notifications.[n].typeName" : "VICTOR_OPS"`. If the key later
            becomes invalid, MongoDB Cloud sends an email to the project owners.
            If the key remains invalid, MongoDB Cloud removes it.


            **NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:


            * View or edit the alert through the Atlas UI.


            * Query the alert for the notification through the Atlas Administration API.
          example: "********************************9abc"
        victorOpsRoutingKey:
          type: string
          description: 'Routing key that MongoDB Cloud needs to send alert notifications
            to Splunk On-Call. The resource requires this parameter when
            `"notifications.[n].typeName" : "VICTOR_OPS"`. If the key later
            becomes invalid, MongoDB Cloud sends an email to the project owners.
            If the key remains invalid, MongoDB Cloud removes it.'
          example: test routing
        webhookSecret:
          type: string
          description: >-
            Authentication secret for a webhook-based alert.


            Atlas returns this value if you set `"notifications.[n].typeName" :"WEBHOOK"` and either:

            * You set `notification.[n].webhookSecret` to a non-empty string

            * You set a default webhookSecret either on the [Integrations](https://www.mongodb.com/docs/atlas/tutorial/third-party-service-integrations/#std-label-third-party-integrations) page, or with the [Integrations API](#tag/Third-Party-Service-Integrations/operation/createIntegration)


            **NOTE**: When you view or edit the alert for a webhook notification, the secret appears completely redacted.
          example: "******"
        webhookUrl:
          type: string
          description: >-
            Target URL for a webhook-based alert.


            Atlas returns this value if you set `"notifications.[n].typeName" :"WEBHOOK"` and either:

            * You set `notification.[n].webhookURL` to a non-empty string

            * You set a default webhookUrl either on the [Integrations](https://www.mongodb.com/docs/atlas/tutorial/third-party-service-integrations/#std-label-third-party-integrations) page, or with the [Integrations API](#tag/Third-Party-Service-Integrations/operation/createIntegration)


            **NOTE**: When you view or edit the alert for a Webhook URL notification, the URL appears partially redacted.
          example: https://webhook.com/****
    AlertsToggle:
      type: object
      description: Enables or disables the specified alert configuration in the
        specified project.
      properties:
        enabled:
          type: boolean
          description: Flag that indicates whether to enable or disable the specified
            alert configuration in the specified project.
      title: Toggle Request
    ApiError:
      type: object
      properties:
        detail:
          type: string
          description: Describes the specific conditions or reasons that cause each type
            of error.
        error:
          type: integer
          format: int32
          description: HTTP status code returned with this error.
          externalDocs:
            url: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
        errorCode:
          type: string
          description: Application error code returned with this error.
        parameters:
          type: array
          description: Parameters used to give more information about the error.
          items: {}
        reason:
          type: string
          description: Application error message returned with this error.
    ApiHostView_Atlas:
      type: object
      properties:
        created:
          type: string
          format: date-time
          description: Date and time when MongoDB Cloud created this MongoDB process. This
            parameter expresses its value in the ISO 8601 timestamp format in
            UTC.
          readOnly: true
        groupId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the project. The
            project contains MongoDB processes that you want to return. The
            MongoDB process can be either the `mongod` or `mongos`.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        hostname:
          type: string
          description: Hostname, fully qualified domain name (FQDN), or Internet Protocol
            address (IPv4 or IPv6) of the host that runs the MongoDB process
            (`mongod` or `mongos`).
          pattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}|([0-9a-f]{1,4}:){7}([0-9a-f]{1,4})|(([a-z0-9]+\.){1,10}[a-z]+)?$
          readOnly: true
        id:
          type: string
          description: Combination of hostname and Internet Assigned Numbers Authority
            (IANA) port that serves the MongoDB process. The host must be the
            hostname, fully qualified domain name (FQDN), or Internet Protocol
            address (IPv4 or IPv6) of the host that runs the MongoDB process
            (`mongod` or `mongos`). The port must be the IANA port on which the
            MongoDB process listens for requests.
          pattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\.){1,10}[a-z]+)?(\:[0-9]{4,5})$
          readOnly: true
        lastPing:
          type: string
          format: date-time
          description: Date and time when MongoDB Cloud received the last ping for this
            MongoDB process. This parameter expresses its value in the ISO 8601
            timestamp format in UTC.
          readOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link_Atlas"
          readOnly: true
        port:
          type: integer
          format: int32
          description: Internet Assigned Numbers Authority (IANA) port on which the
            MongoDB process listens for requests.
          readOnly: true
        replicaSetName:
          type: string
          description: Human-readable label that identifies the replica set that contains
            this process. This resource returns this parameter if this process
            belongs to a replica set.
          readOnly: true
        shardName:
          type: string
          description: Human-readable label that identifies the shard that contains this
            process. This resource returns this value only if this process
            belongs to a sharded cluster.
          readOnly: true
        typeName:
          type: string
          description: Type of MongoDB process that MongoDB Cloud tracks. MongoDB Cloud
            returns new processes as **NO_DATA** until MongoDB Cloud completes
            deploying the process.
          readOnly: true
        userAlias:
          type: string
          description: Human-readable label that identifies the cluster node. MongoDB
            Cloud sets this hostname usually to the standard hostname for the
            cluster node. It appears in the connection string for a cluster
            instead of the value of the hostname parameter.
          readOnly: true
        version:
          type: string
          description: Version of MongoDB that this process runs.
          pattern: ([\d]+\.[\d]+\.[\d]+)
          readOnly: true
    ApiKey:
      type: object
      description: Details contained in one API key.
      properties:
        accessList:
          type: array
          description: List of network addresses granted access to this API using this API
            key.
          items:
            $ref: "#/components/schemas/AccessListItem"
          readOnly: true
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies this
            organization API key.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        publicKey:
          type: string
          description: Public API key value set for the specified organization API key.
          maxLength: 8
          minLength: 8
          readOnly: true
        roles:
          type: array
          description: List that contains roles that the API key needs to have. All roles
            you provide must be valid for the specified project or organization.
            Each request must include a minimum of one valid role. The resource
            returns all project and organization roles assigned to the Cloud
            user.
          items:
            $ref: "#/components/schemas/CloudAccessRoleAssignment"
          readOnly: true
      readOnly: true
      required:
        - id
        - publicKey
    ApiKeyUserDetails:
      type: object
      description: Details of the Programmatic API Keys.
      properties:
        desc:
          type: string
          description: Purpose or explanation provided when someone created this
            organization API key.
          maxLength: 250
          minLength: 1
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies this
            organization API key assigned to this project.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        privateKey:
          type: string
          description: Redacted private key returned for this organization API key. This
            key displays unredacted when first created.
          example: 55c3bbb6-b4bb-0be1-e66d20841f3e
          readOnly: true
        publicKey:
          type: string
          description: Public API key value set for the specified organization API key.
          example: zmmrboas
          maxLength: 8
          minLength: 8
          readOnly: true
        roles:
          type: array
          description: List that contains the roles that the API key needs to have. All
            roles you provide must be valid for the specified project or
            organization. Each request must include a minimum of one valid role.
            The resource returns all project and organization roles assigned to
            the API key.
          items:
            $ref: "#/components/schemas/CloudAccessRoleAssignment"
    ApiMeasurementsGeneralView_Atlas:
      type: object
      properties:
        databaseName:
          type: string
          description: Human-readable label that identifies the database that the
            specified MongoDB process serves.
          readOnly: true
        end:
          type: string
          format: date-time
          description: Date and time that specifies when to stop retrieving measurements.
            If you set **end**, you must set **start**. You can't set this
            parameter and **period** in the same request. This parameter
            expresses its value in the ISO 8601 timestamp format in UTC.
          readOnly: true
        granularity:
          type: string
          description: Duration that specifies the interval between measurement data
            points. The parameter expresses its value in ISO 8601 timestamp
            format in UTC. If you set this parameter, you must set either
            **period** or **start** and **end**.
          readOnly: true
        groupId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the project. The
            project contains MongoDB processes that you want to return. The
            MongoDB process can be either the `mongod` or `mongos`.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        hostId:
          type: string
          description: Combination of hostname and Internet Assigned Numbers Authority
            (IANA) port that serves the MongoDB process. The host must be the
            hostname, fully qualified domain name (FQDN), or Internet Protocol
            address (IPv4 or IPv6) of the host that runs the MongoDB process
            (`mongod` or `mongos`). The port must be the IANA port on which the
            MongoDB process listens for requests.
          example: mongodb.example.com:27017
          pattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\.){1,10}[a-z]+)?(\:[0-9]{4,5})$
          readOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link_Atlas"
          readOnly: true
        measurements:
          type: array
          description: List that contains measurements and their data points.
          items:
            $ref: "#/components/schemas/MetricsMeasurement_Atlas"
          readOnly: true
        partitionName:
          type: string
          description: Human-readable label of the disk or partition to which the
            measurements apply.
          readOnly: true
        processId:
          type: string
          description: Combination of hostname and Internet Assigned Numbers Authority
            (IANA) port that serves the MongoDB process. The host must be the
            hostname, fully qualified domain name (FQDN), or Internet Protocol
            address (IPv4 or IPv6) of the host that runs the MongoDB process
            (`mongod` or `mongos`). The port must be the IANA port on which the
            MongoDB process listens for requests.
          example: mongodb.example.com:27017
          pattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\.){1,10}[a-z]+)?(\:[0-9]{4,5})$
          readOnly: true
        start:
          type: string
          format: date-time
          description: Date and time that specifies when to start retrieving measurements.
            If you set **start**, you must set **end**. You can't set this
            parameter and **period** in the same request. This parameter
            expresses its value in the ISO 8601 timestamp format in UTC.
          readOnly: true
    AtlasClusterOutageSimulationOutageFilter:
      type: object
      properties:
        cloudProvider:
          type: string
          description: The cloud provider of the region that undergoes the outage
            simulation.
        regionName:
          type: string
          description: The name of the region to undergo an outage simulation.
        type:
          type: string
          description: |-
            The type of cluster outage to simulate.

            | Type       | Description |
            |------------|-------------|
            | `REGION`   | Simulates a cluster outage for a region.|
    AtlasOrganization:
      type: object
      description: Details that describe the organization.
      properties:
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the organization.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        isDeleted:
          type: boolean
          description: Flag that indicates whether this organization has been deleted.
          readOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        name:
          type: string
          description: Human-readable label that identifies the organization.
          maxLength: 64
          minLength: 1
          pattern: ^[\p{L}\p{N}\-_.(),:&@+']{1,64}$
      required:
        - name
    AuditLog:
      type: object
      properties:
        auditAuthorizationSuccess:
          type: boolean
          default: false
          description: 'Flag that indicates whether someone set auditing to track
            successful authentications. This only applies to the `"atype" :
            "authCheck"` audit filter. Setting this parameter to `true` degrades
            cluster performance.'
          externalDocs:
            description: System Auditing Messages
            url: https://docs.mongodb.com/manual/reference/audit-message/#audit-event-actions-details-and-results
        auditFilter:
          type: string
          description: JSON document that specifies which events to record. Escape any
            characters that may prevent parsing, such as single or double
            quotes, using a backslash (`\`).
          externalDocs:
            description: Custom Auditing Filter
            url: https://docs.atlas.mongodb.com/tutorial/auditing-custom-filter/
        configurationType:
          type: string
          description: Human-readable label that displays how to configure the audit filter.
          readOnly: true
        enabled:
          type: boolean
          default: false
          description: Flag that indicates whether someone enabled database auditing for
            the specified project.
    AuthFederationRoleMapping:
      type: object
      description: Mapping settings that link one IdP and MongoDB Cloud.
      properties:
        externalGroupName:
          type: string
          description: Unique human-readable label that identifies the identity provider
            group to which this role mapping applies.
          maxLength: 200
          minLength: 1
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies this role mapping.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        roleAssignments:
          type: array
          description: Atlas roles and the unique identifiers of the groups and
            organizations associated with each role.
          items:
            $ref: "#/components/schemas/RoleAssignment"
          uniqueItems: true
      required:
        - externalGroupName
      title: Federated Authentication Role Mapping
    AvailableCloudProviderRegion:
      type: object
      properties:
        default:
          type: boolean
          description: Flag that indicates whether the cloud provider sets this region as
            its default. AWS defaults to US_EAST_1, GCP defaults to CENTRAL_US,
            and AZURE defaults to US_WEST_2.
          readOnly: true
        name:
          type: string
          description: Human-readable label that identifies the supported region.
          readOnly: true
    AvailableClustersDeployment:
      type: object
      description: Deployments that can be migrated to MongoDB Atlas.
      properties:
        agentVersion:
          type: string
          description: Version of MongoDB Agent that monitors/manages the cluster.
          readOnly: true
        clusterId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the cluster.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        dbSizeBytes:
          type: integer
          format: int64
          description: Size of this database on disk at the time of the request expressed
            in bytes.
          example: 8192
          readOnly: true
        featureCompatibilityVersion:
          type: string
          description: Version of MongoDB
            [features](https://docs.mongodb.com/manual/reference/command/setFeatureCompatibilityVersion)
            that this cluster supports.
          readOnly: true
        managed:
          type: boolean
          description: Flag that indicates whether Automation manages this cluster.
          readOnly: true
        mongoDBVersion:
          type: string
          description: Version of MongoDB that this cluster runs.
          readOnly: true
        name:
          type: string
          description: Human-readable label that identifies this cluster.
          example: Project X sharded cluster
          readOnly: true
        oplogSizeMB:
          type: integer
          format: int32
          description: Size of the Oplog on disk at the time of the request expressed in MB.
          example: 3
          readOnly: true
        sharded:
          type: boolean
          description: >-
            Flag that indicates whether someone configured this cluster as a
            sharded cluster.


            - If `true`, this cluster serves as a sharded cluster.

            - If `false`, this cluster serves as a replica set.
          readOnly: true
        shardsSize:
          type: integer
          format: int32
          description: Number of shards that comprise this cluster.
          example: 3
          readOnly: true
        tlsEnabled:
          type: boolean
          description: Flag that indicates whether someone enabled TLS for this cluster.
          readOnly: true
      required:
        - featureCompatibilityVersion
        - managed
        - mongoDBVersion
        - name
        - sharded
        - tlsEnabled
      title: Available Clusters
    AzureKeyVault:
      type: object
      description: Details that define the configuration of Encryption at Rest using
        Azure Key Vault (AKV).
      externalDocs:
        description: Azure Key Vault
        url: https://www.mongodb.com/docs/atlas/security-azure-kms/
      properties:
        azureEnvironment:
          type: string
          description: Azure environment in which your account credentials reside.
        clientID:
          type: string
          format: uuid
          description: Unique 36-hexadecimal character string that identifies an Azure
            application associated with your Azure Active Directory tenant.
        enabled:
          type: boolean
          description: Flag that indicates whether someone enabled encryption at rest for
            the specified  project. To disable encryption at rest using customer
            key management and remove the configuration details, pass only this
            parameter with a value of `false`.
        keyIdentifier:
          type: string
          description: Web address with a unique key that identifies for your Azure Key
            Vault.
          example: https://EXAMPLEKeyVault.vault.azure.net/keys/EXAMPLEKey/d891821e3d364e9eb88fbd3d11807b86
        keyVaultName:
          type: string
          description: Unique string that identifies the Azure Key Vault that contains
            your key.
        resourceGroupName:
          type: string
          description: Name of the Azure resource group that contains your Azure Key Vault.
        secret:
          type: string
          description: Private data that you need secured and that belongs to the
            specified Azure Key Vault (AKV) tenant (**azureKeyVault.tenantID**).
            This data can include any type of sensitive data such as passwords,
            database connection strings, API keys, and the like. AKV stores this
            information as encrypted binary data.
          externalDocs:
            description: Azure Key Vault Secrets
            url: https://docs.microsoft.com/en-us/azure/key-vault/secrets/about-secrets
          writeOnly: true
        subscriptionID:
          type: string
          format: uuid
          description: Unique 36-hexadecimal character string that identifies your Azure
            subscription.
        tenantID:
          type: string
          format: uuid
          description: Unique 36-hexadecimal character string that identifies the Azure
            Active Directory tenant within your Azure subscription.
        valid:
          type: boolean
          description: Flag that indicates whether the Azure encryption key can encrypt
            and decrypt data.
          readOnly: true
    BackupComplianceOnDemandPolicyItem:
      type: object
      description: Specifications for on-demand policy.
      properties:
        frequencyInterval:
          type: integer
          format: int32
          description: Number that indicates the frequency interval for a set of
            snapshots. MongoDB Cloud ignores this setting for non-hourly policy
            items in Backup Compliance Policy settings.
        frequencyType:
          type: string
          description: Human-readable label that identifies the frequency type associated
            with the backup policy.
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies this backup
            policy item.
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        retentionUnit:
          type: string
          description: Unit of time in which MongoDB Cloud measures snapshot retention.
        retentionValue:
          type: integer
          format: int32
          description: >-
            Duration in days, weeks, months, or years that MongoDB Cloud retains
            the snapshot. For less frequent policy items, MongoDB Cloud requires
            that you specify a value greater than or equal to the value
            specified for more frequent policy items.


            For example: If the hourly policy item specifies a retention of two days, you must specify two days or greater for the retention of the weekly policy item.
      required:
        - frequencyInterval
        - frequencyType
        - retentionUnit
        - retentionValue
    BackupComplianceScheduledPolicyItem:
      type: object
      description: Specifications for scheduled policy.
      properties:
        frequencyInterval:
          type: integer
          format: int32
          description: >-
            Number that indicates the frequency interval for a set of snapshots.
            A value of `1` specifies the first instance of the corresponding
            `frequencyType`.


            - In a yearly policy item, `1` indicates that the yearly snapshot occurs on the first day of January and `12` indicates the first day of December.


            - In a monthly policy item, `1` indicates that the monthly snapshot occurs on the first day of the month and `40` indicates the last day of the month.


            - In a weekly policy item, `1` indicates that the weekly snapshot occurs on Monday and `7` indicates Sunday.


            - In an hourly policy item, you can set the frequency interval to `1`, `2`, `4`, `6`, `8`, or `12`. For hourly policy items for NVMe clusters, MongoDB Cloud accepts only `12` as the frequency interval value.

             MongoDB Cloud ignores this setting for non-hourly policy items in Backup Compliance Policy settings.
        frequencyType:
          type: string
          description: Human-readable label that identifies the frequency type associated
            with the backup policy.
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies this backup
            policy item.
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        retentionUnit:
          type: string
          description: Unit of time in which MongoDB Cloud measures snapshot retention.
        retentionValue:
          type: integer
          format: int32
          description: >-
            Duration in days, weeks, months, or years that MongoDB Cloud retains
            the snapshot. For less frequent policy items, MongoDB Cloud requires
            that you specify a value greater than or equal to the value
            specified for more frequent policy items.


            For example: If the hourly policy item specifies a retention of two days, you must specify two days or greater for the retention of the weekly policy item.
      required:
        - frequencyInterval
        - frequencyType
        - retentionUnit
        - retentionValue
    BackupLabel:
      type: object
      description: Collection of key-value pairs that represent custom data to add to
        the metadata file that MongoDB Cloud uploads to the bucket when the
        export job finishes.
      properties:
        key:
          type: string
          description: Key for the metadata file that MongoDB Cloud uploads to the bucket
            when the export job finishes.
        value:
          type: string
          description: Value for the key to include in file that MongoDB Cloud uploads to
            the bucket when the export job finishes.
    BackupOnlineArchive:
      type: object
      properties:
        _id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the online
            archive.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        clusterName:
          type: string
          description: Human-readable label that identifies the cluster that contains the
            collection for which you want to create an online archive.
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
          readOnly: true
        collName:
          type: string
          description: Human-readable label that identifies the collection for which you
            created the online archive.
          readOnly: true
        collectionType:
          type: string
          default: STANDARD
          description: >-
            Classification of MongoDB database collection that you want to
            return.


            If you set this parameter to `TIMESERIES`, set `"criteria.type" : "date"` and `"criteria.dateFormat" : "ISODATE"`.
          readOnly: true
        criteria:
          $ref: "#/components/schemas/Criteria"
        dataExpirationRule:
          $ref: "#/components/schemas/DataExpirationRule"
        dataProcessRegion:
          $ref: "#/components/schemas/DataProcessRegion"
        dataSetName:
          type: string
          description: Human-readable label that identifies the dataset that Atlas
            generates for this online archive.
          readOnly: true
        dbName:
          type: string
          description: Human-readable label of the database that contains the collection
            that contains the online archive.
          readOnly: true
        groupId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the project that
            contains the specified cluster. The specified cluster contains the
            collection for which to create the online archive.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        partitionFields:
          type: array
          description: "List that contains document parameters to use to logically divide
            data within a collection. Partitions provide a coarse level of
            filtering of the underlying collection data. To divide your data,
            specify parameters that you frequently query. If you \"specified
            :criteria.type\": \"DATE\" in the CREATE ONE ONLINE ARCHIVE
            endpoint, then you can specify up to three parameters by which to
            query. One of these parameters must be the DATE value, which is
            required in this case. If you \"specified :criteria.type\":
            \"CUSTOM\" in the CREATE ONE ONLINE ARCHIVE endpoint, then you can
            specify up to two parameters by which to query. Queries that don't
            use \":criteria.type\": \"DATE\" or \":criteria.type\": \"CUSTOM\"
            parameters cause MongoDB to scan a full collection of all archived
            documents. This takes more time and increases your costs."
          items:
            $ref: "#/components/schemas/PartitionField"
          minItems: 1
          readOnly: true
        paused:
          type: boolean
          description: Flag that indicates whether this online archive exists in the
            paused state. A request to resume fails if the collection has
            another active online archive. To pause an active online archive or
            resume a paused online archive, you must include this parameter. To
            pause an active archive, set this to **true**. To resume a paused
            archive, set this to **false**.
        schedule:
          $ref: "#/components/schemas/OnlineArchiveSchedule"
        state:
          type: string
          description: >-
            Phase of the process to create this online archive when you made
            this request.


            | State       | Indication |

            |-------------|------------|

            | `PENDING`   | MongoDB Cloud has queued documents for archive. Archiving hasn't started. |

            | `ARCHIVING` | MongoDB Cloud started archiving documents that meet the archival criteria. |

            | `IDLE`      | MongoDB Cloud waits to start the next archival job. |

            | `PAUSING`   | Someone chose to stop archiving. MongoDB Cloud finishes the running archival job then changes the state to `PAUSED` when that job completes. |

            | `PAUSED`    | MongoDB Cloud has stopped archiving. Archived documents can be queried. The specified archiving operation on the active cluster cannot archive additional documents. You can resume archiving for paused archives at any time. |

            | `ORPHANED`  | Someone has deleted the collection associated with an active or paused archive. MongoDB Cloud doesn't delete the archived data. You must manually delete the online archives associated with the deleted collection. |

            | `DELETED`   | Someone has deleted the archive was deleted. When someone deletes an online archive, MongoDB Cloud removes all associated archived documents from the cloud object storage. |
          readOnly: true
    BackupOnlineArchiveCreate:
      type: object
      properties:
        _id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the online
            archive.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        clusterName:
          type: string
          description: Human-readable label that identifies the cluster that contains the
            collection for which you want to create an online archive.
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
          readOnly: true
        collName:
          type: string
          description: Human-readable label that identifies the collection for which you
            created the online archive.
          writeOnly: true
        collectionType:
          type: string
          default: STANDARD
          description: >-
            Classification of MongoDB database collection that you want to
            return.


            If you set this parameter to `TIMESERIES`, set `"criteria.type" : "date"` and `"criteria.dateFormat" : "ISODATE"`.
          writeOnly: true
        criteria:
          $ref: "#/components/schemas/Criteria"
        dataExpirationRule:
          $ref: "#/components/schemas/DataExpirationRule"
        dataProcessRegion:
          $ref: "#/components/schemas/CreateDataProcessRegion"
        dataSetName:
          type: string
          description: Human-readable label that identifies the dataset that Atlas
            generates for this online archive.
          readOnly: true
        dbName:
          type: string
          description: Human-readable label of the database that contains the collection
            that contains the online archive.
          writeOnly: true
        groupId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the project that
            contains the specified cluster. The specified cluster contains the
            collection for which to create the online archive.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        partitionFields:
          type: array
          description: "List that contains document parameters to use to logically divide
            data within a collection. Partitions provide a coarse level of
            filtering of the underlying collection data. To divide your data,
            specify parameters that you frequently query. If you \"specified
            :criteria.type\": \"DATE\" in the CREATE ONE ONLINE ARCHIVE
            endpoint, then you can specify up to three parameters by which to
            query. One of these parameters must be the DATE value, which is
            required in this case. If you \"specified :criteria.type\":
            \"CUSTOM\" in the CREATE ONE ONLINE ARCHIVE endpoint, then you can
            specify up to two parameters by which to query. Queries that don't
            use \":criteria.type\": \"DATE\" or \":criteria.type\": \"CUSTOM\"
            parameters cause MongoDB to scan a full collection of all archived
            documents. This takes more time and increases your costs."
          items:
            $ref: "#/components/schemas/PartitionField"
          minItems: 1
          writeOnly: true
        paused:
          type: boolean
          description: Flag that indicates whether this online archive exists in the
            paused state. A request to resume fails if the collection has
            another active online archive. To pause an active online archive or
            resume a paused online archive, you must include this parameter. To
            pause an active archive, set this to **true**. To resume a paused
            archive, set this to **false**.
        schedule:
          $ref: "#/components/schemas/OnlineArchiveSchedule"
        state:
          type: string
          description: >-
            Phase of the process to create this online archive when you made
            this request.


            | State       | Indication |

            |-------------|------------|

            | `PENDING`   | MongoDB Cloud has queued documents for archive. Archiving hasn't started. |

            | `ARCHIVING` | MongoDB Cloud started archiving documents that meet the archival criteria. |

            | `IDLE`      | MongoDB Cloud waits to start the next archival job. |

            | `PAUSING`   | Someone chose to stop archiving. MongoDB Cloud finishes the running archival job then changes the state to `PAUSED` when that job completes. |

            | `PAUSED`    | MongoDB Cloud has stopped archiving. Archived documents can be queried. The specified archiving operation on the active cluster cannot archive additional documents. You can resume archiving for paused archives at any time. |

            | `ORPHANED`  | Someone has deleted the collection associated with an active or paused archive. MongoDB Cloud doesn't delete the archived data. You must manually delete the online archives associated with the deleted collection. |

            | `DELETED`   | Someone has deleted the archive was deleted. When someone deletes an online archive, MongoDB Cloud removes all associated archived documents from the cloud object storage. |
          readOnly: true
      required:
        - collName
        - criteria
        - dbName
    BackupRestoreJob:
      type: object
      properties:
        batchId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the batch to
            which this restore job belongs. This parameter exists only for a
            sharded cluster restore.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        checkpointId:
          type: string
          description: >-
            Unique 24-hexadecimal digit string that identifies the sharded
            cluster checkpoint. The checkpoint represents the point in time back
            to which you want to restore you data. This parameter applies when
            `"delivery.methodName" : "AUTOMATED_RESTORE"`. Use this parameter
            with sharded clusters only.


            - If you set **checkpointId**, you can't set **oplogInc**, **oplogTs**, **snapshotId**, or **pointInTimeUTCMillis**.

            - If you provide this parameter, this endpoint restores all data up to this checkpoint to the database you specify in the **delivery** object.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          writeOnly: true
        clusterId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the cluster with
            the snapshot you want to return. This parameter returns for restore
            clusters.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        clusterName:
          type: string
          description: Human-readable label that identifies the cluster containing the
            snapshots you want to retrieve.
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
          readOnly: true
        created:
          type: string
          format: date-time
          description: Date and time when someone requested this restore job. This
            parameter expresses its value in the ISO 8601 timestamp format in
            UTC.
          readOnly: true
        delivery:
          $ref: "#/components/schemas/BackupRestoreJobDelivery"
        encryptionEnabled:
          type: boolean
          description: Flag that indicates whether someone encrypted the data in the
            restored snapshot.
          readOnly: true
        groupId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the project that
            owns the snapshots.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        hashes:
          type: array
          description: 'List that contains documents mapping each restore file to a hashed
            checksum. This parameter applies after you download the
            corresponding **delivery.url**. If `"methodName" : "HTTP"`, this
            list contains one object that represents the hash of the **.tar.gz**
            file.'
          items:
            $ref: "#/components/schemas/RestoreJobFileHash"
          readOnly: true
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the restore job.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        masterKeyUUID:
          type: string
          format: uuid
          description: 'Universally Unique Identifier (UUID) that identifies the Key
            Management Interoperability (KMIP) master key used to encrypt the
            snapshot data. This parameter applies only when `"encryptionEnabled"
            : "true"`.'
          readOnly: true
        oplogInc:
          type: integer
          format: int32
          description: >-
            Thirty-two-bit incrementing ordinal that represents operations
            within a given second. When paired with **oplogTs**, this represents
            the point in time to which MongoDB Cloud restores your data. This
            parameter applies when `"delivery.methodName" :
            "AUTOMATED_RESTORE"`.


            - If you set **oplogInc**, you must set **oplogTs**, and can't set **checkpointId**, **snapshotId**, or **pointInTimeUTCMillis**.

            - If you provide this parameter, this endpoint restores all data up to and including this Oplog timestamp to the database you specified in the **delivery** object.
          minimum: 1
          writeOnly: true
        oplogTs:
          type: string
          description: >-
            Date and time from which you want to restore this snapshot. This
            parameter expresses its value in ISO 8601 format in UTC. This
            represents the first part of an Oplog timestamp. When paired with
            **oplogInc**, they represent the last database operation to which
            you want to restore your data. This parameter applies when
            `"delivery.methodName" : "AUTOMATED_RESTORE"`. Run a query against
            **local.oplog.rs** on your replica set to find the desired
            timestamp.


            - If you set **oplogTs**, you must set **oplogInc**, and you can't set **checkpointId**, **snapshotId**, or **pointInTimeUTCMillis**.

            - If you provide this parameter, this endpoint restores all data up to and including this Oplog timestamp to the database you specified in the **delivery** object.
          pattern: ^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z|[+-][01]\\d:[0-5]\\d)$
          writeOnly: true
        pointInTimeUTCMillis:
          type: integer
          format: int64
          description: >-
            Timestamp from which you want to restore this snapshot. This
            parameter expresses its value in the number of milliseconds elapsed
            since the [UNIX epoch](https://en.wikipedia.org/wiki/Unix_time).
            This timestamp must fall within the last 24 hours of the current
            time. This parameter applies when `"delivery.methodName" :
            "AUTOMATED_RESTORE"`.


            - If you provide this parameter, this endpoint restores all data up to this point in time to the database you specified in the **delivery** object.

            - If you set **pointInTimeUTCMillis**, you can't set **oplogInc**, **oplogTs**, **snapshotId**, or **checkpointId**.
          minimum: 1199145600000
          writeOnly: true
        snapshotId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the snapshot to
            restore. If you set **snapshotId**, you can't set **oplogInc**,
            **oplogTs**, **pointInTimeUTCMillis**, or **checkpointId**.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
        statusName:
          type: string
          description: Human-readable label that identifies the status of the downloadable
            file at the time of the request.
          readOnly: true
        timestamp:
          $ref: "#/components/schemas/ApiBSONTimestamp"
      required:
        - delivery
    BackupRestoreJobDelivery:
      type: object
      description: Method and details that indicate how to deliver the restored
        snapshot data.
      properties:
        authHeader:
          type: string
          description: 'Header name to use when downloading the restore, used with
            `"delivery.methodName" : "HTTP"`.'
          readOnly: true
        authValue:
          type: string
          description: 'Header value to use when downloading the restore, used with
            `"delivery.methodName" : "HTTP"`.'
          readOnly: true
        expirationHours:
          type: integer
          format: int32
          description: 'Number of hours after the restore job completes that indicates
            when the Uniform Resource Locator (URL) for the snapshot download
            file expires. The resource returns this parameter when
            `"delivery.methodName" : "HTTP"`.'
          minimum: 1
        expires:
          type: string
          format: date-time
          description: 'Date and time when the Uniform Resource Locator (URL) for the
            snapshot download file expires. This parameter expresses its value
            in the ISO 8601 timestamp format in UTC. The resource returns this
            parameter when `"delivery.methodName" : "HTTP"`.'
          readOnly: true
        maxDownloads:
          type: integer
          format: int32
          description: 'Positive integer that indicates how many times you can use the
            Uniform Resource Locator (URL) for the snapshot download file. The
            resource returns this parameter when `"delivery.methodName" :
            "HTTP"`.'
          minimum: 1
        methodName:
          type: string
          description: 'Human-readable label that identifies the means for delivering the
            data. If you set `"delivery.methodName" : "AUTOMATED_RESTORE"`, you
            must also set: **delivery.targetGroupId** and
            **delivery.targetClusterName** or **delivery.targetClusterId**. The
            response returns `"delivery.methodName" : "HTTP"` as an automated
            restore uses HyperText Transport Protocol (HTTP) to deliver the
            restore job to the target host.'
        statusName:
          type: string
          description: State of the downloadable snapshot file when MongoDB Cloud received
            this request.
          readOnly: true
        targetClusterId:
          type: string
          description: >-
            Unique 24-hexadecimal digit string that identifies the target
            cluster. Use the **clusterId** returned in the response body of the
            **Get All Snapshots** and **Get a Snapshot** endpoints. This
            parameter applies when `"delivery.methodName" :
            "AUTOMATED_RESTORE"`.

             If the target cluster doesn't have backup enabled, two resources return parameters with empty values:

            - **Get All Snapshots** endpoint returns an empty results array without **clusterId** elements

            - **Get a Snapshot** endpoint doesn't return a **clusterId** parameter.


            To return a response with the **clusterId** parameter, either use the **delivery.targetClusterName** parameter or enable backup on the target cluster.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
        targetClusterName:
          type: string
          description: >-
            Human-readable label that identifies the target cluster. Use the
            **clusterName** returned in the response body of the **Get All
            Snapshots** and **Get a Snapshot** endpoints.  This parameter
            applies when `"delivery.methodName" : "AUTOMATED_RESTORE"`.


            If the target cluster doesn't have backup enabled, two resources return parameters with empty values:


            - **Get All Snapshots** endpoint returns an empty results array without **clusterId** elements

            - **Get a Snapshot** endpoint doesn't return a **clusterId** parameter.


            To return a response with the **clusterId** parameter, either use the **delivery.targetClusterName** parameter or enable backup on the target cluster.
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        targetGroupId:
          type: string
          description: 'Unique 24-hexadecimal digit string that identifies the project
            that contains the destination cluster for the restore job. The
            resource returns this parameter when `"delivery.methodName" :
            "AUTOMATED_RESTORE"`.'
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
        url:
          type: string
          deprecated: true
          description: 'Uniform Resource Locator (URL) from which you can download the
            restored snapshot data. Url includes the verification key. The
            resource returns this parameter when `"delivery.methodName" :
            "HTTP"`.'
          readOnly: true
        urlV2:
          type: string
          description: 'Uniform Resource Locator (URL) from which you can download the
            restored snapshot data. This should be preferred over **url**. The
            verification key must be sent as an HTTP header. The resource
            returns this parameter when `"delivery.methodName" : "HTTP"`.'
          readOnly: true
      required:
        - methodName
      title: Restore Snapshot Delivery Metadata
    BackupSnapshot:
      type: object
      properties:
        clusterId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the cluster with
            the snapshots you want to return.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        complete:
          type: boolean
          description: Flag that indicates whether the snapshot exists. This flag returns
            `false` while MongoDB Cloud creates the snapshot.
          readOnly: true
        created:
          $ref: "#/components/schemas/ApiBSONTimestamp"
        doNotDelete:
          type: boolean
          description: "Flag that indicates whether someone can delete this snapshot. You
            can't set `\"doNotDelete\" : true` and set a timestamp for
            **expires** in the same request."
        expires:
          type: string
          format: date-time
          description: 'Date and time when MongoDB Cloud deletes the snapshot. If
            `"doNotDelete" : true`, MongoDB Cloud removes any value set for this
            parameter.'
        groupId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the project that
            owns the snapshots.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the snapshot.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        incremental:
          type: boolean
          description: Flag indicating if this is an incremental or a full snapshot.
          readOnly: true
        lastOplogAppliedTimestamp:
          $ref: "#/components/schemas/ApiBSONTimestamp"
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        parts:
          type: array
          description: >-
            Metadata that describes the complete snapshot.


            - For a replica set, this array contains a single document.

            - For a sharded cluster, this array contains one document for each shard plus one document for the config host.
          items:
            $ref: "#/components/schemas/BackupSnapshotPart"
          readOnly: true
    BackupSnapshotPart:
      type: object
      description: Characteristics that identify this snapshot.
      properties:
        clusterId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the cluster with
            the snapshots you want to return.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        compressionSetting:
          type: string
          description: Human-readable label that identifies the method of compression for
            the snapshot.
          readOnly: true
        dataSizeBytes:
          type: integer
          format: int64
          description: Total size of the data stored on each node in the cluster. This
            parameter expresses its value in bytes.
          readOnly: true
        encryptionEnabled:
          type: boolean
          description: Flag that indicates whether someone encrypted this snapshot.
          readOnly: true
        fileSizeBytes:
          type: integer
          format: int64
          description: Number that indicates the total size of the data files in bytes.
          readOnly: true
        masterKeyUUID:
          type: string
          format: uuid
          description: 'Unique string that identifies the Key Management Interoperability
            (KMIP) master key used to encrypt the snapshot data. The resource
            returns this parameter when `"parts.encryptionEnabled" : true`.'
          readOnly: true
        mongodVersion:
          type: string
          description: Number that indicates the version of MongoDB that the replica set
            primary ran when MongoDB Cloud created the snapshot.
          pattern: ([\d]+\.[\d]+\.[\d]+)
          readOnly: true
        replicaSetName:
          type: string
          description: Human-readable label that identifies the replica set.
          readOnly: true
        storageSizeBytes:
          type: integer
          format: int64
          description: Number that indicates the total size of space allocated for
            document storage.
          readOnly: true
        typeName:
          type: string
          description: Human-readable label that identifies the type of server from which
            MongoDB Cloud took this snapshot.
          readOnly: true
      readOnly: true
      title: Snapshot Components
    BackupSnapshotRetention:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        retentionUnit:
          type: string
          description: Quantity of time in which MongoDB Cloud measures snapshot retention.
        retentionValue:
          type: integer
          format: int32
          description: Number that indicates the amount of days, weeks, months, or years
            that MongoDB Cloud retains the snapshot. For less frequent policy
            items, MongoDB Cloud requires that you specify a value greater than
            or equal to the value specified for more frequent policy items. If
            the hourly policy item specifies a retention of two days, specify
            two days or greater for the retention of the weekly policy item.
          example: 5
      required:
        - retentionUnit
        - retentionValue
    BackupTenantSnapshot:
      type: object
      properties:
        expiration:
          type: string
          format: date-time
          description: Date and time when the download link no longer works. This
            parameter expresses its value in the ISO 8601 timestamp format in
            UTC.
          readOnly: true
        finishTime:
          type: string
          format: date-time
          description: Date and time when MongoDB Cloud completed writing this snapshot.
            This parameter expresses its value in the ISO 8601 timestamp format
            in UTC.
          readOnly: true
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the restore job.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        mongoDBVersion:
          type: string
          description: MongoDB host version that the snapshot runs.
          readOnly: true
        scheduledTime:
          type: string
          format: date-time
          description: Date and time when MongoDB Cloud will take the snapshot. This
            parameter expresses its value in the ISO 8601 timestamp format in
            UTC.
          readOnly: true
        startTime:
          type: string
          format: date-time
          description: Date and time when MongoDB Cloud began taking the snapshot. This
            parameter expresses its value in the ISO 8601 timestamp format in
            UTC.
          readOnly: true
        status:
          type: string
          description: Phase of the workflow for this snapshot at the time this resource
            made this request.
          readOnly: true
    BaseAtlasDataLakeRegion:
      type: string
      description: Name of the region to which the data lake routes client connections.
    BaseCloudProviderInstanceSize:
      type: string
      description: 'Minimum instance size to which your cluster can automatically
        scale. MongoDB Cloud requires this parameter if
        `"replicationSpecs[n].regionConfigs[m].autoScaling.compute.scaleDownEnabled"
        : true`.'
    BaseNetworkPeeringConnectionSettings:
      type: object
      properties:
        containerId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the MongoDB
            Cloud network container that contains the specified network peering
            connection.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the network
            peering connection.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        providerName:
          type: string
          description: Cloud service provider that serves the requested network peering
            connection.
        accepterRegionName:
          type: string
          description: Amazon Web Services (AWS) region where the Virtual Peering
            Connection (VPC) that you peered with the MongoDB Cloud VPC resides.
            The resource returns `null` if your VPC and the MongoDB Cloud VPC
            reside in the same region.
        awsAccountId:
          type: string
          description: Unique twelve-digit string that identifies the Amazon Web Services
            (AWS) account that owns the VPC that you peered with the MongoDB
            Cloud VPC.
          maxLength: 12
          minLength: 12
          pattern: ^[0-9]{12}$
        connectionId:
          type: string
          description: Unique string that identifies the peering connection on AWS.
          readOnly: true
        errorStateName:
          type: string
          description: Type of error that can be returned when requesting an Amazon Web
            Services (AWS) peering connection. The resource returns `null` if
            the request succeeded.
          readOnly: true
        routeTableCidrBlock:
          type: string
          description: Internet Protocol (IP) addresses expressed in Classless
            Inter-Domain Routing (CIDR) notation of the VPC's subnet that you
            want to peer with the MongoDB Cloud VPC.
          pattern: ^((25[0-5]|(2[0-4]|1\d|[1-9]|)\d)(\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$
        statusName:
          type: string
          description: State of the network peering connection at the time you made the
            request.
          readOnly: true
        vpcId:
          type: string
          description: Unique string that identifies the VPC on Amazon Web Services (AWS)
            that you want to peer with the MongoDB Cloud VPC.
          minLength: 5
          pattern: ^vpc-[0-9a-f]{17}$
        azureDirectoryId:
          type: string
          description: Unique string that identifies the Azure AD directory in which the
            VNet peered with the MongoDB Cloud VNet resides.
          maxLength: 32
          minLength: 32
          pattern: ^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$
        azureSubscriptionId:
          type: string
          description: Unique string that identifies the Azure subscription in which the
            VNet you peered with the MongoDB Cloud VNet resides.
          maxLength: 32
          minLength: 32
          pattern: ^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$
        errorState:
          type: string
          description: 'Error message returned when a requested Azure network peering
            resource returns `"status" : "FAILED"`. The resource returns `null`
            if the request succeeded.'
          readOnly: true
        resourceGroupName:
          type: string
          description: Human-readable label that identifies the resource group in which
            the VNet to peer with the MongoDB Cloud VNet resides.
          pattern: ^([-\w._()])+$
        status:
          type: string
          description: State of the network peering connection at the time you made the
            request.
          readOnly: true
        vnetName:
          type: string
          description: Human-readable label that identifies the VNet that you want to peer
            with the MongoDB Cloud VNet.
          pattern: ^([-\w._()])+$
        errorMessage:
          type: string
          description: Details of the error returned when requesting a GCP network peering
            resource. The resource returns `null` if the request succeeded.
          readOnly: true
        gcpProjectId:
          type: string
          description: Human-readable label that identifies the GCP project that contains
            the network that you want to peer with the MongoDB Cloud VPC.
          maxLength: 30
          minLength: 6
          pattern: ^[a-z][0-9a-z-]{4,28}[0-9a-z]{1}
        networkName:
          type: string
          description: Human-readable label that identifies the network to peer with the
            MongoDB Cloud VPC.
          maxLength: 63
          minLength: 1
          pattern: "[a-z]([-a-z0-9]{0,62}[a-z0-9]{0,1})?"
      required:
        - containerId
    BaseStreamsRegion:
      type: string
      description: Name of the cloud provider region hosting Atlas Stream Processing.
    BasicDBObject:
      type: object
      additionalProperties:
        description: Fields to index for vector search.
        title: Field
      description: Fields to index for vector search.
      title: Field
    BiConnector:
      type: object
      description: Settings needed to configure the MongoDB Connector for Business
        Intelligence for this cluster.
      externalDocs:
        description: MongoDB Connector for Business Intelligence
        url: https://docs.mongodb.com/bi-connector/current/
      properties:
        enabled:
          type: boolean
          description: Flag that indicates whether MongoDB Connector for Business
            Intelligence is enabled on the specified cluster.
        readPreference:
          type: string
          description: Data source node designated for the MongoDB Connector for Business
            Intelligence on MongoDB Cloud. The MongoDB Connector for Business
            Intelligence on MongoDB Cloud reads data from the primary,
            secondary, or analytics node based on your read preferences.
            Defaults to `ANALYTICS` node, or `SECONDARY` if there are no
            `ANALYTICS` nodes.
          externalDocs:
            description: Read preferences for BI Connector
            url: https://docs.atlas.mongodb.com/cluster-config/enable-bic/#std-label-bic-read-preferences
      title: MongoDB Connector for Business Intelligence Settings
    BillingInvoice:
      type: object
      properties:
        amountBilledCents:
          type: integer
          format: int64
          description: Sum of services that the specified organization consumed in the
            period covered in this invoice. This parameter expresses its value
            in cents (100ths of one US Dollar) and calculates its value as
            **subtotalCents** + **salesTaxCents** - **startingBalanceCents**.
          readOnly: true
        amountPaidCents:
          type: integer
          format: int64
          description: Sum that the specified organization paid toward this invoice. This
            parameter expresses its value in cents (100ths of one US Dollar).
          readOnly: true
        created:
          type: string
          format: date-time
          description: Date and time when MongoDB Cloud created this invoice. This
            parameter expresses its value in the ISO 8601 timestamp format in
            UTC.
          readOnly: true
        creditsCents:
          type: integer
          format: int64
          description: Sum that MongoDB credited the specified organization toward this
            invoice. This parameter expresses its value in cents (100ths of one
            US Dollar).
          readOnly: true
        endDate:
          type: string
          format: date-time
          description: Date and time when MongoDB Cloud finished the billing period that
            this invoice covers. This parameter expresses its value in the ISO
            8601 timestamp format in UTC.
          readOnly: true
        groupId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the project
            associated to this invoice. This identifying string doesn't appear
            on all invoices.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the invoice
            submitted to the specified organization. Charges typically post the
            next day.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        lineItems:
          type: array
          description: List that contains individual services included in this invoice.
          items:
            $ref: "#/components/schemas/InvoiceLineItem"
          readOnly: true
        linkedInvoices:
          type: array
          description: List that contains the invoices for organizations linked to the
            paying organization.
          items:
            $ref: "#/components/schemas/BillingInvoice"
          readOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        orgId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the organization
            charged for services consumed from MongoDB Cloud.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        payments:
          type: array
          description: List that contains funds transferred to MongoDB to cover the
            specified service noted in this invoice.
          items:
            $ref: "#/components/schemas/BillingPayment"
          readOnly: true
        refunds:
          type: array
          description: List that contains payments that MongoDB returned to the
            organization for this invoice.
          items:
            $ref: "#/components/schemas/BillingRefund"
          readOnly: true
        salesTaxCents:
          type: integer
          format: int64
          description: Sum of sales tax applied to this invoice. This parameter expresses
            its value in cents (100ths of one US Dollar).
          readOnly: true
        startDate:
          type: string
          format: date-time
          description: Date and time when MongoDB Cloud began the billing period that this
            invoice covers. This parameter expresses its value in the ISO 8601
            timestamp format in UTC.
          readOnly: true
        startingBalanceCents:
          type: integer
          format: int64
          description: Sum that the specified organization owed to MongoDB when MongoDB
            issued this invoice. This parameter expresses its value in US
            Dollars.
          readOnly: true
        statusName:
          type: string
          description: >
            Phase of payment processing in which this invoice exists when you
            made this request. Accepted phases include:


            | Phase Value | Reason |

            |---|---|

            | CLOSED | MongoDB finalized all charges in the billing cycle but has yet to charge the customer. |

            | FAILED | MongoDB attempted to charge the provided credit card but charge for that amount failed. |

            | FORGIVEN | Customer initiated payment which MongoDB later forgave. |

            | FREE | All charges totalled zero so the customer won't be charged. |

            | INVOICED | MongoDB handled these charges using elastic invoicing. |

            | PAID | MongoDB succeeded in charging the provided credit card. |

            | PENDING | Invoice includes charges for the current billing cycle. |

            | PREPAID | Customer has a pre-paid plan so they won't be charged. |
        subtotalCents:
          type: integer
          format: int64
          description: Sum of all positive invoice line items contained in this invoice.
            This parameter expresses its value in cents (100ths of one US
            Dollar).
          readOnly: true
        updated:
          type: string
          format: date-time
          description: Date and time when MongoDB Cloud last updated the value of this
            payment. This parameter expresses its value in the ISO 8601
            timestamp format in UTC.
          readOnly: true
    BillingPayment:
      type: object
      description: Funds transferred to MongoDB to cover the specified service in this
        invoice.
      properties:
        amountBilledCents:
          type: integer
          format: int64
          description: Sum of services that the specified organization consumed in the
            period covered in this invoice. This parameter expresses its value
            in cents (100ths of one US Dollar) and calculates its value as
            **subtotalCents** + **salesTaxCents** - **startingBalanceCents**.
          readOnly: true
        amountPaidCents:
          type: integer
          format: int64
          description: Sum that the specified organization paid toward the associated
            invoice. This parameter expresses its value in cents (100ths of one
            US Dollar).
          readOnly: true
        created:
          type: string
          format: date-time
          description: Date and time when the customer made this payment attempt. This
            parameter expresses its value in the ISO 8601 timestamp format in
            UTC.
          readOnly: true
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies this payment
            toward the associated invoice.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        salesTaxCents:
          type: integer
          format: int64
          description: Sum of sales tax applied to this invoice. This parameter expresses
            its value in cents (100ths of one US Dollar).
          readOnly: true
        statusName:
          type: string
          description: >
            Phase of payment processing for the associated invoice when you made
            this request.


            These phases include:


            | Phase Value | Reason |

            |---|---|

            | `CANCELLED` | Customer or MongoDB cancelled the payment. |

            | `ERROR` | Issue arose when attempting to complete payment. |

            | `FAILED` | MongoDB tried to charge the credit card without success. |

            | `FAILED_AUTHENTICATION` | Strong Customer Authentication has failed. Confirm that your payment method is authenticated. |

            | `FORGIVEN` | Customer initiated payment which MongoDB later forgave. |

            | `INVOICED` | MongoDB issued an invoice that included this line item. |

            | `NEW` | Customer provided a method of payment, but MongoDB hasn't tried to charge the credit card. |

            | `PAID` | Customer submitted a successful payment. |

            | `PARTIAL_PAID` | Customer paid for part of this line item. |
        subtotalCents:
          type: integer
          format: int64
          description: Sum of all positive invoice line items contained in this invoice.
            This parameter expresses its value in cents (100ths of one US
            Dollar).
          readOnly: true
        updated:
          type: string
          format: date-time
          description: Date and time when the customer made an update to this payment
            attempt. This parameter expresses its value in the ISO 8601
            timestamp format in UTC.
          readOnly: true
      title: Payment
    BillingRefund:
      type: object
      description: One payment that MongoDB returned to the organization for this invoice.
      properties:
        amountCents:
          type: integer
          format: int64
          description: Sum of the funds returned to the specified organization expressed
            in cents (100th of US Dollar).
          readOnly: true
        created:
          type: string
          format: date-time
          description: Date and time when MongoDB Cloud created this refund. This
            parameter expresses its value in the ISO 8601 timestamp format in
            UTC.
          readOnly: true
        paymentId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the payment that
            the organization had made.
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        reason:
          type: string
          description: Justification that MongoDB accepted to return funds to the
            organization.
          readOnly: true
      title: Refund
    CloudAccessRoleAssignment:
      type: object
      description: MongoDB Cloud user's roles and the corresponding organization or
        project to which that role applies. Each role can apply to one
        organization or one project but not both.
      properties:
        groupId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the project to
            which this role belongs. You can set a value for this parameter or
            **orgId** but not both in the same request.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
        orgId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the organization
            to which this role belongs. You can set a value for this parameter
            or **groupId** but not both in the same request.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
        roleName:
          type: string
          description: >+
            Human-readable label that identifies the collection of privileges
            that MongoDB Cloud grants a specific API key, MongoDB Cloud user, or
            MongoDB Cloud team. These roles include organization- and
            project-level roles.


            Organization Roles


            * ORG_OWNER

            * ORG_MEMBER

            * ORG_GROUP_CREATOR

            * ORG_BILLING_ADMIN

            * ORG_READ_ONLY


            Project Roles


            * GROUP_CLUSTER_MANAGER

            * GROUP_DATA_ACCESS_ADMIN

            * GROUP_DATA_ACCESS_READ_ONLY

            * GROUP_DATA_ACCESS_READ_WRITE

            * GROUP_OWNER

            * GROUP_READ_ONLY

            * GROUP_SEARCH_INDEX_EDITOR

            * GROUP_STREAM_PROCESSING_OWNER

      title: Role Assignment
    CloudAppUser:
      type: object
      properties:
        country:
          type: string
          description: Two alphabet characters that identifies MongoDB Cloud user's
            geographic location. This parameter uses the ISO 3166-1a2 code
            format.
          pattern: ^([A-Z]{2})$
        createdAt:
          type: string
          format: date-time
          description: Date and time when the current account is created. This value is in
            the ISO 8601 timestamp format in UTC.
          readOnly: true
        emailAddress:
          type: string
          format: email
          deprecated: true
          description: Email address that belongs to the MongoDB Cloud user.
          readOnly: true
        firstName:
          type: string
          description: First or given name that belongs to the MongoDB Cloud user.
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the MongoDB
            Cloud user.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        lastAuth:
          type: string
          format: date-time
          description: Date and time when the current account last authenticated. This
            value is in the ISO 8601 timestamp format in UTC.
          readOnly: true
        lastName:
          type: string
          description: Last name, family name, or surname that belongs to the MongoDB
            Cloud user.
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        mobileNumber:
          type: string
          description: Mobile phone number that belongs to the MongoDB Cloud user.
          pattern: (?:(?:\\+?1\\s*(?:[.-]\\s*)?)?(?:(\\s*([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9])\\s*)|([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9]))\\s*(?:[.-]\\s*)?)([2-9]1[02-9]|[2-9][02-9]1|[2-9][02-9]{2})\\s*(?:[.-]\\s*)?([0-9]{4})$
        password:
          type: string
          description: Password applied with the username to log in to MongoDB Cloud.
            MongoDB Cloud does not return this parameter except in response to
            creating a new MongoDB Cloud user. Only the MongoDB Cloud user can
            update their password after it has been set from the MongoDB Cloud
            console.
          minLength: 8
        roles:
          type: array
          description: List of objects that display the MongoDB Cloud user's roles and the
            corresponding organization or project to which that role applies. A
            role can apply to one organization or one project but not both.
          items:
            $ref: "#/components/schemas/CloudAccessRoleAssignment"
        teamIds:
          type: array
          description: List of unique 24-hexadecimal digit strings that identifies the
            teams to which this MongoDB Cloud user belongs.
          items:
            type: string
            description: Unique 24-hexadecimal digit string that identifies the team to
              which this MongoDB Cloud user belongs.
            example: 32b6e34b3d91647abb20e7b8
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
          readOnly: true
          uniqueItems: true
        username:
          type: string
          format: email
          description: Email address that represents the username of the MongoDB Cloud user.
      required:
        - country
        - emailAddress
        - firstName
        - lastName
        - mobileNumber
        - password
        - username
    CloudCluster:
      type: object
      description: Settings that describe the clusters in each project that the API
        key is authorized to view.
      properties:
        alertCount:
          type: integer
          format: int32
          description: Whole number that indicates the quantity of alerts open on the
            cluster.
          readOnly: true
        authEnabled:
          type: boolean
          description: Flag that indicates whether authentication is required to access
            the nodes in this cluster.
          readOnly: true
        availability:
          type: string
          description: Term that expresses how many nodes of the cluster can be accessed
            when MongoDB Cloud receives this request. This parameter returns
            `available` when all nodes are accessible, `warning` only when some
            nodes in the cluster can be accessed, `unavailable` when the cluster
            can't be accessed, or `dead` when the cluster has been deactivated.
          readOnly: true
        backupEnabled:
          type: boolean
          description: Flag that indicates whether the cluster can perform backups. If set
            to `true`, the cluster can perform backups. You must set this value
            to `true` for NVMe clusters. Backup uses Cloud Backups for dedicated
            clusters and Shared Cluster Backups for tenant clusters. If set to
            `false`, the cluster doesn't use MongoDB Cloud backups.
          readOnly: true
        clusterId:
          type: string
          description: Unique 24-hexadecimal character string that identifies the cluster.
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        dataSizeBytes:
          type: integer
          format: int64
          description: Total size of the data stored on each node in the cluster. The
            resource expresses this value in bytes.
          readOnly: true
        name:
          type: string
          description: Human-readable label that identifies the cluster.
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
          readOnly: true
        nodeCount:
          type: integer
          format: int32
          description: Whole number that indicates the quantity of nodes that comprise the
            cluster.
          readOnly: true
        sslEnabled:
          type: boolean
          description: Flag that indicates whether TLS authentication is required to
            access the nodes in this cluster.
          readOnly: true
        type:
          type: string
          description: Human-readable label that indicates the cluster type.
          readOnly: true
        versions:
          type: array
          description: List that contains the versions of MongoDB that each node in the
            cluster runs.
          items:
            type: string
          readOnly: true
          uniqueItems: true
      readOnly: true
    CloudDatabaseUser:
      type: object
      properties:
        awsIAMType:
          type: string
          default: NONE
          description: Human-readable label that indicates whether the new database user
            authenticates with the Amazon Web Services (AWS) Identity and Access
            Management (IAM) credentials associated with the user or the user's
            role.
        databaseName:
          type: string
          default: admin
          description: Database against which the database user authenticates. Database
            users must provide both a username and authentication database to
            log into MongoDB.
        deleteAfterDate:
          type: string
          format: date-time
          description: Date and time when MongoDB Cloud deletes the user. This parameter
            expresses its value in the ISO 8601 timestamp format in UTC and can
            include the time zone designation. You must specify a future date
            that falls within one week of making the Application Programming
            Interface (API) request.
        groupId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the project.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          writeOnly: true
        labels:
          type: array
          description: List that contains the key-value pairs for tagging and categorizing
            the MongoDB database user. The labels that you define do not appear
            in the console.
          items:
            $ref: "#/components/schemas/ComponentLabel"
        ldapAuthType:
          type: string
          default: NONE
          description: Part of the Lightweight Directory Access Protocol (LDAP) record
            that the database uses to authenticate this database user on the
            LDAP host.
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        oidcAuthType:
          type: string
          default: NONE
          description: Human-readable label that indicates whether the new database user
            authenticates with OIDC federated authentication. To create a
            federated authentication user, specify the value of IDP_GROUP for
            this field.
        password:
          type: string
          description: Alphanumeric string that authenticates this database user against
            the database specified in `databaseName`. To authenticate with
            SCRAM-SHA, you must specify this parameter. This parameter doesn't
            appear in this response.
          externalDocs:
            description: SCRAM-SHA
            url: https://docs.mongodb.com/manual/core/security-scram/
          minLength: 8
          writeOnly: true
        roles:
          type: array
          description: List that provides the pairings of one role with one applicable
            database.
          items:
            $ref: "#/components/schemas/DatabaseUserRole"
        scopes:
          type: array
          description: List that contains clusters, MongoDB Atlas Data Lakes, and MongoDB
            Atlas Streams Instances that this database user can access. If
            omitted, MongoDB Cloud grants the database user access to all the
            clusters, MongoDB Atlas Data Lakes, and MongoDB Atlas Streams
            Instances in the project.
          items:
            $ref: "#/components/schemas/UserScope"
        username:
          type: string
          description: >
            Human-readable label that represents the user that authenticates to
            MongoDB. The format of this label depends on the method of
            authentication:


            | Authentication Method | Parameter Needed | Parameter Value | username Format |

            |---|---|---|---|

            | AWS IAM | awsType | ROLE | <abbr title="Amazon Resource Name">ARN</abbr> |

            | AWS IAM | awsType | USER | <abbr title="Amazon Resource Name">ARN</abbr> |

            | x.509 | x509Type | CUSTOMER | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |

            | x.509 | x509Type | MANAGED | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |

            | LDAP | ldapAuthType | USER | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |

            | LDAP | ldapAuthType | GROUP | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |

            | OIDC | oidcAuthType | IDP_GROUP | Atlas OIDC IdP ID (found in federation settings), followed by a '/', followed by the IdP group name |

            | SCRAM-SHA | awsType, x509Type, ldapAuthType, oidcAuthType | NONE | Alphanumeric string |
          maxLength: 1024
        x509Type:
          type: string
          default: NONE
          description: >-
            X.509 method that MongoDB Cloud uses to authenticate the database
            user.


            - For application-managed X.509, specify `MANAGED`.

            - For self-managed X.509, specify `CUSTOMER`.


            Users created with the `CUSTOMER` method require a Common Name (CN) in the **username** parameter. You must create externally authenticated users on the `$external` database.
      required:
        - databaseName
        - groupId
        - username
    CloudProviderAccessAWSIAMRole:
      type: object
      allOf:
        - $ref: "#/components/schemas/CloudProviderAccessRole"
        - type: object
          properties:
            atlasAWSAccountArn:
              type: string
              description: Amazon Resource Name that identifies the Amazon Web Services (AWS)
                user account that MongoDB Cloud uses when it assumes the
                Identity and Access Management (IAM) role.
              example: arn:aws:iam::772401394250:role/my-test-aws-role
              maxLength: 2048
              minLength: 20
              readOnly: true
            atlasAssumedRoleExternalId:
              type: string
              format: uuid
              description: Unique external ID that MongoDB Cloud uses when it assumes the IAM
                role in your Amazon Web Services (AWS) account.
              readOnly: true
            authorizedDate:
              type: string
              format: date-time
              description: Date and time when someone authorized this role for the specified
                cloud service provider. This parameter expresses its value in
                the ISO 8601 timestamp format in UTC.
              readOnly: true
            createdDate:
              type: string
              format: date-time
              description: Date and time when someone created this role for the specified
                cloud service provider. This parameter expresses its value in
                the ISO 8601 timestamp format in UTC.
              readOnly: true
            featureUsages:
              type: array
              description: List that contains application features associated with this Amazon
                Web Services (AWS) Identity and Access Management (IAM) role.
              items:
                $ref: "#/components/schemas/CloudProviderAccessFeatureUsage"
              readOnly: true
            iamAssumedRoleArn:
              type: string
              description: Amazon Resource Name (ARN) that identifies the Amazon Web Services
                (AWS) Identity and Access Management (IAM) role that MongoDB
                Cloud assumes when it accesses resources in your AWS account.
              example: arn:aws:iam::123456789012:root
              maxLength: 2048
              minLength: 20
            roleId:
              type: string
              description: Unique 24-hexadecimal digit string that identifies the role.
              example: 32b6e34b3d91647abb20e7b8
              maxLength: 24
              minLength: 24
              pattern: ^([a-f0-9]{24})$
              readOnly: true
      description: Details that describe the features linked to the Amazon Web
        Services (AWS) Identity and Access Management (IAM) role.
      required:
        - providerName
      properties:
        atlasAWSAccountArn:
          type: string
          description: Amazon Resource Name that identifies the Amazon Web Services (AWS)
            user account that MongoDB Cloud uses when it assumes the Identity
            and Access Management (IAM) role.
          example: arn:aws:iam::772401394250:role/my-test-aws-role
          maxLength: 2048
          minLength: 20
          readOnly: true
        atlasAssumedRoleExternalId:
          type: string
          format: uuid
          description: Unique external ID that MongoDB Cloud uses when it assumes the IAM
            role in your Amazon Web Services (AWS) account.
          readOnly: true
        authorizedDate:
          type: string
          format: date-time
          description: Date and time when someone authorized this role for the specified
            cloud service provider. This parameter expresses its value in the
            ISO 8601 timestamp format in UTC.
          readOnly: true
        createdDate:
          type: string
          format: date-time
          description: Date and time when someone created this role for the specified
            cloud service provider. This parameter expresses its value in the
            ISO 8601 timestamp format in UTC.
          readOnly: true
        featureUsages:
          type: array
          description: List that contains application features associated with this Amazon
            Web Services (AWS) Identity and Access Management (IAM) role.
          items:
            $ref: "#/components/schemas/CloudProviderAccessFeatureUsage"
          readOnly: true
        iamAssumedRoleArn:
          type: string
          description: Amazon Resource Name (ARN) that identifies the Amazon Web Services
            (AWS) Identity and Access Management (IAM) role that MongoDB Cloud
            assumes when it accesses resources in your AWS account.
          example: arn:aws:iam::123456789012:root
          maxLength: 2048
          minLength: 20
        roleId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the role.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
    CloudProviderAccessFeatureUsage:
      type: object
      description: MongoDB Cloud features associated with this Amazon Web Services
        (AWS) Identity and Access Management (IAM) role.
      properties:
        featureType:
          type: string
          description: Human-readable label that describes one MongoDB Cloud feature
            linked to this Amazon Web Services (AWS) Identity and Access
            Management (IAM) role.
          readOnly: true
        featureId:
          $ref: "#/components/schemas/CloudProviderAccessFeatureUsagePushBasedLogExportFe\
            atureId"
    CloudProviderAccessFeatureUsagePushBasedLogExportFeatureId:
      type: object
      description: Identifying characteristics about the Amazon Web Services (AWS)
        Simple Storage Service (S3) export bucket linked to this AWS Identity
        and Access Management (IAM) role.
      properties:
        bucketName:
          type: string
          description: Name of the AWS S3 bucket to which your logs will be exported to.
          readOnly: true
        groupId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies your project.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
    CloudProviderAccessRole:
      type: object
      description: Cloud provider access role.
      properties:
        providerName:
          type: string
          description: Human-readable label that identifies the cloud provider of the role.
        atlasAWSAccountArn:
          type: string
          description: Amazon Resource Name that identifies the Amazon Web Services (AWS)
            user account that MongoDB Cloud uses when it assumes the Identity
            and Access Management (IAM) role.
          example: arn:aws:iam::772401394250:role/my-test-aws-role
          maxLength: 2048
          minLength: 20
          readOnly: true
        atlasAssumedRoleExternalId:
          type: string
          format: uuid
          description: Unique external ID that MongoDB Cloud uses when it assumes the IAM
            role in your Amazon Web Services (AWS) account.
          readOnly: true
        authorizedDate:
          type: string
          format: date-time
          description: Date and time when someone authorized this role for the specified
            cloud service provider. This parameter expresses its value in the
            ISO 8601 timestamp format in UTC.
          readOnly: true
        createdDate:
          type: string
          format: date-time
          description: >-
            Date and time when someone created this role for the specified cloud
            service provider. This parameter expresses its value in the ISO 8601
            timestamp format in UTC.


            Alternatively:

            Date and time when this Azure Service Principal was created. This parameter expresses its value in the ISO 8601 timestamp format in UTC.
          readOnly: true
        featureUsages:
          type: array
          description: >-
            List that contains application features associated with this Amazon
            Web Services (AWS) Identity and Access Management (IAM) role.


            Alternatively:

            List that contains application features associated with this Azure Service Principal.
          items:
            $ref: "#/components/schemas/CloudProviderAccessFeatureUsage"
          readOnly: true
        iamAssumedRoleArn:
          type: string
          description: Amazon Resource Name (ARN) that identifies the Amazon Web Services
            (AWS) Identity and Access Management (IAM) role that MongoDB Cloud
            assumes when it accesses resources in your AWS account.
          example: arn:aws:iam::123456789012:root
          maxLength: 2048
          minLength: 20
        roleId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the role.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        _id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the Azure
            Service Principal in Atlas.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        atlasAzureAppId:
          type: string
          description: Azure Active Directory Application ID of Atlas.
          maxLength: 36
          minLength: 32
          pattern: ^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$
        lastUpdatedDate:
          type: string
          format: date-time
          description: Date and time when this Azure Service Principal was last updated.
            This parameter expresses its value in the ISO 8601 timestamp format
            in UTC.
          readOnly: true
        servicePrincipalId:
          type: string
          description: UUID string that identifies the Azure Service Principal.
          maxLength: 36
          minLength: 32
          pattern: ^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$
        tenantId:
          type: string
          description: UUID String that identifies the Azure Active Directory Tenant ID.
          maxLength: 36
          minLength: 32
          pattern: ^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$
      required:
        - providerName
    CloudProviderAccessRoles:
      type: object
      properties:
        awsIamRoles:
          type: array
          description: List that contains the Amazon Web Services (AWS) IAM roles
            registered and authorized with MongoDB Cloud.
          items:
            $ref: "#/components/schemas/CloudProviderAccessAWSIAMRole"
    CloudProviderContainer:
      type: object
      description: Collection of settings that configures the network container for a
        virtual private connection on Amazon Web Services.
      properties:
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the network
            peering container.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        providerName:
          type: string
          description: Cloud service provider that serves the requested network peering
            containers.
        provisioned:
          type: boolean
          description: Flag that indicates whether MongoDB Cloud clusters exist in the
            specified network peering container.
          readOnly: true
        atlasCidrBlock:
          type: string
          description: >-
            IP addresses expressed in Classless Inter-Domain Routing (CIDR)
            notation that MongoDB Cloud uses for the network peering containers
            in your project. MongoDB Cloud assigns all of the project's clusters
            deployed to this cloud provider an IP address from this range.
            MongoDB Cloud locks this value if an M10 or greater cluster or a
            network peering connection exists in this project.


            These CIDR blocks must fall within the ranges reserved per RFC 1918. AWS and Azure further limit the block to between the `/24` and  `/21` ranges.


            To modify the CIDR block, the target project cannot have:


            - Any M10 or greater clusters

            - Any other VPC peering connections

             You can also create a new project and create a network peering connection to set the desired MongoDB Cloud network peering container CIDR block for that project. MongoDB Cloud limits the number of MongoDB nodes per network peering connection based on the CIDR block and the region selected for the project.

             **Example:** A project in an Amazon Web Services (AWS) region supporting three availability zones and an MongoDB CIDR network peering container block of limit of `/24` equals 27 three-node replica sets.

            Alternatively:

            IP addresses expressed in Classless Inter-Domain Routing (CIDR) notation that MongoDB Cloud uses for the network peering containers in your project. MongoDB Cloud assigns all of the project's clusters deployed to this cloud provider an IP address from this range. MongoDB Cloud locks this value if an M10 or greater cluster or a network peering connection exists in this project.


            These CIDR blocks must fall within the ranges reserved per RFC 1918. GCP further limits the block to a lower bound of the `/18` range.


            To modify the CIDR block, the target project cannot have:


            - Any M10 or greater clusters

            - Any other VPC peering connections

             You can also create a new project and create a network peering connection to set the desired MongoDB Cloud network peering container CIDR block for that project. MongoDB Cloud limits the number of MongoDB nodes per network peering connection based on the CIDR block and the region selected for the project.

             **Example:** A project in an Google Cloud (GCP) region supporting three availability zones and an MongoDB CIDR network peering container block of limit of `/24` equals 27 three-node replica sets.

            Alternatively:

            IP addresses expressed in Classless Inter-Domain Routing (CIDR) notation that MongoDB Cloud uses for the network peering containers in your project. MongoDB Cloud assigns all of the project's clusters deployed to this cloud provider an IP address from this range. MongoDB Cloud locks this value if an M10 or greater cluster or a network peering connection exists in this project.


            These CIDR blocks must fall within the ranges reserved per RFC 1918. AWS and Azure further limit the block to between the `/24` and  `/21` ranges.


            To modify the CIDR block, the target project cannot have:


            - Any M10 or greater clusters

            - Any other VPC peering connections

             You can also create a new project and create a network peering connection to set the desired MongoDB Cloud network peering container CIDR block for that project. MongoDB Cloud limits the number of MongoDB nodes per network peering connection based on the CIDR block and the region selected for the project.

             **Example:** A project in an Amazon Web Services (AWS) region supporting three availability zones and an MongoDB CIDR network peering container block of limit of `/24` equals 27 three-node replica sets.
          pattern: ^((([0-9]{1,3}\.){3}[0-9]{1,3})|(:{0,2}([0-9a-f]{1,4}:){0,7}[0-9a-f]{1,4}[:]{0,2}))((%2[fF]|/)[0-9]{1,3})+$
        azureSubscriptionId:
          type: string
          description: Unique string that identifies the Azure subscription in which the
            MongoDB Cloud VNet resides.
          example: 32b6e34b3d91647abb20e7b8
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        region:
          type: string
          description: Azure region to which MongoDB Cloud deployed this network peering
            container.
        vnetName:
          type: string
          description: Unique string that identifies the Azure VNet in which MongoDB Cloud
            clusters in this network peering container exist. The response
            returns **null** if no clusters exist in this network peering
            container.
          maxLength: 38
          minLength: 38
          pattern: ^([-\w._()])+$
          readOnly: true
        gcpProjectId:
          type: string
          description: Unique string that identifies the GCP project in which MongoDB
            Cloud clusters in this network peering container exist. The response
            returns **null** if no clusters exist in this network peering
            container.
          maxLength: 26
          minLength: 26
          pattern: ^p-[0-9a-z]{24}$
          readOnly: true
        networkName:
          type: string
          description: Human-readable label that identifies the network in which MongoDB
            Cloud clusters in this network peering container exist. MongoDB
            Cloud returns **null** if no clusters exist in this network peering
            container.
          maxLength: 36
          minLength: 36
          pattern: ^nt-[0-9a-f]{24}-[0-9a-z]{8}$
          readOnly: true
        regions:
          type: array
          description: List of GCP regions to which you want to deploy this MongoDB Cloud
            network peering container.  In this MongoDB Cloud project, you can
            deploy clusters only to the GCP regions in this list. To deploy
            MongoDB Cloud clusters to other GCP regions, create additional
            projects.
          items:
            type: string
            description: List of GCP regions to which you want to deploy this MongoDB Cloud
              network peering container.  In this MongoDB Cloud project, you can
              deploy clusters only to the GCP regions in this list. To deploy
              MongoDB Cloud clusters to other GCP regions, create additional
              projects.
        regionName:
          type: string
          description: Geographic area that Amazon Web Services (AWS) defines to which
            MongoDB Cloud deployed this network peering container.
        vpcId:
          type: string
          description: Unique string that identifies the MongoDB Cloud VPC on AWS.
          example: vpc-b555d3b0d9cb783b0
          minLength: 5
          pattern: ^vpc-[0-9a-f]{17}$
          readOnly: true
    CloudProviderEndpointServiceRequest:
      type: object
      properties:
        providerName:
          type: string
          description: Human-readable label that identifies the cloud service provider for
            which you want to create the private endpoint service.
          writeOnly: true
        region:
          type: string
          description: Cloud provider region in which you want to create the private
            endpoint service. Regions accepted as values differ for [Amazon Web
            Services](https://docs.atlas.mongodb.com/reference/amazon-aws/),
            [Google Cloud
            Platform](https://docs.atlas.mongodb.com/reference/google-gcp/), and
            [Microsoft
            Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
          writeOnly: true
      required:
        - providerName
        - region
    CloudProviderRegions:
      type: object
      properties:
        instanceSizes:
          type: array
          description: List of instances sizes that this cloud provider supports.
          items:
            $ref: "#/components/schemas/ClusterCloudProviderInstanceSize"
          readOnly: true
        provider:
          type: string
          description: Human-readable label that identifies the Cloud provider.
    CloudRegionConfig:
      type: object
      description: Cloud service provider on which MongoDB Cloud provisions the hosts.
      properties:
        electableSpecs:
          $ref: "#/components/schemas/HardwareSpec"
        priority:
          type: integer
          format: int32
          description: >-
            Precedence is given to this region when a primary election occurs.
            If your **regionConfigs** has only **readOnlySpecs**,
            **analyticsSpecs**, or both, set this value to `0`. If you have
            multiple **regionConfigs** objects (your cluster is multi-region or
            multi-cloud), they must have priorities in descending order. The
            highest priority is `7`.


            **Example:** If you have three regions, their priorities would be `7`, `6`, and `5` respectively. If you added two more regions for supporting electable nodes, the priorities of those regions would be `4` and `3` respectively.
          maximum: 7
          minimum: 0
        providerName:
          type: string
          description: Cloud service provider on which MongoDB Cloud provisions the hosts.
            Set dedicated clusters to `AWS`, `GCP`, `AZURE` or `TENANT`.
        regionName:
          type: string
          description: Physical location of your MongoDB cluster nodes. The region you
            choose can affect network latency for clients accessing your
            databases. The region name is only returned in the response for
            single-region clusters. When MongoDB Cloud deploys a dedicated
            cluster, it checks if a VPC or VPC connection exists for that
            provider and region. If not, MongoDB Cloud creates them as part of
            the deployment. It assigns the VPC a Classless Inter-Domain Routing
            (CIDR) block. To limit a new VPC peering connection to one Classless
            Inter-Domain Routing (CIDR) block and region, create the connection
            first. Deploy the cluster after the connection starts. GCP Clusters
            and Multi-region clusters require one VPC peering connection for
            each region. MongoDB nodes can use only the peering connection that
            resides in the same region as the nodes to communicate with the
            peered VPC.
        analyticsAutoScaling:
          $ref: "#/components/schemas/AdvancedAutoScalingSettings"
        analyticsSpecs:
          $ref: "#/components/schemas/DedicatedHardwareSpec"
        autoScaling:
          $ref: "#/components/schemas/AdvancedAutoScalingSettings"
        readOnlySpecs:
          $ref: "#/components/schemas/DedicatedHardwareSpec"
        backingProviderName:
          type: string
          description: Cloud service provider on which MongoDB Cloud provisioned the
            multi-tenant cluster. The resource returns this parameter when
            **providerName** is `TENANT` and **electableSpecs.instanceSize** is
            `M0`, `M2` or `M5`.
      title: Cloud Service Provider Settings for Multi-Cloud Clusters
    CloudSearchMetrics:
      type: object
      properties:
        groupId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the project.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        hardwareMetrics:
          type: array
          description: List that contains all host compute, memory, and storage
            utilization dedicated to Atlas Search when MongoDB Atlas received
            this request.
          items:
            $ref: "#/components/schemas/FTSMetric"
          readOnly: true
        indexMetrics:
          type: array
          description: List that contains all performance and utilization measurements
            that Atlas Search index performed by the time MongoDB Atlas received
            this request.
          items:
            $ref: "#/components/schemas/FTSMetric"
          readOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        processId:
          type: string
          description: Hostname and port that identifies the process.
          example: mongodb.example.com:27017
          pattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\.){1,10}[a-z]+)?(\:[0-9]{4,5})$
          readOnly: true
        statusMetrics:
          type: array
          description: List that contains all available Atlas Search status metrics when
            MongoDB Atlas received this request.
          items:
            $ref: "#/components/schemas/FTSMetric"
          readOnly: true
      required:
        - groupId
        - processId
    ClusterAutoScalingSettings:
      type: object
      description: Range of instance sizes to which your cluster can scale.
      externalDocs:
        description: Cluster Auto-Scaling
        url: https://docs.atlas.mongodb.com/cluster-autoscaling/
      properties:
        compute:
          $ref: "#/components/schemas/ClusterComputeAutoScaling"
        diskGBEnabled:
          type: boolean
          description: Flag that indicates whether someone enabled disk auto-scaling for
            this cluster.
      title: Automatic Cluster Scaling Settings
    ClusterCloudProviderInstanceSize:
      type: object
      properties:
        availableRegions:
          type: array
          description: List of regions that this cloud provider supports for this instance
            size.
          items:
            $ref: "#/components/schemas/AvailableCloudProviderRegion"
          readOnly: true
        name:
          type: string
          description: Human-readable label that identifies the instance size or cluster
            tier.
          readOnly: true
    ClusterComputeAutoScaling:
      type: object
      description: Collection of settings that configures how a cluster might scale
        its cluster tier and whether the cluster can scale down. Cluster tier
        auto-scaling is unavailable for clusters using Low CPU or NVME storage
        classes.
      properties:
        enabled:
          type: boolean
          description: Flag that indicates whether cluster tier auto-scaling is enabled.
            Set to `true` to enable cluster tier auto-scaling. If enabled, you
            must specify a value for
            **providerSettings.autoScaling.compute.maxInstanceSize** also. Set
            to `false` to disable cluster tier auto-scaling.
        scaleDownEnabled:
          type: boolean
          description: Flag that indicates whether the cluster tier can scale down. This
            is required if **autoScaling.compute.enabled** is `true`. If you
            enable this option, specify a value for
            **providerSettings.autoScaling.compute.minInstanceSize**.
    ClusterConnectionStrings:
      type: object
      description: Collection of Uniform Resource Locators that point to the MongoDB
        database.
      externalDocs:
        description: Connection string URI format.
        url: https://docs.mongodb.com/manual/reference/connection-string/
      properties:
        awsPrivateLink:
          type: object
          additionalProperties:
            type: string
            description: Private endpoint-aware connection strings that use AWS-hosted
              clusters with Amazon Web Services (AWS) PrivateLink. Each key
              identifies an Amazon Web Services (AWS) interface endpoint. Each
              value identifies the related `mongodb://` connection string that
              you use to connect to MongoDB Cloud through the interface endpoint
              that the key names.
            externalDocs:
              description: Network Peering Connection
              url: https://docs.atlas.mongodb.com/security-vpc-peering/#std-label-vpc-peering/
            readOnly: true
          description: Private endpoint-aware connection strings that use AWS-hosted
            clusters with Amazon Web Services (AWS) PrivateLink. Each key
            identifies an Amazon Web Services (AWS) interface endpoint. Each
            value identifies the related `mongodb://` connection string that you
            use to connect to MongoDB Cloud through the interface endpoint that
            the key names.
          externalDocs:
            description: Network Peering Connection
            url: https://docs.atlas.mongodb.com/security-vpc-peering/#std-label-vpc-peering/
          readOnly: true
        awsPrivateLinkSrv:
          type: object
          additionalProperties:
            type: string
            description: Private endpoint-aware connection strings that use AWS-hosted
              clusters with Amazon Web Services (AWS) PrivateLink. Each key
              identifies an Amazon Web Services (AWS) interface endpoint. Each
              value identifies the related `mongodb://` connection string that
              you use to connect to Atlas through the interface endpoint that
              the key names.
            externalDocs:
              description: Network Peering Connection
              url: https://docs.atlas.mongodb.com/security-vpc-peering/#std-label-vpc-peering/
            readOnly: true
          description: Private endpoint-aware connection strings that use AWS-hosted
            clusters with Amazon Web Services (AWS) PrivateLink. Each key
            identifies an Amazon Web Services (AWS) interface endpoint. Each
            value identifies the related `mongodb://` connection string that you
            use to connect to Atlas through the interface endpoint that the key
            names.
          externalDocs:
            description: Network Peering Connection
            url: https://docs.atlas.mongodb.com/security-vpc-peering/#std-label-vpc-peering/
          readOnly: true
        private:
          type: string
          description: Network peering connection strings for each interface Virtual
            Private Cloud (VPC) endpoint that you configured to connect to this
            cluster. This connection string uses the `mongodb+srv://` protocol.
            The resource returns this parameter once someone creates a network
            peering connection to this cluster. This protocol tells the
            application to look up the host seed list in the Domain Name System
            (DNS). This list synchronizes with the nodes in a cluster. If the
            connection string uses this Uniform Resource Identifier (URI)
            format, you don't need to append the seed list or change the URI if
            the nodes change. Use this URI format if your driver supports it. If
            it doesn't, use connectionStrings.private. For Amazon Web Services
            (AWS) clusters, this resource returns this parameter only if you
            enable custom DNS.
          externalDocs:
            description: Network Peering Connection
            url: https://docs.atlas.mongodb.com/security-vpc-peering/#std-label-vpc-peering/
          readOnly: true
        privateEndpoint:
          type: array
          description: List of private endpoint-aware connection strings that you can use
            to connect to this cluster through a private endpoint. This
            parameter returns only if you deployed a private endpoint to all
            regions to which you deployed this clusters' nodes.
          items:
            $ref: "#/components/schemas/ClusterDescriptionConnectionStringsPrivateEndpoint"
          readOnly: true
        privateSrv:
          type: string
          description: Network peering connection strings for each interface Virtual
            Private Cloud (VPC) endpoint that you configured to connect to this
            cluster. This connection string uses the `mongodb+srv://` protocol.
            The resource returns this parameter when someone creates a network
            peering connection to this cluster. This protocol tells the
            application to look up the host seed list in the Domain Name System
            (DNS). This list synchronizes with the nodes in a cluster. If the
            connection string uses this Uniform Resource Identifier (URI)
            format, you don't need to append the seed list or change the Uniform
            Resource Identifier (URI) if the nodes change. Use this Uniform
            Resource Identifier (URI) format if your driver supports it. If it
            doesn't, use `connectionStrings.private`. For Amazon Web Services
            (AWS) clusters, this parameter returns only if you [enable custom
            DNS](https://docs.atlas.mongodb.com/reference/api/aws-custom-dns-update/).
          externalDocs:
            description: Network Peering Connection
            url: https://docs.atlas.mongodb.com/security-vpc-peering/#std-label-vpc-peering/
          readOnly: true
        standard:
          type: string
          description: Public connection string that you can use to connect to this
            cluster. This connection string uses the `mongodb://` protocol.
          externalDocs:
            description: Connection String URI Format
            url: https://docs.mongodb.com/manual/reference/connection-string/
          readOnly: true
        standardSrv:
          type: string
          description: Public connection string that you can use to connect to this
            cluster. This connection string uses the `mongodb+srv://` protocol.
          externalDocs:
            description: Connection String URI Format
            url: https://docs.mongodb.com/manual/reference/connection-string/
          readOnly: true
      readOnly: true
      title: Cluster Connection Strings
    ClusterDescriptionConnectionStringsPrivateEndpoint:
      type: object
      description: Private endpoint-aware connection string that you can use to
        connect to this cluster through a private endpoint.
      externalDocs:
        description: Private Endpoint for Dedicated Cluster
        url: https://docs.atlas.mongodb.com/security-private-endpoint/
      properties:
        connectionString:
          type: string
          description: Private endpoint-aware connection string that uses the `mongodb://`
            protocol to connect to MongoDB Cloud through a private endpoint.
          readOnly: true
        endpoints:
          type: array
          description: List that contains the private endpoints through which you connect
            to MongoDB Cloud when you use
            **connectionStrings.privateEndpoint[n].connectionString** or
            **connectionStrings.privateEndpoint[n].srvConnectionString**.
          items:
            $ref: "#/components/schemas/ClusterDescriptionConnectionStringsPrivateEndpointE\
              ndpoint"
          readOnly: true
        srvConnectionString:
          type: string
          description: Private endpoint-aware connection string that uses the
            `mongodb+srv://` protocol to connect to MongoDB Cloud through a
            private endpoint. The `mongodb+srv` protocol tells the driver to
            look up the seed list of hosts in the Domain Name System (DNS). This
            list synchronizes with the nodes in a cluster. If the connection
            string uses this Uniform Resource Identifier (URI) format, you don't
            need to append the seed list or change the Uniform Resource
            Identifier (URI) if the nodes change. Use this Uniform Resource
            Identifier (URI) format if your application supports it. If it
            doesn't, use connectionStrings.privateEndpoint[n].connectionString.
          readOnly: true
        srvShardOptimizedConnectionString:
          type: string
          description: Private endpoint-aware connection string optimized for sharded
            clusters that uses the `mongodb+srv://` protocol to connect to
            MongoDB Cloud through a private endpoint. If the connection string
            uses this Uniform Resource Identifier (URI) format, you don't need
            to change the Uniform Resource Identifier (URI) if the nodes change.
            Use this Uniform Resource Identifier (URI) format if your
            application and Atlas cluster supports it. If it doesn't, use and
            consult the documentation for
            connectionStrings.privateEndpoint[n].srvConnectionString.
          readOnly: true
        type:
          type: string
          description: MongoDB process type to which your application connects. Use
            `MONGOD` for replica sets and `MONGOS` for sharded clusters.
          readOnly: true
      title: Cluster Private Endpoint Connection String
    ClusterDescriptionConnectionStringsPrivateEndpointEndpoint:
      type: object
      description: Details of a private endpoint deployed for this cluster.
      properties:
        endpointId:
          type: string
          description: Unique string that the cloud provider uses to identify the private
            endpoint.
          readOnly: true
        providerName:
          type: string
          description: Cloud provider in which MongoDB Cloud deploys the private endpoint.
          readOnly: true
        region:
          type: string
          description: Region where the private endpoint is deployed.
          readOnly: true
      title: Cluster Private Endpoint Connection Strings Endpoint
    ClusterDescriptionProcessArgs:
      type: object
      properties:
        chunkMigrationConcurrency:
          type: integer
          format: int32
          default: 1
          description: Number of threads on the source shard and the receiving shard for
            chunk migration. The number of threads should not exceed the half
            the total number of CPU cores in the sharded cluster.
          externalDocs:
            description: This option corresponds to the `chunkMigrationConcurrency` `mongod`
              configuration file option.
            url: https://www.mongodb.com/docs/manual/reference/parameters/#mongodb-parameter-param.chunkMigrationConcurrency
        defaultReadConcern:
          type: string
          default: available
          description: >-
            Default level of acknowledgment requested from MongoDB for read
            operations set for this cluster.


            MongoDB 4.4 clusters default to `available`. MongoDB 5.0 and later clusters default to `local`.
          externalDocs:
            description: This option corresponds to the global default read concern.
            url: https://docs.mongodb.com/manual/reference/read-concern/
        defaultWriteConcern:
          type: string
          default: "1"
          description: >-
            Default level of acknowledgment requested from MongoDB for write
            operations set for this cluster.


            MongoDB 4.4 clusters default to `1`. MongoDB 5.0 and later clusters default to `majority`.
          externalDocs:
            description: This option corresponds to the the implicit default write concern.
            url: https://docs.mongodb.com/manual/reference/write-concern/
        failIndexKeyTooLong:
          type: boolean
          default: true
          deprecated: true
          description: Flag that indicates whether you can insert or update documents
            where all indexed entries don't exceed 1024 bytes. If you set this
            to false,
            [mongod](https://docs.mongodb.com/upcoming/reference/program/mongod/#mongodb-binary-bin.mongod)
            writes documents that exceed this limit but doesn't index them. This
            parameter has been removed as of [MongoDB
            4.4](https://www.mongodb.com/docs/manual/reference/parameters/#mongodb-parameter-param.failIndexKeyTooLong).
          externalDocs:
            description: This option corresponds to the `failIndexKeyTooLong` `mongod`
              configuration file option.
            url: https://docs.mongodb.com/upcoming/reference/parameters/#mongodb-parameter-param.failIndexKeyTooLong
        javascriptEnabled:
          type: boolean
          default: true
          description: Flag that indicates whether the cluster allows execution of
            operations that perform server-side executions of JavaScript.
          externalDocs:
            description: If your cluster runs a MongoDB version less than 4.4, this option
              corresponds to modifying the `security.javascriptEnabled`
              configuration file option for each `mongod` in the cluster. If
              your cluster runs MongoDB version 4.4 or greater, this option
              corresponds to modifying the `security.javascriptEnabled`
              configuration file option for each `mongod` and `mongos` in the
              cluster.
            url: https://docs.mongodb.com/upcoming/reference/configuration-options/#mongodb-setting-security.javascriptEnabled
        minimumEnabledTlsProtocol:
          type: string
          description: Minimum Transport Layer Security (TLS) version that the cluster
            accepts for incoming connections. Clusters using TLS 1.0 or 1.1
            should consider setting TLS 1.2 as the minimum TLS protocol version.
          externalDocs:
            description: This option corresponds to the `net.ssl.disabledProtocols` `mongod`
              configuration file option.
            url: https://docs.mongodb.com/upcoming/reference/configuration-options/#mongodb-setting-net.ssl.disabledProtocols
        noTableScan:
          type: boolean
          default: false
          description: Flag that indicates whether the cluster disables executing any
            query that requires a collection scan to return results.
          externalDocs:
            description: This option corresponds to the `notablescan` `mongod` configuration
              file option.
            url: https://docs.mongodb.com/upcoming/reference/parameters/#mongodb-parameter-param.notablescan
        oplogMinRetentionHours:
          type: number
          format: double
          description: Minimum retention window for cluster's oplog expressed in hours. A
            value of null indicates that the cluster uses the default minimum
            oplog window that MongoDB Cloud calculates.
          externalDocs:
            description: This option corresponds to the `storage.oplogMinRetentionHours`
              `mongod` configuration file option.
            url: https://docs.mongodb.com/upcoming/reference/configuration-options/#mongodb-setting-storage.oplogMinRetentionHours
        oplogSizeMB:
          type: integer
          format: int32
          description: Storage limit of cluster's oplog expressed in megabytes. A value of
            null indicates that the cluster uses the default oplog size that
            MongoDB Cloud calculates.
          externalDocs:
            description: This option corresponds to the `replication.oplogSizeMB` `mongod`
              configuration file option.
            url: https://docs.mongodb.com/upcoming/reference/configuration-options/#mongodb-setting-replication.oplogSizeMB
        queryStatsLogVerbosity:
          type: integer
          format: int32
          default: 1
          description: May be set to 1 (disabled) or 3 (enabled). When set to 3, Atlas
            will include redacted and anonymized $queryStats output in MongoDB
            logs. $queryStats output does not contain literals or field values.
            Enabling this setting might impact the performance of your cluster.
          externalDocs:
            description: This option corresponds to the queryStats component for the
              logComponentVerbosity server parameter.
            url: https://www.mongodb.com/docs/manual/reference/parameters/#mongodb-parameter-param.logComponentVerbosity
        sampleRefreshIntervalBIConnector:
          type: integer
          format: int32
          default: 0
          description: Interval in seconds at which the mongosqld process re-samples data
            to create its relational schema.
          externalDocs:
            description: This option corresponds to the `sampleRefreshIntervalSecs`
              `mongosqld` option.
            url: https://docs.mongodb.com/bi-connector/current/reference/mongosqld/#std-option-mongosqld.--schemaRefreshIntervalSecs
          minimum: 0
        sampleSizeBIConnector:
          type: integer
          format: int32
          default: 1000
          description: Number of documents per database to sample when gathering schema
            information.
          externalDocs:
            description: This option corresponds to the `sampleSize` `mongosqld` option.
            url: https://docs.mongodb.com/bi-connector/current/reference/mongosqld/#std-option-mongosqld.--sampleSize
          minimum: 0
        transactionLifetimeLimitSeconds:
          type: integer
          format: int64
          default: 60
          description: Lifetime, in seconds, of multi-document transactions. Atlas
            considers the transactions that exceed this limit as expired and so
            aborts them through a periodic cleanup process.
          externalDocs:
            description: This option corresponds to the `transactionLifetimeLimitSeconds`
              `mongod` configuration file option.
            url: https://www.mongodb.com/docs/upcoming/reference/parameters/#mongodb-parameter-param.transactionLifetimeLimitSeconds
          minimum: 1
    ClusterFreeAutoScaling:
      type: object
      description: Range of instance sizes to which your cluster can scale.
      properties:
        compute:
          type: string
          description: Collection of settings that configures how a cluster might scale
            its cluster tier and whether the cluster can scale down.
          title: Tenant
    ClusterIPAddresses:
      type: object
      description: List of IP addresses in a cluster.
      properties:
        clusterName:
          type: string
          description: Human-readable label that identifies the cluster.
          readOnly: true
        inbound:
          type: array
          description: List of inbound IP addresses associated with the cluster. If your
            network allows outbound HTTP requests only to specific IP addresses,
            you must allow access to the following IP addresses so that your
            application can connect to your Atlas cluster.
          items:
            type: string
          readOnly: true
        outbound:
          type: array
          description: List of outbound IP addresses associated with the cluster. If your
            network allows inbound HTTP requests only from specific IP
            addresses, you must allow access from the following IP addresses so
            that your Atlas cluster can communicate with your webhooks and KMS.
          items:
            type: string
          readOnly: true
      title: Cluster IP Addresses
    ClusterOutageSimulation:
      type: object
      properties:
        clusterName:
          type: string
          description: Human-readable label that identifies the cluster that undergoes
            outage simulation.
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
          readOnly: true
        groupId:
          type: string
          description: Unique 24-hexadecimal character string that identifies the project
            that contains the cluster to undergo outage simulation.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        id:
          type: string
          description: Unique 24-hexadecimal character string that identifies the outage
            simulation.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        outageFilters:
          type: array
          description: List of settings that specify the type of cluster outage simulation.
          items:
            $ref: "#/components/schemas/AtlasClusterOutageSimulationOutageFilter"
          minItems: 1
        startRequestDate:
          type: string
          format: date-time
          description: Date and time when MongoDB Cloud started the regional outage
            simulation.
          example: 2022-01-01T00:00:00Z
          readOnly: true
        state:
          type: string
          description: >-
            Phase of the outage simulation.


            | State       | Indication |

            |-------------|------------|

            | `START_REQUESTED`    | User has requested cluster outage simulation.|

            | `STARTING`           | MongoDB Cloud is starting cluster outage simulation.|

            | `SIMULATING`         | MongoDB Cloud is simulating cluster outage.|

            | `RECOVERY_REQUESTED` | User has requested recovery from the simulated outage.|

            | `RECOVERING`         | MongoDB Cloud is recovering the cluster from the simulated outage.|

            | `COMPLETE`           | MongoDB Cloud has completed the cluster outage simulation.|
          readOnly: true
    ClusterProviderSettings:
      type: object
      description: Group of cloud provider settings that configure the provisioned
        MongoDB hosts.
      properties:
        providerName:
          type: string
        autoScaling:
          $ref: "#/components/schemas/ClusterFreeAutoScaling"
        diskIOPS:
          type: integer
          format: int32
          description: Maximum Disk Input/Output Operations per Second (IOPS) that the
            database host can perform.
        encryptEBSVolume:
          type: boolean
          default: true
          deprecated: true
          description: Flag that indicates whether the Amazon Elastic Block Store (EBS)
            encryption feature encrypts the host's root volume for both data at
            rest within the volume and for data moving between the volume and
            the cluster. Clusters always have this setting enabled.
        instanceSizeName:
          type: string
          description: >-
            Cluster tier, with a default storage and memory capacity, that
            applies to all the data-bearing hosts in your cluster.


            Alternatively:

            Cluster tier, with a default storage and memory capacity, that applies to all the data-bearing hosts in your cluster. You must set **providerSettings.providerName** to `TENANT` and specify the cloud service provider in **providerSettings.backingProviderName**.
          title: Tenant Instance Sizes
        regionName:
          type: string
          description: >-
            Physical location where MongoDB Cloud deploys your AWS-hosted
            MongoDB cluster nodes. The region you choose can affect network
            latency for clients accessing your databases. When MongoDB Cloud
            deploys a dedicated cluster, it checks if a VPC or VPC connection
            exists for that provider and region. If not, MongoDB Cloud creates
            them as part of the deployment. MongoDB Cloud assigns the VPC a CIDR
            block. To limit a new VPC peering connection to one CIDR block and
            region, create the connection first. Deploy the cluster after the
            connection starts.


            Alternatively:

            Microsoft Azure Regions.


            Alternatively:

            Google Compute Regions.


            Alternatively:

            Human-readable label that identifies the geographic location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases. For a complete list of region names, see [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/#std-label-amazon-aws), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), and [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/). For multi-region clusters, see **replicationSpec.{region}**.
        volumeType:
          type: string
          description: Disk Input/Output Operations per Second (IOPS) setting for Amazon
            Web Services (AWS) storage that you configure only for abbr
            title="Amazon Web Services">AWS</abbr>. Specify whether Disk
            Input/Output Operations per Second (IOPS) must not exceed the
            default Input/Output Operations per Second (IOPS) rate for the
            selected volume size (`STANDARD`), or must fall within the allowable
            Input/Output Operations per Second (IOPS) range for the selected
            volume size (`PROVISIONED`). You must set this value to
            (`PROVISIONED`) for NVMe clusters.
        diskTypeName:
          type: string
          description: Disk type that corresponds to the host's root volume for Azure
            instances. If omitted, the default disk type for the selected
            **providerSettings.instanceSizeName** applies.
          externalDocs:
            description: Disk type
            url: https://docs.microsoft.com/en-us/azure/virtual-machines/premium-storage-performance#premium-storage-disk-sizes
        backingProviderName:
          type: string
          description: Cloud service provider on which MongoDB Cloud provisioned the
            multi-tenant host. The resource returns this parameter when
            **providerSettings.providerName** is `TENANT` and
            **providerSetting.instanceSizeName** is `M0`, `M2` or `M5`.
      required:
        - providerName
      title: Cloud Service Provider Settings for a Cluster
    ClusterSearchIndex:
      type: object
      properties:
        collectionName:
          type: string
          description: Human-readable label that identifies the collection that contains
            one or more Atlas Search indexes.
        database:
          type: string
          description: Human-readable label that identifies the database that contains the
            collection with one or more Atlas Search indexes.
        indexID:
          type: string
          description: Unique 24-hexadecimal digit string that identifies this Atlas
            Search index.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        name:
          type: string
          description: Human-readable label that identifies this index. Within each
            namespace, names of all indexes in the namespace must be unique.
        status:
          type: string
          description: >
            Condition of the search index when you made this request.


            | Status | Index Condition |
             |---|---|
             | IN_PROGRESS | Atlas is building or re-building the index after an edit. |
             | STEADY | You can use this search index. |
             | FAILED | Atlas could not build the index. |
             | MIGRATING | Atlas is upgrading the underlying cluster tier and migrating indexes. |
             | PAUSED | The cluster is paused. |
          readOnly: true
        type:
          type: string
          description: Type of the index. Default type is search.
        analyzer:
          type: string
          default: lucene.standard
          description: >-
            Specific pre-defined method chosen to convert database field text
            into searchable words. This conversion reduces the text of fields
            into the smallest units of text. These units are called a **term**
            or **token**. This process, known as tokenization, involves a
            variety of changes made to the text in fields:


            - extracting words

            - removing punctuation

            - removing accents

            - changing to lowercase

            - removing common words

            - reducing words to their root form (stemming)

            - changing words to their base form (lemmatization)
             MongoDB Cloud uses the selected process to build the Atlas Search index.
          externalDocs:
            description: Atlas Search Analyzers
            url: https://docs.atlas.mongodb.com/atlas-search/analyzers/
        analyzers:
          type: array
          description: List of user-defined methods to convert database field text into
            searchable words.
          externalDocs:
            description: Custom Atlas Search Analyzers
            url: https://docs.atlas.mongodb.com/atlas-search/analyzers/custom/
          items:
            $ref: "#/components/schemas/ApiAtlasFTSAnalyzers"
        mappings:
          $ref: "#/components/schemas/ApiAtlasFTSMappings"
        searchAnalyzer:
          type: string
          default: lucene.standard
          description: Method applied to identify words when searching this index.
        storedSource:
          type: object
          description: Flag that indicates whether to store all fields (true) on Atlas
            Search. By default, Atlas doesn't store (false) the fields on Atlas
            Search.  Alternatively, you can specify an object that only contains
            the list of fields to store (include) or not store (exclude) on
            Atlas Search. To learn more, see documentation.
          example:
            include | exclude:
              - field1
              - field2
          externalDocs:
            description: Stored Source Fields
            url: https://dochub.mongodb.org/core/atlas-search-stored-source
        synonyms:
          type: array
          description: Rule sets that map words to their synonyms in this index.
          externalDocs:
            description: Synonym Mapping
            url: https://docs.atlas.mongodb.com/atlas-search/synonyms/
          items:
            $ref: "#/components/schemas/SearchSynonymMappingDefinition"
        fields:
          type: array
          description: Settings that configure the fields, one per object, to index. You
            must define at least one "vector" type field. You can optionally
            define "filter" type fields also.
          externalDocs:
            description: Vector Search Fields
            url: https://dochub.mongodb.org/core/avs-vector-type
          items:
            $ref: "#/components/schemas/BasicDBObject"
      required:
        - collectionName
        - database
        - name
    ClusterServerlessBackupOptions:
      type: object
      description: Group of settings that configure serverless backup.
      properties:
        serverlessContinuousBackupEnabled:
          type: boolean
          default: true
          description: >-
            Flag that indicates whether the serverless instance uses
            **Serverless Continuous Backup**.
             If this parameter is `false`, the serverless instance uses **Basic Backup**.

             | Option | Description |
             |---|---|
             | Serverless Continuous Backup | Atlas takes incremental [snapshots](https://www.mongodb.com/docs/atlas/backup/cloud-backup/overview/#std-label-serverless-snapshots) of the data in your serverless instance every six hours and lets you restore the data from a selected point in time within the last 72 hours. Atlas also takes daily snapshots and retains these daily snapshots for 35 days. To learn more, see [Serverless Instance Costs](https://www.mongodb.com/docs/atlas/billing/serverless-instance-costs/#std-label-serverless-instance-costs). |
             | Basic Backup | Atlas takes incremental [snapshots](https://www.mongodb.com/docs/atlas/backup/cloud-backup/overview/#std-label-serverless-snapshots) of the data in your serverless instance every six hours and retains only the two most recent snapshots. You can use this option for free. |
      title: Serverless Backup Options
    ClusterStatus:
      type: object
      properties:
        changeStatus:
          type: string
          description: State of cluster at the time of this request. Atlas returns
            **Applied** if it completed adding a user to, or removing a user
            from, your cluster. Atlas returns **Pending** if it's still making
            the requested user changes. When status is **Pending**, new users
            can't log in.
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
    Collation:
      type: object
      description: One or more settings that specify language-specific rules to
        compare strings within this index.
      externalDocs:
        description: Collation Options
        url: https://docs.mongodb.com/manual/reference/method/db.collection.createIndex/#options
      properties:
        alternate:
          type: string
          default: non-ignorable
          description: >
            Method to handle whitespace and punctuation as base characters for
            purposes of comparison.


            | Value | Evaluate Whitespace and Punctuation as Base Characters |

            |---|---|

            | `"non-ignorable"` | Yes |

            | `"shifted"` | No. MongoDB Cloud distinguishes these characters when `"strength" > 3`. |
        backwards:
          type: boolean
          default: false
          description: >
            Flag that indicates whether strings with diacritics sort from back
            of the string. Some French dictionary orders strings in this way.


            | Value | String Comparison Method |
             |---|---|
            | `true` | Compare from back to front. |

            | `false` | Compare from front to back. |
        caseFirst:
          type: string
          default: off
          description: >
            Method to handle sort order of case differences during tertiary
            level comparisons.


            | Value | Sort Order Method |
             |---|---|
             | `"upper"` | Uppercase sorts before lowercase. |
             | `"lower"` | Lowercase sorts before uppercase. |
             | `"off"` | Similar to "lower" with slight differences. |
        caseLevel:
          type: boolean
          default: false
          description: >
            Flag that indicates whether to include case comparison when
            `"strength" : 1` or `"strength" : 2`.


            | Value | Compare case at level 1 or 2? | Strength Level | Comparisons Include |
             |---|---|---|---|
             | true | Yes | 1 | Base characters and case. |
             |  |  | 2 | Base characters, diacritics (and possible other secondary differences),   and case. |
             | false | No |  |  |
        locale:
          type: string
          description: 'International Components for Unicode (ICU) code that represents a
            localized language. To specify simple binary comparison, set
            `"locale" : "simple"`.'
        maxVariable:
          type: string
          description: >
            Field that indicates which characters can be ignored when
            `"alternate" : "shifted"`. This has no affect if `"alternate" :
            "non-ignorable"`.


            | Value | Ignore |
             |---|---|
            | `"punct"` | Both whitespace and punctuation |

            | `"space"` | Whitespace |
        normalization:
          type: boolean
          default: false
          description: >
            Flag that indicates whether to check if the text requires
            normalization and then perform it. Most text doesn't require this
            normalization processing.


            | Value | Normalization Method |
             |---|---|
            | `true` | Yes, check if fully normalized and perform normalization to compare text. |

            | `false` | No, don't check. |
        numericOrdering:
          type: boolean
          default: false
          description: >
            Flag that indicates whether to compare sequences of digits as
            numbers or as strings.


            | Value | Comparison Method |
             |---|---|
            | `true` | Compare as numbers. This results in `10 > 2`. |

            | `false` | Compare as strings. This results in `"10" < "2"`. |
        strength:
          type: integer
          format: int32
          default: 3
          description: >
            Degree of comparison to perform when sorting words. MongoDB Cloud
            accepts the following values:


            | Value | Comparison Level | Comparison Method |

            |---|---|---|

            | 1 | Primary | Compares the base characters only, ignoring other differences such as diacritics and case. |

            | 2 | Secondary | Compares base characters (primary) and diacritics (secondary). Primary differences take precedence over secondary differences. |

            | 3 | Tertiary | Compares base characters (primary), diacritics (secondary), and case and variants (tertiary). Differences between base characters takes precedence over secondary differences which take precedence over tertiary differences. |

            | 4 | Quaternary | Compares for the specific use case to consider punctuation when levels 1 through 3 ignore punctuation or for processing Japanese text. |

            | 5 | Identical | Compares for the specific use case of tie breaker. |
          maximum: 5
          minimum: 1
      required:
        - locale
      writeOnly: true
    ComponentLabel:
      type: object
      description: Human-readable labels applied to this MongoDB Cloud component.
      properties:
        key:
          type: string
          description: Key applied to tag and categorize this component.
          maxLength: 255
          minLength: 1
        value:
          type: string
          description: Value set to the Key applied to tag and categorize this component.
          maxLength: 255
          minLength: 1
      title: Component Label
    ConnectedOrgConfig:
      type: object
      properties:
        dataAccessIdentityProviderIds:
          type: array
          description: The collection of unique ids representing the identity providers
            that can be used for data access in this organization.
          items:
            type: string
            description: Unique 24-hexadecimal digit string that represents the id of the
              identity providers that can be used for data access in this
              organization.
            example: 32b6e34b3d91647abb20e7b8
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
          uniqueItems: true
        domainAllowList:
          type: array
          description: Approved domains that restrict users who can join the organization
            based on their email address.
          items:
            type: string
          uniqueItems: true
        domainRestrictionEnabled:
          type: boolean
          description: Value that indicates whether domain restriction is enabled for this
            connected org.
        identityProviderId:
          type: string
          description: Unique 20-hexadecimal digit string that identifies the UI access
            identity provider that this connected org config is associated with.
          maxLength: 20
          minLength: 20
          pattern: ^([a-f0-9]{20})$
        orgId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the connected
            organization configuration.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        postAuthRoleGrants:
          type: array
          description: Atlas roles that are granted to a user in this organization after
            authenticating. Roles are a human-readable label that identifies the
            collection of privileges that MongoDB Cloud grants a specific
            MongoDB Cloud user. These roles can only be organization specific
            roles.
          items:
            type: string
          uniqueItems: true
        roleMappings:
          type: array
          description: Role mappings that are configured in this organization.
          items:
            $ref: "#/components/schemas/AuthFederationRoleMapping"
          uniqueItems: true
        userConflicts:
          type: array
          description: List that contains the users who have an email address that doesn't
            match any domain on the allowed list.
          items:
            $ref: "#/components/schemas/FederatedUser"
      required:
        - domainRestrictionEnabled
        - identityProviderId
        - orgId
    ControlPlaneIPAddresses:
      type: object
      description: List of IP addresses in the Atlas control plane.
      properties:
        inbound:
          $ref: "#/components/schemas/InboundControlPlaneCloudProviderIPAddresses"
        outbound:
          $ref: "#/components/schemas/OutboundControlPlaneCloudProviderIPAddresses"
      title: Control Plane IP Addresses
    CostExplorerFilterRequestBody:
      type: object
      description: Request body for a cost explorer query.
      properties:
        clusters:
          type: array
          description: The list of projects to be included in the Cost Explorer Query.
          example:
            - 5feeac500000000000000000
            - 61cfdfd00000000000000000
          items:
            type: string
        endDate:
          type: string
          format: date
          description: The exclusive ending date for the Cost Explorer query. The date
            must be the start of a month.
          example: 2022-02-01
        groupBy:
          type: string
          description: The dimension to group the returned usage results by. At least one
            filter value needs to be provided for a dimension to be used.
        includePartialMatches:
          type: boolean
          description: Flag to control whether usage that matches the filter criteria, but
            does not have values for all filter criteria is included in
            response. Default is false, which excludes the partially matching
            data.
        organizations:
          type: array
          description: The list of organizations to be included in the Cost Explorer Query.
          example:
            - 5feeac500000000000000000
            - 61cfdfd00000000000000000
          items:
            type: string
        projects:
          type: array
          description: The list of projects to be included in the Cost Explorer Query.
          example:
            - 5feeac500000000000000000
            - 61cfdfd00000000000000000
          items:
            type: string
        services:
          type: array
          description: The list of projects to be included in the Cost Explorer Query.
          example:
            - Data Transfer
            - Atlas Data Federation
          items:
            type: string
        startDate:
          type: string
          format: date
          description: The inclusive starting date for the Cost Explorer query. The date
            must be the start of a month.
          example: 2022-02-01
      required:
        - endDate
        - startDate
    CostExplorerQueryResult:
      type: object
    CreateAtlasOrganizationApiKey:
      type: object
      description: Details of the programmatic API key to be created.
      properties:
        desc:
          type: string
          description: Purpose or explanation provided when someone created this
            organization API key.
          maxLength: 250
          minLength: 1
        roles:
          type: array
          description: List of roles to grant this API key. If you provide this list,
            provide a minimum of one role and ensure each role applies to this
            organization.
          items:
            type: string
          minItems: 1
      required:
        - desc
        - roles
    CreateAtlasProjectApiKey:
      type: object
      properties:
        desc:
          type: string
          description: Purpose or explanation provided when someone created this project
            API key.
          maxLength: 250
          minLength: 1
        roles:
          type: array
          description: List of roles to grant this API key. If you provide this list,
            provide a minimum of one role and ensure each role applies to this
            project.
          items:
            type: string
          minItems: 1
      required:
        - desc
        - roles
    CreateEndpointRequest:
      type: object
      properties:
        id:
          type: string
          description: Unique string that identifies the private endpoint's network
            interface that someone added to this private endpoint service.
          example: /subscriptions/cba6d9c6-1d3f-3c11-03cb-c705d895e636/resourcegroups/qrRTqi4TSN)7yB5YLRjVDveH3.yLzpNR7Br0D3-SGrU3j0.0/providers/Microsoft.Network/privateEndpoints/pVP(vb(XeckpxtXzP0NaOsDjeWDbOK)DX8A2j2E_vBYL2.GEYIdln
          writeOnly: true
        privateEndpointIPAddress:
          type: string
          description: IPv4 address of the private endpoint in your Azure VNet that
            someone added to this private endpoint service.
          pattern: ^((25[0-5]|(2[0-4]|1\d|[1-9]|)\d)(\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$
        endpointGroupName:
          type: string
          description: Human-readable label that identifies a set of endpoints.
          writeOnly: true
        endpoints:
          type: array
          description: List of individual private endpoints that comprise this endpoint
            group.
          externalDocs:
            description: Google Cloud Forwarding Rule Concepts
            url: https://cloud.google.com/load-balancing/docs/forwarding-rule-concepts
          items:
            $ref: "#/components/schemas/CreateGCPForwardingRuleRequest"
        gcpProjectId:
          type: string
          description: Unique string that identifies the Google Cloud project in which you
            created the endpoints.
          example: p-fdeeb3e43b8e733e5ab627b1
          externalDocs:
            description: Google Cloud Creating and Managing Projects
            url: https://cloud.google.com/resource-manager/docs/creating-managing-projects
          pattern: ^p-[0-9a-z]{24}$
          writeOnly: true
    CreateGCPForwardingRuleRequest:
      type: object
      properties:
        endpointName:
          type: string
          description: Human-readable label that identifies the Google Cloud consumer
            forwarding rule that you created.
          externalDocs:
            description: Google Cloud Forwarding Rule Concepts
            url: https://cloud.google.com/load-balancing/docs/forwarding-rule-concepts
          writeOnly: true
        ipAddress:
          type: string
          description: One Private Internet Protocol version 4 (IPv4) address to which
            this Google Cloud consumer forwarding rule resolves.
          pattern: ^((25[0-5]|(2[0-4]|1\d|[1-9]|)\d)(\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$
          writeOnly: true
      title: GCP Forwarding Rules
    CreateOrganizationRequest:
      type: object
      properties:
        apiKey:
          $ref: "#/components/schemas/CreateAtlasOrganizationApiKey"
        federationSettingsId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the federation
            to link the newly created organization to. If specified, the
            proposed Organization Owner of the new organization must have the
            Organization Owner role in an organization associated with the
            federation.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
        name:
          type: string
          description: Human-readable label that identifies the organization.
          maxLength: 64
          minLength: 1
          pattern: ^[\p{L}\p{N}\-_.(),:&@+']{1,64}$
        orgOwnerId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the MongoDB
            Cloud user that you want to assign the Organization Owner role. This
            user must be a member of the same organization as the calling API
            key. If you provide `federationSettingsId`,  this user must instead
            have the Organization Owner role on an organization in the specified
            federation. This parameter is required only when you authenticate
            with Programmatic API Keys.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
      required:
        - name
    CreateOrganizationResponse:
      type: object
      properties:
        apiKey:
          $ref: "#/components/schemas/ApiKeyUserDetails"
        federationSettingsId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the federation
            that you linked the newly created organization to.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        orgOwnerId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the MongoDB
            Cloud user that you assigned the Organization Owner role in the new
            organization.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        organization:
          $ref: "#/components/schemas/AtlasOrganization"
    CustomZoneMappings:
      type: object
      properties:
        customZoneMappings:
          type: array
          description: >-
            List that contains comma-separated key value pairs to map zones to
            geographic regions. These pairs map an ISO 3166-1a2 location code,
            with an ISO 3166-2 subdivision code when possible, to the
            human-readable label for the desired custom zone. MongoDB Cloud maps
            the ISO 3166-1a2 code to the nearest geographical zone by default.
            Include this parameter to override the default mappings.


            This parameter returns an empty object if no custom zones exist.
          items:
            $ref: "#/components/schemas/ZoneMapping"
    DBRoleToExecute:
      type: object
      description: The name of a Built in or Custom DB Role to connect to an Atlas Cluster.
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        role:
          type: string
          description: The name of the role to use. Can be a built in role or a custom role.
        type:
          type: string
          description: Type of the DB role. Can be either BuiltIn or Custom.
          title: DB Role Type
    DBUserTLSX509Settings:
      type: object
      description: Settings to configure TLS Certificates for database users.
      properties:
        cas:
          type: string
          description: Concatenated list of customer certificate authority (CA)
            certificates needed to authenticate database users. MongoDB Cloud
            expects this as a PEM-formatted certificate.
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
      title: Database User TLS Certificate Settings
    DataFederationLimit:
      type: object
      description: Details of user managed limits.
      properties:
        currentUsage:
          type: integer
          format: int64
          description: Amount that indicates the current usage of the limit.
          readOnly: true
        defaultLimit:
          type: integer
          format: int64
          description: Default value of the limit.
          readOnly: true
        maximumLimit:
          type: integer
          format: int64
          description: Maximum value of the limit.
          readOnly: true
        name:
          type: string
          description: Human-readable label that identifies the user-managed limit to
            modify.
          readOnly: true
        value:
          type: integer
          format: int64
          description: Amount to set the limit to.
        lastModifiedDate:
          type: string
          format: date-time
          description: Only used for Data Federation limits. Timestamp that indicates when
            this usage limit was last modified. This field uses the ISO 8601
            timestamp format in UTC.
          readOnly: true
        overrunPolicy:
          type: string
          description: Only used for Data Federation limits. Action to take when the usage
            limit is exceeded. If limit span is set to QUERY, this is ignored
            because MongoDB Cloud stops the query when it exceeds the usage
            limit.
      required:
        - name
        - value
      title: Limits
    DataFederationTenantQueryLimit:
      type: object
      description: Details of a tenant-level query limit for Data Federation. Query
        limit is the limit on the amount of usage during a time period based on
        cost.
      properties:
        currentUsage:
          type: integer
          format: int64
          description: Amount that indicates the current usage of the limit.
          readOnly: true
        defaultLimit:
          type: integer
          format: int64
          description: Default value of the limit.
          readOnly: true
        lastModifiedDate:
          type: string
          format: date-time
          description: Only used for Data Federation limits. Timestamp that indicates when
            this usage limit was last modified. This field uses the ISO 8601
            timestamp format in UTC.
          readOnly: true
        maximumLimit:
          type: integer
          format: int64
          description: Maximum value of the limit.
          readOnly: true
        name:
          type: string
          description: Human-readable label that identifies the user-managed limit to
            modify.
          readOnly: true
        overrunPolicy:
          type: string
          description: Only used for Data Federation limits. Action to take when the usage
            limit is exceeded. If limit span is set to QUERY, this is ignored
            because MongoDB Cloud stops the query when it exceeds the usage
            limit.
        tenantName:
          type: string
          description: Human-readable label that identifies the Federated Database
            Instance. If specified, the usage limit is for the specified
            federated database instance only. If omitted, the usage limit is for
            all federated database instances in the project.
          readOnly: true
        value:
          type: integer
          format: int64
          description: Amount to set the limit to.
      required:
        - name
        - value
      title: Data Federation Tenant-Level Query Limit
    DataLakeAWSCloudProviderConfig:
      type: object
      description: Name of the cloud service that hosts the data lake's data stores.
      properties:
        externalId:
          type: string
          description: Unique identifier associated with the Identity and Access
            Management (IAM) role that the data lake assumes when accessing the
            data stores.
          readOnly: true
        iamAssumedRoleARN:
          type: string
          description: Amazon Resource Name (ARN) of the Identity and Access Management
            (IAM) role that the data lake assumes when accessing data stores.
          example: arn:aws:iam::123456789012:root
          maxLength: 2048
          minLength: 20
          readOnly: true
        iamUserARN:
          type: string
          description: Amazon Resource Name (ARN) of the user that the data lake assumes
            when accessing data stores.
          readOnly: true
        roleId:
          type: string
          description: Unique identifier of the role that the data lake can use to access
            the data stores.Required if specifying cloudProviderConfig.
        testS3Bucket:
          type: string
          description: Name of the S3 data bucket that the provided role ID is authorized
            to access.Required if specifying cloudProviderConfig.
          writeOnly: true
      required:
        - roleId
        - testS3Bucket
    DataLakeApiBase:
      type: object
      description: An aggregation pipeline that applies to the collection.
      properties:
        name:
          type: string
          description: Human-readable label that identifies the view, which corresponds to
            an aggregation pipeline on a collection.
        pipeline:
          type: string
          description: Aggregation pipeline stages to apply to the source collection.
          externalDocs:
            description: Aggregation Pipelines
            url: https://docs.mongodb.com/manual/core/aggregation-pipeline/
        source:
          type: string
          description: Human-readable label that identifies the source collection for the
            view.
    DataLakeAtlasStoreReadConcern:
      type: object
      description: MongoDB Cloud cluster read concern, which determines the
        consistency and isolation properties of the data read from an Atlas
        cluster.
      properties:
        level:
          type: string
          description: Read Concern level that specifies the consistency and availability
            of the data read.
          externalDocs:
            description: Read Concern Level
            url: https://www.mongodb.com/docs/manual/reference/read-concern/#read-concern-levels
    DataLakeAtlasStoreReadPreference:
      type: object
      description: MongoDB Cloud cluster read preference, which describes how to route
        read requests to the cluster.
      properties:
        maxStalenessSeconds:
          type: integer
          format: int32
          description: Maximum replication lag, or **staleness**, for reads from
            secondaries.
        mode:
          type: string
          description: Read preference mode that specifies to which replica set member to
            route the read requests.
          externalDocs:
            description: Read Preference Modes
            url: https://docs.mongodb.com/manual/core/read-preference/#read-preference-modes
        tagSets:
          type: array
          description: List that contains tag sets or tag specification documents. If
            specified, Atlas Data Lake routes read requests to replica set
            member or members that are associated with the specified tags.
          externalDocs:
            description: Read Preference Tag Set Lists
            url: https://docs.mongodb.com/manual/core/read-preference-tags/
          items:
            type: array
            items:
              $ref: "#/components/schemas/DataLakeAtlasStoreReadPreferenceTag"
    DataLakeAtlasStoreReadPreferenceTag:
      type: object
      properties:
        name:
          type: string
          description: Human-readable label of the tag.
        value:
          type: string
          description: Value of the tag.
    DataLakeCloudProviderConfig:
      type: object
      description: Cloud provider linked to this data lake.
      properties:
        aws:
          $ref: "#/components/schemas/DataLakeAWSCloudProviderConfig"
      required:
        - aws
      title: Data Lake Cloud Provider
    DataLakeDataProcessRegion:
      type: object
      description: Information about the cloud provider region to which the data lake
        routes client connections.
      properties:
        cloudProvider:
          type: string
          description: Name of the cloud service that hosts the data lake's data stores.
        region:
          $ref: "#/components/schemas/BaseAtlasDataLakeRegion"
      required:
        - cloudProvider
        - region
    DataLakeDatabaseCollection:
      type: object
      description: A collection and data sources that map to a ``stores`` data store.
      properties:
        dataSources:
          type: array
          description: Array that contains the data stores that map to a collection for
            this data lake.
          items:
            $ref: "#/components/schemas/DataLakeDatabaseDataSourceSettings"
        name:
          type: string
          description: Human-readable label that identifies the collection to which
            MongoDB Cloud maps the data in the data stores.
    DataLakeDatabaseDataSourceSettings:
      type: object
      description: Data store that maps to a collection for this data lake.
      properties:
        allowInsecure:
          type: boolean
          default: false
          description: Flag that validates the scheme in the specified URLs. If `true`,
            allows insecure `HTTP` scheme, doesn't verify the server's
            certificate chain and hostname, and accepts any certificate with any
            hostname presented by the server. If `false`, allows secure `HTTPS`
            scheme only.
        collection:
          type: string
          description: Human-readable label that identifies the collection in the
            database. For creating a wildcard (`*`) collection, you must omit
            this parameter.
        collectionRegex:
          type: string
          description: Regex pattern to use for creating the wildcard (*) collection. To
            learn more about the regex syntax, see [Go programming
            language](https://pkg.go.dev/regexp).
        database:
          type: string
          description: Human-readable label that identifies the database, which contains
            the collection in the cluster. You must omit this parameter to
            generate wildcard (`*`) collections for dynamically generated
            databases.
        databaseRegex:
          type: string
          description: Regex pattern to use for creating the wildcard (*) database. To
            learn more about the regex syntax, see [Go programming
            language](https://pkg.go.dev/regexp).
        datasetName:
          type: string
          description: Human-readable label that identifies the dataset that Atlas
            generates for an ingestion pipeline run or Online Archive.
          example: v1$atlas$snapshot$Cluster0$myDatabase$myCollection$19700101T000000Z
        datasetPrefix:
          type: string
          description: Human-readable label that matches against the dataset names for
            ingestion pipeline runs or Online Archives.
        defaultFormat:
          type: string
          description: File format that MongoDB Cloud uses if it encounters a file without
            a file extension while searching **storeName**.
        path:
          type: string
          description: File path that controls how MongoDB Cloud searches for and parses
            files in the **storeName** before mapping them to a
            collection.Specify ``/`` to capture all files and folders from the
            ``prefix`` path.
        provenanceFieldName:
          type: string
          description: Name for the field that includes the provenance of the documents in
            the results. MongoDB Cloud returns different fields in the results
            for each supported provider.
        storeName:
          type: string
          description: Human-readable label that identifies the data store that MongoDB
            Cloud maps to the collection.
        trimLevel:
          type: integer
          format: int32
          description: Unsigned integer that specifies how many fields of the dataset name
            to trim from the left of the dataset name before mapping the
            remaining fields to a wildcard collection name.
        urls:
          type: array
          description: URLs of the publicly accessible data files. You can't specify URLs
            that require authentication. Atlas Data Lake creates a partition for
            each URL. If empty or omitted, Data Lake uses the URLs from the
            store specified in the **dataSources.storeName** parameter.
          items:
            type: string
    DataLakeDatabaseInstance:
      type: object
      description: Database associated with this data lake. Databases contain
        collections and views.
      properties:
        collections:
          type: array
          description: Array of collections and data sources that map to a ``stores`` data
            store.
          items:
            $ref: "#/components/schemas/DataLakeDatabaseCollection"
        maxWildcardCollections:
          type: integer
          format: int32
          default: 100
          description: Maximum number of wildcard collections in the database. This only
            applies to S3 data sources.
          maximum: 1000
          minimum: 1
        name:
          type: string
          description: Human-readable label that identifies the database to which the data
            lake maps data.
        views:
          type: array
          description: Array of aggregation pipelines that apply to the collection. This
            only applies to S3 data sources.
          items:
            $ref: "#/components/schemas/DataLakeApiBase"
    DataLakeIngestionPipeline:
      type: object
      description: Details of a Data Lake Pipeline.
      properties:
        _id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the Data Lake
            Pipeline.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        createdDate:
          type: string
          format: date-time
          description: Timestamp that indicates when the Data Lake Pipeline was created.
          readOnly: true
        datasetRetentionPolicy:
          $ref: "#/components/schemas/DatasetRetentionPolicy"
        groupId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the group.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        lastUpdatedDate:
          type: string
          format: date-time
          description: Timestamp that indicates the last time that the Data Lake Pipeline
            was updated.
          readOnly: true
        name:
          type: string
          description: Name of this Data Lake Pipeline.
        sink:
          $ref: "#/components/schemas/IngestionSink"
        source:
          $ref: "#/components/schemas/IngestionSource"
        state:
          type: string
          description: State of this Data Lake Pipeline.
          readOnly: true
        transformations:
          type: array
          description: Fields to be excluded for this Data Lake Pipeline.
          items:
            $ref: "#/components/schemas/FieldTransformation"
      title: Data Lake Pipeline
    DataLakePipelinesPartitionField:
      type: object
      description: Partition Field in the Data Lake Storage provider for a Data Lake
        Pipeline.
      properties:
        fieldName:
          type: string
          description: Human-readable label that identifies the field name used to
            partition data.
          maxLength: 700
        order:
          type: integer
          format: int32
          default: 0
          description: Sequence in which MongoDB Cloud slices the collection data to
            create partitions. The resource expresses this sequence starting
            with zero.
      required:
        - fieldName
        - order
      title: Partition Field
    DataLakeStorage:
      type: object
      description: Configuration information for each data store and its mapping to
        MongoDB Cloud databases.
      properties:
        databases:
          type: array
          description: Array that contains the queryable databases and collections for
            this data lake.
          items:
            $ref: "#/components/schemas/DataLakeDatabaseInstance"
        stores:
          type: array
          description: Array that contains the data stores for the data lake.
          items:
            $ref: "#/components/schemas/DataLakeStoreSettings"
    DataLakeStoreSettings:
      type: object
      description: Group of settings that define where the data is stored.
      properties:
        name:
          type: string
          description: Human-readable label that identifies the data store. The
            **databases.[n].collections.[n].dataSources.[n].storeName** field
            references this values as part of the mapping configuration. To use
            MongoDB Cloud as a data store, the data lake requires a serverless
            instance or an `M10` or higher cluster.
        provider:
          type: string
        additionalStorageClasses:
          type: array
          description: Collection of AWS S3 [storage
            classes](https://aws.amazon.com/s3/storage-classes/). Atlas Data
            Lake includes the files in these storage classes in the query
            results.
          items:
            type: string
            description: AWS S3 [storage class](https://aws.amazon.com/s3/storage-classes/)
              where the files to include in the results are stored.
        bucket:
          type: string
          description: Human-readable label that identifies the AWS S3 bucket. This label
            must exactly match the name of an S3 bucket that the data lake can
            access with the configured AWS Identity and Access Management (IAM)
            credentials.
        delimiter:
          type: string
          description: The delimiter that separates
            **databases.[n].collections.[n].dataSources.[n].path** segments in
            the data store. MongoDB Cloud uses the delimiter to efficiently
            traverse S3 buckets with a hierarchical directory structure. You can
            specify any character supported by the S3 object keys as the
            delimiter. For example, you can specify an underscore (_) or a plus
            sign (+) or multiple characters, such as double underscores (__) as
            the delimiter. If omitted, defaults to `/`.
        includeTags:
          type: boolean
          default: false
          description: Flag that indicates whether to use S3 tags on the files in the
            given path as additional partition attributes. If set to `true`,
            data lake adds the S3 tags as additional partition attributes and
            adds new top-level BSON elements associating each tag to each
            document.
        prefix:
          type: string
          description: Prefix that MongoDB Cloud applies when searching for files in the
            S3 bucket. The data store prepends the value of prefix to the
            **databases.[n].collections.[n].dataSources.[n].path** to create the
            full path for files to ingest. If omitted, MongoDB Cloud searches
            all files from the root of the S3 bucket.
        public:
          type: boolean
          default: false
          description: Flag that indicates whether the bucket is public. If set to `true`,
            MongoDB Cloud doesn't use the configured AWS Identity and Access
            Management (IAM) role to access the S3 bucket. If set to `false`,
            the configured AWS IAM role must include permissions to access the
            S3 bucket.
        region:
          type: string
          description: >-
            Physical location where MongoDB Cloud deploys your AWS-hosted
            MongoDB cluster nodes. The region you choose can affect network
            latency for clients accessing your databases. When MongoDB Cloud
            deploys a dedicated cluster, it checks if a VPC or VPC connection
            exists for that provider and region. If not, MongoDB Cloud creates
            them as part of the deployment. MongoDB Cloud assigns the VPC a CIDR
            block. To limit a new VPC peering connection to one CIDR block and
            region, create the connection first. Deploy the cluster after the
            connection starts.


            Alternatively:

            Microsoft Azure Regions.
          title: Azure Regions
        clusterName:
          type: string
          description: Human-readable label of the MongoDB Cloud cluster on which the
            store is based.
        projectId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the project.
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        readConcern:
          $ref: "#/components/schemas/DataLakeAtlasStoreReadConcern"
        readPreference:
          $ref: "#/components/schemas/DataLakeAtlasStoreReadPreference"
        allowInsecure:
          type: boolean
          default: false
          description: Flag that validates the scheme in the specified URLs. If `true`,
            allows insecure `HTTP` scheme, doesn't verify the server's
            certificate chain and hostname, and accepts any certificate with any
            hostname presented by the server. If `false`, allows secure `HTTPS`
            scheme only.
        defaultFormat:
          type: string
          description: Default format that Data Lake assumes if it encounters a file
            without an extension while searching the `storeName`. If omitted,
            Data Lake attempts to detect the file type by processing a few bytes
            of the file. The specified format only applies to the URLs specified
            in the **databases.[n].collections.[n].dataSources** object.
        urls:
          type: array
          description: Comma-separated list of publicly accessible HTTP URLs where data is
            stored. You can't specify URLs that require authentication.
          items:
            type: string
            description: Comma-separated list of publicly accessible HTTP URLs where data is
              stored. You can't specify URLs that require authentication.
      required:
        - provider
    DataLakeTenant:
      type: object
      properties:
        cloudProviderConfig:
          $ref: "#/components/schemas/DataLakeCloudProviderConfig"
        dataProcessRegion:
          $ref: "#/components/schemas/DataLakeDataProcessRegion"
        groupId:
          type: string
          description: Unique 24-hexadecimal character string that identifies the project.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        hostnames:
          type: array
          description: List that contains the hostnames assigned to the Data Lake instance.
          items:
            type: string
            description: Unique hostname assigned to the Data Lake instance.
            readOnly: true
          readOnly: true
        name:
          type: string
          description: Human-readable label that identifies the data lake.
        privateEndpointHostnames:
          type: array
          description: List that contains the sets of private endpoints and hostnames.
          items:
            $ref: "#/components/schemas/PrivateEndpointHostname"
          readOnly: true
        state:
          type: string
          description: Label that indicates the status of the Data Lake instance.
          readOnly: true
        storage:
          $ref: "#/components/schemas/DataLakeStorage"
    DataProtectionSettings20231001:
      type: object
      properties:
        authorizedEmail:
          type: string
          format: email
          description: Email address of the user who authorized to update the Backup
            Compliance Policy  settings.
        authorizedUserFirstName:
          type: string
          description: First name of the user who authorized to updated the Backup
            Compliance Policy  settings.
        authorizedUserLastName:
          type: string
          description: Last name of the user who authorized to updated the Backup
            Compliance Policy  settings.
        copyProtectionEnabled:
          type: boolean
          default: false
          description: Flag that indicates whether to prevent cluster users from deleting
            backups copied to other regions, even if those additional snapshot
            regions are removed. If unspecified, this value defaults to false.
        encryptionAtRestEnabled:
          type: boolean
          default: false
          description: Flag that indicates whether Encryption at Rest using Customer
            Key  Management is required for all clusters with a Backup
            Compliance Policy. If unspecified, this value defaults to false.
          externalDocs:
            description: Encryption at Rest using Customer Key Management
            url: https://www.mongodb.com/docs/atlas/security-kms-encryption/
        onDemandPolicyItem:
          $ref: "#/components/schemas/BackupComplianceOnDemandPolicyItem"
        pitEnabled:
          type: boolean
          default: false
          description: Flag that indicates whether the cluster uses Continuous Cloud
            Backups with a Backup Compliance Policy. If unspecified, this value
            defaults to false.
          externalDocs:
            description: Continuous Cloud Backups
            url: https://docs.atlas.mongodb.com/backup/cloud-backup/overview/
        projectId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the project for
            the Backup Compliance Policy.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
        restoreWindowDays:
          type: integer
          format: int32
          description: Number of previous days that you can restore back to with
            Continuous Cloud Backup with a Backup Compliance Policy. You must
            specify a positive, non-zero integer, and the maximum retention
            window can't exceed the hourly retention time. This parameter
            applies only to Continuous Cloud Backups with a Backup Compliance
            Policy.
        scheduledPolicyItems:
          type: array
          description: List that contains the specifications for one scheduled policy.
          items:
            $ref: "#/components/schemas/BackupComplianceScheduledPolicyItem"
        state:
          type: string
          description: Label that indicates the state of the Backup Compliance Policy
            settings. MongoDB Cloud ignores this setting when you enable or
            update the Backup Compliance Policy settings.
          readOnly: true
        updatedDate:
          type: string
          format: date-time
          description: ISO 8601 timestamp format in UTC that indicates when the user
            updated the Data Protection Policy settings. MongoDB Cloud ignores
            this setting when you enable or update the Backup Compliance Policy
            settings.
          readOnly: true
        updatedUser:
          type: string
          format: email
          description: Email address that identifies the user who updated the Backup
            Compliance Policy settings. MongoDB Cloud ignores this email setting
            when you enable or update the Backup Compliance Policy settings.
          readOnly: true
      required:
        - authorizedEmail
        - authorizedUserFirstName
        - authorizedUserLastName
    DatabaseInheritedRole:
      type: object
      description: Role inherited from another context for this database user.
      externalDocs:
        description: Built-in MongoDB Roles
        url: https://docs.mongodb.com/manual/reference/built-in-roles/
      properties:
        db:
          type: string
          description: Human-readable label that identifies the database on which someone
            grants the action to one MongoDB user.
        role:
          type: string
          description: Human-readable label that identifies the role inherited. Set this
            value to `admin` for every role except `read` or `readWrite`.
          externalDocs:
            description: MongoDB Built-In Roles
            url: https://docs.mongodb.com/manual/reference/built-in-roles/
          pattern: ^\b(?!xgen-)([0-9A-Za-z_\-]+)\b(?<!\atlasAdmin|read|readWrite|dbAdmin|dbOwner|userAdmin|clusterAdmin|clusterManager|clusterMonitor|hostManager|backup|restore|readAnyDatabase|readWriteAnyDatabase|userAdminAnyDatabase|dbAdminAnyDatabase|root|__system)$
      required:
        - db
        - role
      title: Inherited Role
    DatabasePermittedNamespaceResource:
      type: object
      description: Namespace to which this database user has access.
      externalDocs:
        description: Cluster Resources
        url: https://docs.mongodb.com/manual/reference/resource-document/#cluster-resource
      properties:
        cluster:
          type: boolean
          description: Flag that indicates whether to grant the action on the cluster
            resource. If `true`, MongoDB Cloud ignores the
            **actions.resources.collection** and **actions.resources.db**
            parameters.
        collection:
          type: string
          description: "Human-readable label that identifies the collection on which you
            grant the action to one MongoDB user. If you don't set this
            parameter, you grant the action to all collections in the database
            specified in the **actions.resources.db** parameter. If you set
            `\"actions.resources.cluster\" : true`, MongoDB Cloud ignores this
            parameter."
        db:
          type: string
          description: 'Human-readable label that identifies the database on which you
            grant the action to one MongoDB user. If you set
            `"actions.resources.cluster" : true`, MongoDB Cloud ignores this
            parameter.'
      required:
        - cluster
        - collection
        - db
      title: Permitted Namespace
    DatabasePrivilegeAction:
      type: object
      description: Privilege action that the role grants.
      properties:
        action:
          type: string
          description: Human-readable label that identifies the privilege action.
        resources:
          type: array
          description: List of resources on which you grant the action.
          items:
            $ref: "#/components/schemas/DatabasePermittedNamespaceResource"
      required:
        - action
      title: Database Privilege Action
    DatabaseRollingIndexRequest:
      type: object
      properties:
        collation:
          $ref: "#/components/schemas/Collation"
        collection:
          type: string
          description: Human-readable label of the collection for which MongoDB Cloud
            creates an index.
          writeOnly: true
        db:
          type: string
          description: Human-readable label of the database that holds the collection on
            which MongoDB Cloud creates an index.
          writeOnly: true
        keys:
          type: array
          description: List that contains one or more objects that describe the parameters
            that you want to index.
          items:
            type: object
            additionalProperties:
              type: string
              description: Key-value pair that sets the parameter to index as the key and the
                type of index as its value. To create a [multikey
                index](https://docs.mongodb.com/manual/core/index-multikey/),
                list each parameter in its own object within this array.
              externalDocs:
                description: Index Types
                url: https://docs.mongodb.com/manual/indexes/#index-types
              maxProperties: 1
              minProperties: 1
              writeOnly: true
            description: Key-value pair that sets the parameter to index as the key and the
              type of index as its value. To create a [multikey
              index](https://docs.mongodb.com/manual/core/index-multikey/), list
              each parameter in its own object within this array.
            externalDocs:
              description: Index Types
              url: https://docs.mongodb.com/manual/indexes/#index-types
            maxProperties: 1
            minProperties: 1
            writeOnly: true
          writeOnly: true
        options:
          $ref: "#/components/schemas/IndexOptions"
      required:
        - collection
        - db
    DatabaseUserRole:
      type: object
      description: Range of resources available to this database user.
      properties:
        collectionName:
          type: string
          description: Collection on which this role applies.
        databaseName:
          type: string
          description: Database against which the database user authenticates. Database
            users must provide both a username and authentication database to
            log into MongoDB.
        roleName:
          type: string
          description: Human-readable label that identifies a group of privileges assigned
            to a database user. This value can either be a built-in role or a
            custom role.
      required:
        - databaseName
        - roleName
      title: Database User Role
    DatasetRetentionPolicy:
      type: object
      description: Dataset Retention Policy for a Scheduled Data Lake Pipeline.
      properties:
        lastModifiedDate:
          type: string
          format: date-time
          description: Date when retention policy was last modified.
          readOnly: true
        units:
          type: string
          description: Quantity of time in which the Data Lake Pipeline measures dataset
            retention.
        value:
          type: integer
          format: int32
          description: Number that indicates the amount of days, weeks, or months that the
            Data Lake Pipeline will retain datasets.
          minimum: 1
      required:
        - units
        - value
      title: Dataset Retention Policy
    DedicatedHardwareSpec:
      type: object
      description: Hardware specifications for read-only nodes in the region.
        Read-only nodes can never become the primary member, but can enable
        local reads.If you don't specify this parameter, no read-only nodes are
        deployed to the region.
      properties:
        nodeCount:
          type: integer
          format: int32
          description: Number of nodes of the given type for MongoDB Cloud to deploy to
            the region.
        diskIOPS:
          type: integer
          format: int32
          description: >-
            Target throughput desired for storage attached to your
            AWS-provisioned cluster. Change this parameter only if you:


            - set `"replicationSpecs[n].regionConfigs[m].providerName" : "AWS"`.

            - set `"replicationSpecs[n].regionConfigs[m].electableSpecs.instanceSize" : "M30"` or greater not including `Mxx_NVME` tiers.


            The maximum input/output operations per second (IOPS) depend on the selected **.instanceSize** and **.diskSizeGB**.

            This parameter defaults to the cluster tier's standard IOPS value.

            Changing this value impacts cluster cost.

            MongoDB Cloud enforces minimum ratios of storage capacity to system memory for given cluster tiers. This keeps cluster performance consistent with large datasets.


            - Instance sizes `M10` to `M40` have a ratio of disk capacity to system memory of 60:1.

            - Instance sizes greater than `M40` have a ratio of 120:1.
        ebsVolumeType:
          type: string
          default: STANDARD
          description: >-
            Type of storage you want to attach to your AWS-provisioned cluster.


            - `STANDARD` volume types can't exceed the default input/output operations per second (IOPS) rate for the selected volume size. 


            - `PROVISIONED` volume types must fall within the allowable IOPS range for the selected volume size. You must set this value to (`PROVISIONED`) for NVMe clusters.
        instanceSize:
          type: string
          description: Hardware specification for the instance sizes in this region. Each
            instance size has a default storage and memory capacity. The
            instance size you select applies to all the data-bearing hosts in
            your instance size.
          title: GCP Instance Sizes
    DeleteCopiedBackups:
      type: object
      description: Deleted copy setting whose backup copies need to also be deleted.
      properties:
        cloudProvider:
          type: string
          description: Human-readable label that identifies the cloud provider for the
            deleted copy setting whose backup copies you want to delete.
          writeOnly: true
        regionName:
          type: string
          description: Target region for the deleted copy setting whose backup copies you
            want to delete. Please supply the 'Atlas Region' which can be found
            under [Cloud
            Providers](https://www.mongodb.com/docs/atlas/reference/cloud-providers/)
            'regions' link.
          writeOnly: true
        replicationSpecId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the replication
            object for a zone in a cluster. For global clusters, there can be
            multiple zones to choose from. For sharded clusters and replica
            setclusters, there is only one zone in the cluster. To find the
            Replication Spec Id, do a GET request to Return One Cluster in One
            Project and consult the replicationSpecs array [Return One Cluster
            in One Project](#operation/getLegacyCluster).
          writeOnly: true
      writeOnly: true
    Destination:
      type: object
      description: Document that describes the destination of the migration.
      properties:
        clusterName:
          type: string
          description: Label that identifies the destination cluster.
        groupId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the destination
            project.
          example: 9b43a5b329223c3a1591a678
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
        hostnameSchemaType:
          type: string
          default: PUBLIC
          description: The network type to use between the migration host and the target
            cluster.
        privateLinkId:
          type: string
          description: Represents the endpoint to use when the host schema type is
            `PRIVATE_LINK`.
      required:
        - clusterName
        - groupId
        - hostnameSchemaType
    DiskBackupApiPolicyItem:
      type: object
      description: Specifications for one policy.
      properties:
        frequencyInterval:
          type: integer
          format: int32
          description: >-
            Number that indicates the frequency interval for a set of snapshots.
            A value of `1` specifies the first instance of the corresponding
            `frequencyType`.


            - In a yearly policy item, `1` indicates that the yearly snapshot occurs on the first day of January and `12` indicates the first day of December.


            - In a monthly policy item, `1` indicates that the monthly snapshot occurs on the first day of the month and `40` indicates the last day of the month.


            - In a weekly policy item, `1` indicates that the weekly snapshot occurs on Monday and `7` indicates Sunday.


            - In an hourly policy item, you can set the frequency interval to `1`, `2`, `4`, `6`, `8`, or `12`. For hourly policy items for NVMe clusters, MongoDB Cloud accepts only `12` as the frequency interval value.

             MongoDB Cloud ignores this setting for non-hourly policy items in Backup Compliance Policy settings.
        frequencyType:
          type: string
          description: Human-readable label that identifies the frequency type associated
            with the backup policy.
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies this backup
            policy item.
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        retentionUnit:
          type: string
          description: Unit of time in which MongoDB Cloud measures snapshot retention.
        retentionValue:
          type: integer
          format: int32
          description: >-
            Duration in days, weeks, months, or years that MongoDB Cloud retains
            the snapshot. For less frequent policy items, MongoDB Cloud requires
            that you specify a value greater than or equal to the value
            specified for more frequent policy items.


            For example: If the hourly policy item specifies a retention of two days, you must specify two days or greater for the retention of the weekly policy item.
      required:
        - frequencyInterval
        - frequencyType
        - retentionUnit
        - retentionValue
    DiskBackupBaseRestoreMember:
      type: object
      properties:
        replicaSetName:
          type: string
          description: Human-readable label that identifies the replica set on the sharded
            cluster.
          readOnly: true
    DiskBackupCopySetting:
      type: object
      description: Copy setting item in the desired backup policy.
      properties:
        cloudProvider:
          type: string
          description: Human-readable label that identifies the cloud provider that stores
            the snapshot copy.
        frequencies:
          type: array
          description: List that describes which types of snapshots to copy.
          items:
            type: string
        regionName:
          type: string
          description: Target region to copy snapshots belonging to replicationSpecId to.
            Please supply the 'Atlas Region' which can be found under [Cloud
            Providers](https://www.mongodb.com/docs/atlas/reference/cloud-providers/)
            'regions' link.
        replicationSpecId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the replication
            object for a zone in a cluster. For global clusters, there can be
            multiple zones to choose from. For sharded clusters and replica set
            clusters, there is only one zone in the cluster. To find the
            Replication Spec Id, do a GET request to Return One Cluster in One
            Project and consult the replicationSpecs array [Return One Cluster
            in One Project](#operation/getLegacyCluster).
        shouldCopyOplogs:
          type: boolean
          description: Flag that indicates whether to copy the oplogs to the target
            region. You can use the oplogs to perform point-in-time restores.
    DiskBackupExportJob:
      type: object
      properties:
        components:
          type: array
          description: Information on the export job for each replica set in the sharded
            cluster.
          items:
            $ref: "#/components/schemas/DiskBackupBaseRestoreMember"
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: Date and time when someone created this export job. MongoDB Cloud
            represents this timestamp in ISO 8601 format in UTC.
          readOnly: true
        customData:
          type: array
          description: Collection of key-value pairs that represent custom data for the
            metadata file that MongoDB Cloud uploads to the bucket when the
            export job finishes.
          items:
            $ref: "#/components/schemas/BackupLabel"
        deliveryUrl:
          type: array
          description: 'One or more Uniform Resource Locators (URLs) that point to the
            compressed snapshot files for manual download. MongoDB Cloud returns
            this parameter when `"deliveryType" : "download"`.'
          items:
            type: string
            description: One Uniform Resource Locator that point to the compressed snapshot
              files for manual download.
          readOnly: true
        exportBucketId:
          type: string
          description: Unique 24-hexadecimal character string that identifies the AWS
            bucket to which MongoDB Cloud exports the Cloud Backup snapshot.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        exportStatus:
          $ref: "#/components/schemas/ExportStatus"
        finishedAt:
          type: string
          format: date-time
          description: Date and time when this export job completed. MongoDB Cloud
            represents this timestamp in ISO 8601 format in UTC.
          readOnly: true
        id:
          type: string
          description: Unique 24-hexadecimal character string that identifies the restore
            job.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        prefix:
          type: string
          description: Full path on the cloud provider bucket to the folder where the
            snapshot is exported.
          pattern: /exported_snapshots/\{ORG-NAME\}/\{PROJECT-NAME\}/\{CLUSTER-NAME\}/\{SNAPSHOT-INITIATION-DATE\}/\{TIMESTAMP\}
          readOnly: true
        snapshotId:
          type: string
          description: Unique 24-hexadecimal character string that identifies the snapshot.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
        state:
          type: string
          description: State of the export job.
          readOnly: true
      required:
        - exportBucketId
    DiskBackupExportJobRequest:
      type: object
      properties:
        customData:
          type: array
          description: Collection of key-value pairs that represent custom data to add to
            the metadata file that MongoDB Cloud uploads to the bucket when the
            export job finishes.
          items:
            $ref: "#/components/schemas/BackupLabel"
        exportBucketId:
          type: string
          description: Unique 24-hexadecimal character string that identifies the AWS
            bucket to which MongoDB Cloud exports the Cloud Backup snapshot.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          writeOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        snapshotId:
          type: string
          description: Unique 24-hexadecimal character string that identifies the Cloud
            Backup snasphot to export.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          writeOnly: true
      required:
        - exportBucketId
        - snapshotId
    DiskBackupOnDemandSnapshotRequest:
      type: object
      properties:
        description:
          type: string
          description: 'Human-readable phrase or sentence that explains the purpose of the
            snapshot. The resource returns this parameter when `"status" :
            "onDemand"`.'
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        retentionInDays:
          type: integer
          format: int32
          description: Number of days that MongoDB Cloud should retain the on-demand
            snapshot. Must be at least **1**.
          minimum: 1
    DiskBackupReplicaSet:
      type: object
      description: Details of the replica set snapshot that MongoDB Cloud created.
      properties:
        cloudProvider:
          type: string
          description: 'Human-readable label that identifies the cloud provider that
            stores this snapshot. The resource returns this parameter when
            `"type": "replicaSet"`.'
          readOnly: true
        copyRegions:
          type: array
          description: List that identifies the regions to which MongoDB Cloud copies the
            snapshot.
          items:
            type: string
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: Date and time when MongoDB Cloud took the snapshot. This parameter
            expresses its value in the ISO 8601 timestamp format in UTC.
          readOnly: true
        description:
          type: string
          description: 'Human-readable phrase or sentence that explains the purpose of the
            snapshot. The resource returns this parameter when `"status":
            "onDemand"`.'
          readOnly: true
        expiresAt:
          type: string
          format: date-time
          description: Date and time when MongoDB Cloud deletes the snapshot. This
            parameter expresses its value in the ISO 8601 timestamp format in
            UTC.
          readOnly: true
        frequencyType:
          type: string
          description: Human-readable label that identifies how often this snapshot
            triggers.
          readOnly: true
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the snapshot.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        masterKeyUUID:
          type: string
          format: uuid
          description: 'Unique string that identifies the Amazon Web Services (AWS) Key
            Management Service (KMS) Customer Master Key (CMK) used to encrypt
            the snapshot. The resource returns this value when
            `"encryptionEnabled" : true`.'
          readOnly: true
        mongodVersion:
          type: string
          description: Version of the MongoDB host that this snapshot backs up.
          pattern: ([\d]+\.[\d]+\.[\d]+)
          readOnly: true
        policyItems:
          type: array
          description: List that contains unique identifiers for the policy items.
          items:
            type: string
            description: Unique 24-hexadecimal digit string that identifies one policy item.
            example: 32b6e34b3d91647abb20e7b8
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
          readOnly: true
        replicaSetName:
          type: string
          description: 'Human-readable label that identifies the replica set from which
            MongoDB Cloud took this snapshot. The resource returns this
            parameter when `"type": "replicaSet"`.'
          readOnly: true
        snapshotType:
          type: string
          description: Human-readable label that identifies when this snapshot triggers.
          readOnly: true
        status:
          type: string
          description: Human-readable label that indicates the stage of the backup process
            for this snapshot.
          readOnly: true
        storageSizeBytes:
          type: integer
          format: int64
          description: Number of bytes taken to store the backup at time of snapshot.
          readOnly: true
        type:
          type: string
          description: Human-readable label that categorizes the cluster as a replica set
            or sharded cluster.
          readOnly: true
      title: Replica Set Snapshot
    DiskBackupShardedClusterSnapshot:
      type: object
      description: Details of the sharded cluster snapshot that MongoDB Cloud created.
      properties:
        configServerType:
          type: string
          description: Human-readable label that identifies the config server type for
            this snapshot.
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: Date and time when MongoDB Cloud took the snapshot. This parameter
            expresses its value in the ISO 8601 timestamp format in UTC.
          readOnly: true
        description:
          type: string
          description: 'Human-readable phrase or sentence that explains the purpose of the
            snapshot. The resource returns this parameter when `"status":
            "onDemand"`.'
          readOnly: true
        expiresAt:
          type: string
          format: date-time
          description: Date and time when MongoDB Cloud deletes the snapshot. This
            parameter expresses its value in the ISO 8601 timestamp format in
            UTC.
          readOnly: true
        frequencyType:
          type: string
          description: Human-readable label that identifies how often this snapshot
            triggers.
          readOnly: true
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the snapshot.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        masterKeyUUID:
          type: string
          format: uuid
          description: 'Unique string that identifies the Amazon Web Services (AWS) Key
            Management Service (KMS) Customer Master Key (CMK) used to encrypt
            the snapshot. The resource returns this value when
            `"encryptionEnabled" : true`.'
          readOnly: true
        members:
          type: array
          description: 'List that includes the snapshots and the cloud provider that
            stores the snapshots. The resource returns this parameter when
            `"type" : "SHARDED_CLUSTER"`.'
          items:
            $ref: "#/components/schemas/DiskBackupShardedClusterSnapshotMember"
          readOnly: true
        mongodVersion:
          type: string
          description: Version of the MongoDB host that this snapshot backs up.
          pattern: ([\d]+\.[\d]+\.[\d]+)
          readOnly: true
        policyItems:
          type: array
          description: List that contains unique identifiers for the policy items.
          items:
            type: string
            description: Unique 24-hexadecimal digit string that identifies one policy item.
            example: 32b6e34b3d91647abb20e7b8
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
          readOnly: true
        snapshotIds:
          type: array
          description: 'List that contains the unique identifiers of the snapshots created
            for the shards and config host for a sharded cluster. The resource
            returns this parameter when `"type": "SHARDED_CLUSTER"`. These
            identifiers should match the ones specified in the **members[n].id**
            parameters. This allows you to map a snapshot to its shard or config
            host name.'
          items:
            type: string
            description: Unique 24-hexadecimal digit string that identifies the snapshot for
              part of the sharded cluster.
            example: 32b6e34b3d91647abb20e7b8
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
            readOnly: true
          readOnly: true
        snapshotType:
          type: string
          description: Human-readable label that identifies when this snapshot triggers.
          readOnly: true
        status:
          type: string
          description: Human-readable label that indicates the stage of the backup process
            for this snapshot.
          readOnly: true
        storageSizeBytes:
          type: integer
          format: int64
          description: Number of bytes taken to store the backup at time of snapshot.
          readOnly: true
        type:
          type: string
          description: Human-readable label that categorizes the cluster as a replica set
            or sharded cluster.
          readOnly: true
      title: Sharded Cluster Snapshot
    DiskBackupShardedClusterSnapshotMember:
      type: object
      properties:
        cloudProvider:
          type: string
          description: 'Human-readable label that identifies the cloud provider that
            stores this snapshot. The resource returns this parameter when
            `"type": "replicaSet"`.'
          readOnly: true
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the snapshot.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        replicaSetName:
          type: string
          description: Human-readable label that identifies the shard or config host from
            which MongoDB Cloud took this snapshot.
          readOnly: true
      required:
        - cloudProvider
        - id
        - replicaSetName
    DiskBackupSnapshot:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          description: Date and time when MongoDB Cloud took the snapshot. This parameter
            expresses its value in the ISO 8601 timestamp format in UTC.
          readOnly: true
        description:
          type: string
          description: 'Human-readable phrase or sentence that explains the purpose of the
            snapshot. The resource returns this parameter when `"status":
            "onDemand"`.'
          readOnly: true
        expiresAt:
          type: string
          format: date-time
          description: Date and time when MongoDB Cloud deletes the snapshot. This
            parameter expresses its value in the ISO 8601 timestamp format in
            UTC.
          readOnly: true
        frequencyType:
          type: string
          description: Human-readable label that identifies how often this snapshot
            triggers.
          readOnly: true
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the snapshot.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        masterKeyUUID:
          type: string
          format: uuid
          description: 'Unique string that identifies the Amazon Web Services (AWS) Key
            Management Service (KMS) Customer Master Key (CMK) used to encrypt
            the snapshot. The resource returns this value when
            `"encryptionEnabled" : true`.'
          readOnly: true
        mongodVersion:
          type: string
          description: Version of the MongoDB host that this snapshot backs up.
          pattern: ([\d]+\.[\d]+\.[\d]+)
          readOnly: true
        policyItems:
          type: array
          description: List that contains unique identifiers for the policy items.
          items:
            type: string
            description: Unique 24-hexadecimal digit string that identifies one policy item.
            example: 32b6e34b3d91647abb20e7b8
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
          readOnly: true
        snapshotType:
          type: string
          description: Human-readable label that identifies when this snapshot triggers.
          readOnly: true
        status:
          type: string
          description: Human-readable label that indicates the stage of the backup process
            for this snapshot.
          readOnly: true
        storageSizeBytes:
          type: integer
          format: int64
          description: Number of bytes taken to store the backup at time of snapshot.
          readOnly: true
        type:
          type: string
          description: Human-readable label that categorizes the cluster as a replica set
            or sharded cluster.
          readOnly: true
        cloudProvider:
          type: string
          description: 'Human-readable label that identifies the cloud provider that
            stores this snapshot. The resource returns this parameter when
            `"type": "replicaSet"`.'
          readOnly: true
        copyRegions:
          type: array
          description: List that identifies the regions to which MongoDB Cloud copies the
            snapshot.
          items:
            type: string
          readOnly: true
        replicaSetName:
          type: string
          description: 'Human-readable label that identifies the replica set from which
            MongoDB Cloud took this snapshot. The resource returns this
            parameter when `"type": "replicaSet"`.'
          readOnly: true
        configServerType:
          type: string
          description: Human-readable label that identifies the config server type for
            this snapshot.
          readOnly: true
        members:
          type: array
          description: 'List that includes the snapshots and the cloud provider that
            stores the snapshots. The resource returns this parameter when
            `"type" : "SHARDED_CLUSTER"`.'
          items:
            $ref: "#/components/schemas/DiskBackupShardedClusterSnapshotMember"
          readOnly: true
        snapshotIds:
          type: array
          description: 'List that contains the unique identifiers of the snapshots created
            for the shards and config host for a sharded cluster. The resource
            returns this parameter when `"type": "SHARDED_CLUSTER"`. These
            identifiers should match the ones specified in the **members[n].id**
            parameters. This allows you to map a snapshot to its shard or config
            host name.'
          items:
            type: string
            description: Unique 24-hexadecimal digit string that identifies the snapshot for
              part of the sharded cluster.
            example: 32b6e34b3d91647abb20e7b8
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
            readOnly: true
          readOnly: true
    DiskBackupSnapshotAWSExportBucket:
      type: object
      properties:
        _id:
          type: string
          description: Unique 24-hexadecimal character string that identifies the Amazon
            Web Services (AWS) Simple Storage Service (S3) export bucket.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        bucketName:
          type: string
          description: Human-readable label that identifies the AWS bucket that the role
            is authorized to access.
        cloudProvider:
          type: string
          description: Human-readable label that identifies the cloud provider that stores
            this snapshot.
        iamRoleId:
          type: string
          description: Unique 24-hexadecimal character string that identifies the <a
            href='https://www.mongodb.com/docs/atlas/security/set-up-unified-aws-access/'
            target='_blank'>Unified AWS Access role ID</a>  that MongoDB Cloud
            uses to access the AWS S3 bucket.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
    DiskBackupSnapshotRestoreJob:
      type: object
      properties:
        cancelled:
          type: boolean
          description: Flag that indicates whether someone canceled this restore job.
          readOnly: true
        components:
          type: array
          description: Information on the restore job for each replica set in the sharded
            cluster.
          items:
            $ref: "#/components/schemas/DiskBackupBaseRestoreMember"
          readOnly: true
        deliveryType:
          type: string
          description: Human-readable label that categorizes the restore job to create.
        deliveryUrl:
          type: array
          description: 'One or more Uniform Resource Locators (URLs) that point to the
            compressed snapshot files for manual download. MongoDB Cloud returns
            this parameter when `"deliveryType" : "download"`.'
          items:
            type: string
            description: One Uniform Resource Locator that point to the compressed snapshot
              files for manual download.
          readOnly: true
        desiredTimestamp:
          $ref: "#/components/schemas/ApiBSONTimestamp"
        expired:
          type: boolean
          description: Flag that indicates whether the restore job expired.
          readOnly: true
        expiresAt:
          type: string
          format: date-time
          description: Date and time when the restore job expires. This parameter
            expresses its value in the ISO 8601 timestamp format in UTC.
          readOnly: true
        failed:
          type: boolean
          description: Flag that indicates whether the restore job failed.
          readOnly: true
        finishedAt:
          type: string
          format: date-time
          description: Date and time when the restore job completed. This parameter
            expresses its value in the ISO 8601 timestamp format in UTC.
          readOnly: true
        id:
          type: string
          description: Unique 24-hexadecimal character string that identifies the restore
            job.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        oplogInc:
          type: integer
          format: int32
          description: 'Oplog operation number from which you want to restore this
            snapshot. This number represents the second part of an Oplog
            timestamp. The resource returns this parameter when `"deliveryType"
            : "pointInTime"` and **oplogTs** exceeds `0`.'
          example: 1
          minimum: 1
        oplogTs:
          type: integer
          format: int32
          description: 'Date and time from which you want to restore this snapshot. This
            parameter expresses this timestamp in the number of seconds that
            have elapsed since the UNIX epoch. This number represents the first
            part of an Oplog timestamp. The resource returns this parameter when
            `"deliveryType" : "pointInTime"` and **oplogTs** exceeds `0`.'
          minimum: 1199145600
        pointInTimeUTCSeconds:
          type: integer
          format: int32
          description: 'Date and time from which MongoDB Cloud restored this snapshot.
            This parameter expresses this timestamp in the number of seconds
            that have elapsed since the UNIX epoch. The resource returns this
            parameter when `"deliveryType" : "pointInTime"` and
            **pointInTimeUTCSeconds** exceeds `0`.'
          minimum: 1199145600
        snapshotId:
          type: string
          description: Unique 24-hexadecimal character string that identifies the snapshot.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
        targetClusterName:
          type: string
          description: Human-readable label that identifies the target cluster to which
            the restore job restores the snapshot. The resource returns this
            parameter when `"deliveryType":` `"automated"`. Required for
            `automated` and `pointInTime` restore types.
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        targetGroupId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the target
            project for the specified **targetClusterName**. Required for
            `automated` and `pointInTime` restore types.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
        timestamp:
          type: string
          format: date-time
          description: Date and time when MongoDB Cloud took the snapshot associated with
            **snapshotId**. This parameter expresses its value in the ISO 8601
            timestamp format in UTC.
          readOnly: true
      required:
        - deliveryType
    DiskBackupSnapshotSchedule:
      type: object
      properties:
        autoExportEnabled:
          type: boolean
          description: Flag that indicates whether MongoDB Cloud automatically exports
            cloud backup snapshots to the AWS bucket.
        clusterId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the cluster with
            the snapshot you want to return.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        clusterName:
          type: string
          description: Human-readable label that identifies the cluster with the snapshot
            you want to return.
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
          readOnly: true
        copySettings:
          type: array
          description: List that contains a document for each copy setting item in the
            desired backup policy.
          items:
            $ref: "#/components/schemas/DiskBackupCopySetting"
        deleteCopiedBackups:
          type: array
          description: List that contains a document for each deleted copy setting whose
            backup copies you want to delete.
          items:
            $ref: "#/components/schemas/DeleteCopiedBackups"
          writeOnly: true
        export:
          $ref: "#/components/schemas/AutoExportPolicy"
        extraRetentionSettings:
          type: array
          description: List that contains a document for each extra retention setting item
            in the desired backup policy.
          items:
            $ref: "#/components/schemas/ExtraRetentionSetting"
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        nextSnapshot:
          type: string
          format: date-time
          description: Date and time when MongoDB Cloud takes the next snapshot. This
            parameter expresses its value in the ISO 8601 timestamp format in
            UTC.
          readOnly: true
        policies:
          type: array
          description: Rules set for this backup schedule.
          items:
            $ref: "#/components/schemas/AdvancedDiskBackupSnapshotSchedulePolicy"
          maxItems: 1
        referenceHourOfDay:
          type: integer
          format: int32
          description: Hour of day in Coordinated Universal Time (UTC) that represents
            when MongoDB Cloud takes the snapshot.
        referenceMinuteOfHour:
          type: integer
          format: int32
          description: Minute of the **referenceHourOfDay** that represents when MongoDB
            Cloud takes the snapshot.
        restoreWindowDays:
          type: integer
          format: int32
          description: Number of previous days that you can restore back to with
            Continuous Cloud Backup accuracy. You must specify a positive,
            non-zero integer. This parameter applies to continuous cloud backups
            only.
        updateSnapshots:
          type: boolean
          description: Flag that indicates whether to apply the retention changes in the
            updated backup policy to snapshots that MongoDB Cloud took
            previously.
          writeOnly: true
        useOrgAndGroupNamesInExportPrefix:
          type: boolean
          description: Flag that indicates whether to use organization and project names
            instead of organization and project UUIDs in the path to the
            metadata files that MongoDB Cloud uploads to your AWS bucket.
    DiskGBAutoScaling:
      type: object
      description: Setting that enables disk auto-scaling.
      properties:
        enabled:
          type: boolean
          description: Flag that indicates whether this cluster enables disk auto-scaling.
            The maximum memory allowed for the selected cluster tier and the
            oplog size can limit storage auto-scaling.
    EncryptionAtRest:
      type: object
      properties:
        awsKms:
          $ref: "#/components/schemas/AWSKMSConfiguration"
        azureKeyVault:
          $ref: "#/components/schemas/AzureKeyVault"
        googleCloudKms:
          $ref: "#/components/schemas/GoogleCloudKMS"
    EndpointService:
      type: object
      properties:
        cloudProvider:
          type: string
          description: Cloud service provider that serves the requested endpoint service.
          readOnly: true
        errorMessage:
          type: string
          description: Error message returned when requesting private connection resource.
            The resource returns `null` if the request succeeded.
          readOnly: true
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the Private
            Endpoint Service.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        regionName:
          type: string
          description: Cloud provider region that manages this Private Endpoint Service.
          readOnly: true
        status:
          type: string
          description: State of the Private Endpoint Service connection when MongoDB Cloud
            received this request.
          readOnly: true
        endpointServiceName:
          type: string
          description: Unique string that identifies the Amazon Web Services (AWS)
            PrivateLink endpoint service. MongoDB Cloud returns null while it
            creates the endpoint service.
          pattern: ^com\.amazonaws\.vpce\.[a-z-0-9]+\.vpce-svc-[0-9a-f]{17}
          readOnly: true
        interfaceEndpoints:
          type: array
          description: List of strings that identify private endpoint interfaces applied
            to the specified project.
          items:
            type: string
            description: Unique 24-hexadecimal digit string that identifies the interface
              endpoint.
            example: 32b6e34b3d91647abb20e7b8
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
            readOnly: true
          readOnly: true
        privateEndpoints:
          type: array
          description: List of private endpoints assigned to this Azure Private Link
            Service.
          items:
            type: string
            description: Root-relative path to one private endpoint assigned to this Azure
              Private Link Service.
            pattern: ^\/subscriptions\/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\/resource[gG]roups\/([-\w._()]+)\/providers\/Microsoft\.Network\/privateEndpoints\/([-\w._()]+)
            readOnly: true
          readOnly: true
        privateLinkServiceName:
          type: string
          description: Unique string that identifies the Azure Private Link Service that
            MongoDB Cloud manages.
          maxLength: 24
          minLength: 24
          pattern: ^pls_[0-9a-f]{24}$
          readOnly: true
        privateLinkServiceResourceId:
          type: string
          description: Root-relative path that identifies of the Azure Private Link
            Service that MongoDB Cloud manages. Use this value to create a
            private endpoint connection to an Azure VNet.
          example: /subscriptions/ae349d51-d12b-ee3d-2a27-7d53f6479cf0/resourcegroups/KObGGz/providers/Microsoft.Network/privateLinkServices/pls_d1820713f8153388d533e9de
          readOnly: true
        endpointGroupNames:
          type: array
          description: List of Google Cloud network endpoint groups that corresponds to
            the Private Service Connect endpoint service.
          externalDocs:
            description: Google Cloud Forwarding Rule Concepts
            url: https://cloud.google.com/load-balancing/docs/forwarding-rule-concepts
          items:
            type: string
            description: One Google Cloud network endpoint group that corresponds to the
              Private Service Connect endpoint service.
        serviceAttachmentNames:
          type: array
          description: List of Uniform Resource Locators (URLs) that identifies endpoints
            that MongoDB Cloud can use to access one Google Cloud Service across
            a Google Cloud Virtual Private Connection (VPC) network.
          externalDocs:
            description: Google Cloud Private Service Connect Service Attachments
            url: https://cloud.google.com/vpc/docs/private-service-connect#service-attachments
          items:
            type: string
            description: Uniform Resource Locator (URL) that identifies one endpoint that
              MongoDB Cloud can use to access one Google Cloud Service across a
              Google Cloud Virtual Private Connection (VPC) network.
            pattern: https:\/\/([a-z0-9\.]+)+\.[a-z]{2,}(\/[a-z0-9\-]+)+\/projects\/p-[a-z0-9]+\/regions\/[a-z\-0-9]+\/serviceAttachments\/[a-z0-9\-]+
      required:
        - cloudProvider
    EventTypeForNdsGroup:
      type: string
    EventTypeForOrg:
      type: string
    EventViewForNdsGroup:
      type: object
      properties:
        apiKeyId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the [API
            Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that
            triggered the event. If this resource returns this parameter, it
            doesn't return the **userId** parameter.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        created:
          type: string
          format: date-time
          description: Date and time when this event occurred. This parameter expresses
            its value in the <a href="https://en.wikipedia.org/wiki/ISO_8601"
            target="_blank" rel="noopener noreferrer">ISO 8601</a> timestamp
            format in UTC.
          readOnly: true
        eventTypeName:
          $ref: "#/components/schemas/ResourceEventType"
        groupId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the project in
            which the event occurred. The **eventId** identifies the specific
            event.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the event.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        isGlobalAdmin:
          type: boolean
          default: false
          description: Flag that indicates whether a MongoDB employee triggered the
            specified event.
          readOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        orgId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the organization
            to which these events apply.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        publicKey:
          type: string
          format: email
          description: Public part of the [API
            Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that
            triggered the event. If this resource returns this parameter, it
            doesn't return the **username** parameter.
          example: test.user@mongodb.com
          readOnly: true
        raw:
          $ref: "#/components/schemas/raw"
        remoteAddress:
          type: string
          description: IPv4 or IPv6 address from which the user triggered this event.
          example: 216.172.40.186
          pattern: ^((25[0-5]|(2[0-4]|1\d|[1-9]|)\d)(\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$
          readOnly: true
        userId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the console user
            who triggered the event. If this resource returns this parameter, it
            doesn't return the **apiKeyId** parameter.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        username:
          type: string
          format: email
          description: Email address for the user who triggered this event. If this
            resource returns this parameter, it doesn't return the
            **publicApiKey** parameter.
          example: test.user@mongodb.com
          readOnly: true
        alertId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the alert
            associated with the event.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        alertConfigId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the alert
            configuration associated with the **alertId**.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        invoiceId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies of the invoice
            associated with the event.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        paymentId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the invoice
            payment associated with this event.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        shardName:
          type: string
          description: Human-readable label of the shard associated with the event.
          example: event-sh-01
          readOnly: true
        collection:
          type: string
          description: Human-readable label of the collection on which the event occurred.
            The resource returns this parameter when the **eventTypeName**
            includes `DATA_EXPLORER`.
          example: test_collection
          readOnly: true
        database:
          type: string
          description: 'Human-readable label of the database on which this incident
            occurred. The resource returns this parameter when `"eventTypeName"
            : "DATA_EXPLORER"` or `"eventTypeName" : "DATA_EXPLORER_CRUD"`.'
          example: test_db
          readOnly: true
        opType:
          type: string
          description: 'Action that the database attempted to execute when the event
            triggered. The response returns this parameter when `eventTypeName"
            : "DATA_EXPLORER"`.'
          example: insertDocument
          readOnly: true
        port:
          type: integer
          format: int32
          description: IANA port on which the MongoDB process listens for requests.
          example: 27017
          readOnly: true
        replicaSetName:
          type: string
          description: Human-readable label of the replica set associated with the event.
          example: event-replica-set
          readOnly: true
        currentValue:
          $ref: "#/components/schemas/NumberMetricValue"
        metricName:
          type: string
          description: Human-readable label of the metric associated with the **alertId**.
            This field may change type of **currentValue** field.
          readOnly: true
        dbUserUsername:
          type: string
          description: The username of the MongoDB User that was created, deleted, or
            edited.
          example: user1
          readOnly: true
        whitelistEntry:
          type: string
          description: Entry in the list of source host addresses that the API key accepts
            and this event targets.
          example: 0.0.0.0
          readOnly: true
        endpointId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the endpoint
            associated with this event.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        providerEndpointId:
          type: string
          description: Unique identification string that the cloud provider uses to
            identify the private endpoint.
          example: vpce-0d6c248dedef65a25
          readOnly: true
        teamId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the organization
            team associated with this event.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        targetUsername:
          type: string
          format: email
          description: 'Email address for the console user that this event targets. The
            resource returns this parameter when `"eventTypeName" : "USER"`.'
          example: test.user@mongodb.com
          readOnly: true
        resourceId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the resource
            associated with the event.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        resourceType:
          type: string
          description: Unique identifier of resource type.
          example: cluster
    EventViewForOrg:
      type: object
      properties:
        apiKeyId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the [API
            Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that
            triggered the event. If this resource returns this parameter, it
            doesn't return the **userId** parameter.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        created:
          type: string
          format: date-time
          description: Date and time when this event occurred. This parameter expresses
            its value in the <a href="https://en.wikipedia.org/wiki/ISO_8601"
            target="_blank" rel="noopener noreferrer">ISO 8601</a> timestamp
            format in UTC.
          readOnly: true
        eventTypeName:
          $ref: "#/components/schemas/ResourceEventTypeViewForOrg"
        groupId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the project in
            which the event occurred. The **eventId** identifies the specific
            event.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the event.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        isGlobalAdmin:
          type: boolean
          default: false
          description: Flag that indicates whether a MongoDB employee triggered the
            specified event.
          readOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        orgId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the organization
            to which these events apply.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        publicKey:
          type: string
          format: email
          description: Public part of the [API
            Key](https://dochub.mongodb.org/core/atlas-create-prog-api-key) that
            triggered the event. If this resource returns this parameter, it
            doesn't return the **username** parameter.
          example: test.user@mongodb.com
          readOnly: true
        raw:
          $ref: "#/components/schemas/raw"
        remoteAddress:
          type: string
          description: IPv4 or IPv6 address from which the user triggered this event.
          example: 216.172.40.186
          pattern: ^((25[0-5]|(2[0-4]|1\d|[1-9]|)\d)(\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$
          readOnly: true
        userId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the console user
            who triggered the event. If this resource returns this parameter, it
            doesn't return the **apiKeyId** parameter.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        username:
          type: string
          format: email
          description: Email address for the user who triggered this event. If this
            resource returns this parameter, it doesn't return the
            **publicApiKey** parameter.
          example: test.user@mongodb.com
          readOnly: true
        alertId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the alert
            associated with the event.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        alertConfigId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the alert
            configuration associated with the **alertId**.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        invoiceId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies of the invoice
            associated with the event.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        paymentId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the invoice
            payment associated with this event.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        dbUserUsername:
          type: string
          description: The username of the MongoDB User that was created, deleted, or
            edited.
          example: user1
          readOnly: true
        whitelistEntry:
          type: string
          description: Entry in the list of source host addresses that the API key accepts
            and this event targets.
          example: 0.0.0.0
          readOnly: true
        teamId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the organization
            team associated with this event.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        targetUsername:
          type: string
          format: email
          description: 'Email address for the console user that this event targets. The
            resource returns this parameter when `"eventTypeName" : "USER"`.'
          example: test.user@mongodb.com
          readOnly: true
        resourceId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the resource
            associated with the event.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        resourceType:
          type: string
          description: Unique identifier of resource type.
          example: cluster
    ExportStatus:
      type: object
      description: State of the export job for the collections on the replica set only.
      properties:
        exportedCollections:
          type: integer
          format: int32
          description: Number of collections on the replica set that MongoDB Cloud exported.
          readOnly: true
        totalCollections:
          type: integer
          format: int32
          description: Total number of collections on the replica set to export.
          readOnly: true
    ExtraRetentionSetting:
      type: object
      description: extra retention setting item in the desired backup policy.
      properties:
        frequencyType:
          type: string
          description: The frequency type for the extra retention settings for the cluster.
        retentionDays:
          type: integer
          format: int32
          description: The number of extra retention days for the cluster.
    FTSMetric:
      type: object
      description: Measurement of one Atlas Search status when MongoDB Atlas received
        this request.
      properties:
        metricName:
          type: string
          description: Human-readable label that identifies this Atlas Search hardware,
            status, or index measurement.
          readOnly: true
        units:
          type: string
          description: Unit of measurement that applies to this Atlas Search metric.
          readOnly: true
      readOnly: true
      required:
        - metricName
        - units
    FederatedUser:
      type: object
      description: MongoDB Cloud user linked to this federated authentication.
      properties:
        emailAddress:
          type: string
          format: email
          description: Email address of the MongoDB Cloud user linked to the federated
            organization.
        federationSettingsId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the federation
            to which this MongoDB Cloud user belongs.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
        firstName:
          type: string
          description: First or given name that belongs to the MongoDB Cloud user.
        lastName:
          type: string
          description: Last name, family name, or surname that belongs to the MongoDB
            Cloud user.
        userId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies this user.
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
      required:
        - emailAddress
        - federationSettingsId
        - firstName
        - lastName
      title: Federated User
    FederationIdentityProvider:
      type: object
      properties:
        associatedOrgs:
          type: array
          description: List that contains the connected organization configurations
            associated with the identity provider.
          items:
            $ref: "#/components/schemas/ConnectedOrgConfig"
          uniqueItems: true
        createdAt:
          type: string
          format: date-time
          description: Date that the identity provider was created on.
          readOnly: true
        description:
          type: string
          description: The description of the identity provider.
        displayName:
          type: string
          description: Human-readable label that identifies the identity provider.
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the identity
            provider.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        issuerUri:
          type: string
          description: Unique string that identifies the issuer of the SAML Assertion or
            OIDC metadata/discovery document URL.
        oktaIdpId:
          type: string
          description: Unique 20-hexadecimal digit string that identifies the identity
            provider.
          maxLength: 20
          minLength: 20
          pattern: ^([a-f0-9]{20})$
        protocol:
          type: string
          description: The protocol of the identity provider. Either SAML or OIDC.
        updatedAt:
          type: string
          format: date-time
          description: Date that the identity provider was last updated on.
          readOnly: true
        acsUrl:
          type: string
          description: URL that points to where to send the SAML response.
        associatedDomains:
          type: array
          description: List that contains the domains associated with the identity provider.
          items:
            type: string
          uniqueItems: true
        audienceUri:
          type: string
          description: Unique string that identifies the intended audience of the SAML
            assertion.
        pemFileInfo:
          $ref: "#/components/schemas/PemFileInfo"
        requestBinding:
          type: string
          description: SAML Authentication Request Protocol HTTP method binding (POST or
            REDIRECT) that Federated Authentication uses to send the
            authentication request.
        responseSignatureAlgorithm:
          type: string
          description: Signature algorithm that Federated Authentication uses to encrypt
            the identity provider signature.
        slug:
          type: string
          description: Custom SSO Url for the identity provider.
        ssoDebugEnabled:
          type: boolean
          description: Flag that indicates whether the identity provider has SSO debug
            enabled.
        ssoUrl:
          type: string
          description: URL that points to the receiver of the SAML authentication request.
        status:
          type: string
          description: String enum that indicates whether the identity provider is active.
        audience:
          type: string
          description: Identifier of the intended recipient of the token.
        audienceClaim:
          type: array
          deprecated: true
          description: Identifier of the intended recipient of the token. The
            audienceClaim field is deprecated and will be removed in the
            04/17/2024 release, use the audience field instead.
          items:
            type: string
        clientId:
          type: string
          description: Client identifier that is assigned to an application by the
            Identity Provider.
        groupsClaim:
          type: string
          description: Identifier of the claim which contains IdP Group IDs in the token.
        requestedScopes:
          type: array
          description: Scopes that MongoDB applications will request from the
            authorization endpoint.
          items:
            type: string
        userClaim:
          type: string
          description: Identifier of the claim which contains the user ID in the token.
      required:
        - id
        - oktaIdpId
    FederationIdentityProviderUpdate:
      type: object
      properties:
        description:
          type: string
          description: The description of the identity provider.
        displayName:
          type: string
          description: Human-readable label that identifies the identity provider.
          maxLength: 50
          minLength: 1
        issuerUri:
          type: string
          description: Unique string that identifies the issuer of the SAML Assertion or
            OIDC metadata/discovery document URL.
          example: urn:idp:default
        protocol:
          type: string
          description: The protocol of the identity provider. Either SAML or OIDC.
        associatedDomains:
          type: array
          description: List that contains the domains associated with the identity provider.
          items:
            type: string
          uniqueItems: true
        pemFileInfo:
          $ref: "#/components/schemas/PemFileInfoUpdate"
        requestBinding:
          type: string
          description: SAML Authentication Request Protocol HTTP method binding (POST or
            REDIRECT) that Federated Authentication uses to send the
            authentication request.
        responseSignatureAlgorithm:
          type: string
          description: Signature algorithm that Federated Authentication uses to encrypt
            the identity provider signature.
        slug:
          type: string
          description: Custom SSO Url for the identity provider.
        ssoDebugEnabled:
          type: boolean
          description: Flag that indicates whether the identity provider has SSO debug
            enabled.
        ssoUrl:
          type: string
          description: URL that points to the receiver of the SAML authentication request.
          example: https://example.com
        status:
          type: string
          description: String enum that indicates whether the identity provider is active.
        audience:
          type: string
          description: Identifier of the intended recipient of the token.
        audienceClaim:
          type: array
          deprecated: true
          description: Identifier of the intended recipient of the token. The
            audienceClaim field is deprecated and will be removed in the
            04/17/2024 release, use the audience field instead.
          items:
            type: string
        clientId:
          type: string
          description: Client identifier that is assigned to an application by the
            Identity Provider.
        groupsClaim:
          type: string
          description: Identifier of the claim which contains IdP Group IDs in the token.
        requestedScopes:
          type: array
          description: Scopes that MongoDB applications will request from the
            authorization endpoint.
          items:
            type: string
        userClaim:
          type: string
          description: Identifier of the claim which contains the user ID in the token.
    FederationOidcIdentityProvider:
      type: object
      properties:
        associatedOrgs:
          type: array
          description: List that contains the connected organization configurations
            associated with the identity provider.
          items:
            $ref: "#/components/schemas/ConnectedOrgConfig"
          uniqueItems: true
        audience:
          type: string
          description: Identifier of the intended recipient of the token.
        audienceClaim:
          type: array
          deprecated: true
          description: Identifier of the intended recipient of the token. The
            audienceClaim field is deprecated and will be removed in the
            04/17/2024 release, use the audience field instead.
          items:
            type: string
        createdAt:
          type: string
          format: date-time
          description: Date that the identity provider was created on.
          readOnly: true
        description:
          type: string
          description: The description of the identity provider.
        displayName:
          type: string
          description: Human-readable label that identifies the identity provider.
        groupsClaim:
          type: string
          description: Identifier of the claim which contains IdP Group IDs in the token.
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the identity
            provider.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        issuerUri:
          type: string
          description: Unique string that identifies the issuer of the SAML Assertion or
            OIDC metadata/discovery document URL.
        oktaIdpId:
          type: string
          description: Unique 20-hexadecimal digit string that identifies the identity
            provider.
          maxLength: 20
          minLength: 20
          pattern: ^([a-f0-9]{20})$
        protocol:
          type: string
          description: The protocol of the identity provider. Either SAML or OIDC.
        updatedAt:
          type: string
          format: date-time
          description: Date that the identity provider was last updated on.
          readOnly: true
        userClaim:
          type: string
          description: Identifier of the claim which contains the user ID in the token.
        associatedDomains:
          type: array
          description: List that contains the domains associated with the identity provider.
          items:
            type: string
          uniqueItems: true
        clientId:
          type: string
          description: Client identifier that is assigned to an application by the
            Identity Provider.
        requestedScopes:
          type: array
          description: Scopes that MongoDB applications will request from the
            authorization endpoint.
          items:
            type: string
      required:
        - id
        - oktaIdpId
    FederationOidcIdentityProviderUpdate:
      type: object
      properties:
        audience:
          type: string
          description: Identifier of the intended recipient of the token.
        audienceClaim:
          type: array
          deprecated: true
          description: Identifier of the intended recipient of the token. The
            audienceClaim field is deprecated and will be removed in the
            04/17/2024 release, use the audience field instead.
          items:
            type: string
        description:
          type: string
          description: The description of the identity provider.
        displayName:
          type: string
          description: Human-readable label that identifies the identity provider.
          maxLength: 50
          minLength: 1
        groupsClaim:
          type: string
          description: Identifier of the claim which contains IdP Group IDs in the token.
        issuerUri:
          type: string
          description: Unique string that identifies the issuer of the SAML Assertion or
            OIDC metadata/discovery document URL.
          example: urn:idp:default
        protocol:
          type: string
          description: The protocol of the identity provider. Either SAML or OIDC.
        userClaim:
          type: string
          description: Identifier of the claim which contains the user ID in the token.
        associatedDomains:
          type: array
          description: List that contains the domains associated with the identity provider.
          items:
            type: string
          uniqueItems: true
        clientId:
          type: string
          description: Client identifier that is assigned to an application by the
            Identity Provider.
        requestedScopes:
          type: array
          description: Scopes that MongoDB applications will request from the
            authorization endpoint.
          items:
            type: string
    FieldTransformation:
      type: object
      description: Field Transformations during ingestion of a Data Lake Pipeline.
      properties:
        field:
          type: string
          description: Key in the document.
        type:
          type: string
          description: Type of transformation applied during the export of the namespace
            in a Data Lake Pipeline.
      title: Field Transformation
    GCPConsumerForwardingRule:
      type: object
      properties:
        endpointName:
          type: string
          description: Human-readable label that identifies the Google Cloud consumer
            forwarding rule that you created.
          externalDocs:
            description: Google Cloud Forwarding Rule Concepts
            url: https://cloud.google.com/load-balancing/docs/forwarding-rule-concepts
          readOnly: true
        ipAddress:
          type: string
          description: One Private Internet Protocol version 4 (IPv4) address to which
            this Google Cloud consumer forwarding rule resolves.
          pattern: ^((25[0-5]|(2[0-4]|1\d|[1-9]|)\d)(\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$
          readOnly: true
        status:
          type: string
          description: State of the MongoDB Cloud endpoint group when MongoDB Cloud
            received this request.
          readOnly: true
    GeoSharding:
      type: object
      properties:
        customZoneMapping:
          type: object
          additionalProperties:
            type: string
            description: >-
              List that contains comma-separated key value pairs to map zones to
              geographic regions. These pairs map an ISO 3166-1a2 location code,
              with an ISO 3166-2 subdivision code when possible, to a unique
              24-hexadecimal string that identifies the custom zone.


              This parameter returns an empty object if no custom zones exist.
            readOnly: true
          description: >-
            List that contains comma-separated key value pairs to map zones to
            geographic regions. These pairs map an ISO 3166-1a2 location code,
            with an ISO 3166-2 subdivision code when possible, to a unique
            24-hexadecimal string that identifies the custom zone.


            This parameter returns an empty object if no custom zones exist.
          readOnly: true
        managedNamespaces:
          type: array
          description: List that contains a namespace for a Global Cluster. MongoDB Cloud
            manages this cluster.
          items:
            $ref: "#/components/schemas/ManagedNamespaces"
          readOnly: true
    GoogleCloudKMS:
      type: object
      description: Details that define the configuration of Encryption at Rest using
        Google Cloud Key Management Service (KMS).
      externalDocs:
        description: Google Cloud Key Management Service
        url: https://www.mongodb.com/docs/atlas/security-gcp-kms/
      properties:
        enabled:
          type: boolean
          description: Flag that indicates whether someone enabled encryption at rest for
            the specified  project. To disable encryption at rest using customer
            key management and remove the configuration details, pass only this
            parameter with a value of `false`.
        keyVersionResourceID:
          type: string
          description: Resource path that displays the key version resource ID for your
            Google Cloud KMS.
          example: projects/my-project-common-0/locations/us-east4/keyRings/my-key-ring-0/cryptoKeys/my-key-0/cryptoKeyVersions/1
        serviceAccountKey:
          type: string
          description: JavaScript Object Notation (JSON) object that contains the Google
            Cloud Key Management Service (KMS). Format the JSON as a string and
            not as an object.
          externalDocs:
            description: Google Cloud Authentication
            url: https://cloud.google.com/docs/authentication/getting-started
          writeOnly: true
        valid:
          type: boolean
          description: Flag that indicates whether the Google Cloud Key Management Service
            (KMS) encryption key can encrypt and decrypt data.
          readOnly: true
    GreaterThanRawThreshold:
      type: object
      description: A Limit that triggers an alert when greater than a number.
      properties:
        operator:
          type: string
          description: Comparison operator to apply when checking the current metric value.
        threshold:
          type: integer
          format: int32
          description: Value of metric that, when exceeded, triggers an alert.
        units:
          $ref: "#/components/schemas/RawMetricUnits"
      title: Greater Than Raw Threshold
    Group:
      type: object
      properties:
        clusterCount:
          type: integer
          format: int64
          description: Quantity of MongoDB Cloud clusters deployed in this project.
          readOnly: true
        created:
          type: string
          format: date-time
          description: Date and time when MongoDB Cloud created this project. This
            parameter expresses its value in the ISO 8601 timestamp format in
            UTC.
          readOnly: true
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the MongoDB
            Cloud project.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        name:
          type: string
          description: Human-readable label that identifies the project included in the
            MongoDB Cloud organization.
          maxLength: 64
          minLength: 1
          pattern: ^[\p{L}\p{N}\-_.(),:&@+']{1,64}$
        orgId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the MongoDB
            Cloud organization to which the project belongs.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
        regionUsageRestrictions:
          type: string
          default: COMMERCIAL_FEDRAMP_REGIONS_ONLY
          description: >-
            Applies to Atlas for Government only.


            In Commercial Atlas, this field will be rejected in requests and missing in responses.


            This field sets restrictions on available regions in the project.


            | Value                             | Available Regions |

            |-----------------------------------|------------|

            | `COMMERCIAL_FEDRAMP_REGIONS_ONLY` | Only allows deployments in FedRAMP Moderate regions.|

            | `GOV_REGIONS_ONLY`                | Only allows deployments in GovCloud regions.|
          externalDocs:
            url: https://www.mongodb.com/docs/atlas/government/overview/supported-regions/#supported-cloud-providers-and-regions
        tags:
          type: array
          description: List that contains key-value pairs between 1 to 255 characters in
            length for tagging and categorizing the project.
          externalDocs:
            description: Resource Tags
            url: https://www.mongodb.com/docs/atlas/tags
          items:
            $ref: "#/components/schemas/ResourceTag"
        withDefaultAlertsSettings:
          type: boolean
          description: Flag that indicates whether to create the project with default
            alert settings.
          writeOnly: true
      required:
        - clusterCount
        - created
        - name
        - orgId
    GroupAlertsConfig:
      type: object
      properties:
        created:
          type: string
          format: date-time
          description: Date and time when MongoDB Cloud created the alert configuration.
            This parameter expresses its value in the <a
            href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank"
            rel="noopener noreferrer">ISO 8601</a> timestamp format in UTC.
          readOnly: true
        enabled:
          type: boolean
          default: false
          description: Flag that indicates whether someone enabled this alert
            configuration for the specified project.
        eventTypeName:
          $ref: "#/components/schemas/ServerlessEventTypeViewAlertable"
        groupId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the project that
            owns this alert configuration.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies this alert
            configuration.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        matchers:
          type: array
          description: >-
            No matchers are available for these alert types. The list is always
            empty.


            Alternatively:

            List of rules that determine whether MongoDB Cloud checks an object for the alert configuration. You can filter using the matchers array if the **eventTypeName** specifies an event for a host, replica set, or sharded cluster.


            Alternatively:

            List of rules that determine whether MongoDB Cloud checks an object for the alert configuration. You can filter using the matchers array if the **eventTypeName** specifies an event for a host, replica set, or sharded cluster.


            Alternatively:

            No matchers are available for these alert types. The list is always empty.


            Alternatively:

            List of rules that determine whether MongoDB Cloud checks an object for the alert configuration. You can filter using the matchers array if the **eventTypeName** specifies an event for a host, replica set, or sharded cluster.


            Alternatively:

            No matchers are available for these alert types. The list is always empty.


            Alternatively:

            No matchers are available for these alert types. The list is always empty.


            Alternatively:

            List of rules that determine whether MongoDB Cloud checks an object for the alert configuration. You can filter using the matchers array if the **eventTypeName** specifies an event for a host, replica set, or sharded cluster.


            Alternatively:

            List of rules that determine whether MongoDB Cloud checks an object for the alert configuration. You can filter using the matchers array if the **eventTypeName** specifies an event for a host, replica set, or sharded cluster.


            Alternatively:

            No matchers are available for these alert types. The list is always empty.


            Alternatively:

            List of rules that determine whether MongoDB Cloud checks an object for the alert configuration. You can filter using the matchers array if the **eventTypeName** specifies an event for a host, replica set, or sharded cluster.


            Alternatively:

            List of rules that determine whether MongoDB Cloud checks an object for the alert configuration. You can filter using the matchers array if the **eventTypeName** specifies an event for a host, replica set, or sharded cluster.


            Alternatively:

            No matchers are available for these alert types. The list is always empty.
          items:
            type: object
          readOnly: true
        notifications:
          type: array
          description: List that contains the targets that MongoDB Cloud sends
            notifications.
          items:
            $ref: "#/components/schemas/AlertsNotificationRootForGroup"
        updated:
          type: string
          format: date-time
          description: Date and time when someone last updated this alert configuration.
            This parameter expresses its value in the <a
            href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank"
            rel="noopener noreferrer">ISO 8601</a> timestamp format in UTC.
          readOnly: true
        metricThreshold:
          $ref: "#/components/schemas/ServerlessMetricThreshold"
        threshold:
          $ref: "#/components/schemas/GreaterThanRawThreshold"
    GroupIPAddresses:
      type: object
      description: List of IP addresses in a project.
      properties:
        groupId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the MongoDB
            Cloud project.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        services:
          $ref: "#/components/schemas/GroupService"
      title: Group IP Address
    GroupInvitation:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          description: Date and time when MongoDB Cloud sent the invitation. This
            parameter expresses its value in ISO 8601 format in UTC.
          readOnly: true
        expiresAt:
          type: string
          format: date-time
          description: Date and time when MongoDB Cloud expires the invitation. This
            parameter expresses its value in ISO 8601 format in UTC.
          readOnly: true
        groupId:
          type: string
          description: Unique 24-hexadecimal character string that identifies the project.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        groupName:
          type: string
          description: Human-readable label that identifies the project to which you
            invited the MongoDB Cloud user.
          maxLength: 64
          minLength: 1
          pattern: ^[\p{L}\p{N}\-_.(),:&@+']{1,64}$
          readOnly: true
        id:
          type: string
          description: Unique 24-hexadecimal character string that identifies the
            invitation.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        inviterUsername:
          type: string
          format: email
          description: Email address of the MongoDB Cloud user who sent the invitation.
          readOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        roles:
          type: array
          description: One or more organization or project level roles to assign to the
            MongoDB Cloud user.
          items:
            type: string
          uniqueItems: true
        username:
          type: string
          format: email
          description: Email address of the MongoDB Cloud user invited to join the project.
          readOnly: true
    GroupInvitationRequest:
      type: object
      properties:
        roles:
          type: array
          description: One or more project level roles to assign to the MongoDB Cloud user.
          items:
            type: string
          uniqueItems: true
        username:
          type: string
          format: email
          description: Email address of the MongoDB Cloud user invited to the specified
            project.
    GroupInvitationUpdateRequest:
      type: object
      properties:
        roles:
          type: array
          description: One or more organization or project level roles to assign to the
            MongoDB Cloud user.
          items:
            type: string
          uniqueItems: true
    GroupMaintenanceWindow:
      type: object
      properties:
        autoDeferOnceEnabled:
          type: boolean
          description: Flag that indicates whether MongoDB Cloud should defer all
            maintenance windows for one week after you enable them.
        dayOfWeek:
          type: integer
          format: int32
          description: >
            One-based integer that represents the day of the week that the
            maintenance window starts.


            | Value | Day of Week |

            |---|---|

            | `1` | Sunday |

            | `2` | Monday |

            | `3` | Tuesday |

            | `4` | Wednesday |

            | `5` | Thursday |

            | `6` | Friday |

            | `7` | Saturday |
          maximum: 7
          minimum: 1
        hourOfDay:
          type: integer
          format: int32
          description: Zero-based integer that represents the hour of the of the day that
            the maintenance window starts according to a 24-hour clock. Use `0`
            for midnight and `12` for noon.
          maximum: 23
          minimum: 0
        numberOfDeferrals:
          type: integer
          format: int32
          description: Number of times the current maintenance event for this project has
            been deferred.
          readOnly: true
        startASAP:
          type: boolean
          description: Flag that indicates whether MongoDB Cloud starts the maintenance
            window immediately upon receiving this request. To start the
            maintenance window immediately for your project, MongoDB Cloud must
            have maintenance scheduled and you must set a maintenance window.
            This flag resets to `false` after MongoDB Cloud completes
            maintenance.
      required:
        - dayOfWeek
    GroupRole:
      type: object
      properties:
        groupId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the project to
            which this role belongs.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
        groupRole:
          type: string
          description: >+
            Human-readable label that identifies the collection of privileges
            that MongoDB Cloud grants a specific API key, MongoDB Cloud user, or
            MongoDB Cloud team. These roles include project-level roles.


            Project Roles


            * GROUP_CLUSTER_MANAGER

            * GROUP_DATA_ACCESS_ADMIN

            * GROUP_DATA_ACCESS_READ_ONLY

            * GROUP_DATA_ACCESS_READ_WRITE

            * GROUP_OWNER

            * GROUP_READ_ONLY

            * GROUP_SEARCH_INDEX_EDITOR

            * GROUP_STREAM_PROCESSING_OWNER

    GroupService:
      type: object
      description: List of IP addresses in a project categorized by services.
      properties:
        clusters:
          type: array
          description: IP addresses of clusters.
          items:
            $ref: "#/components/schemas/ClusterIPAddresses"
          readOnly: true
      readOnly: true
      title: Group Service IP Addresses
    GroupSettings:
      type: object
      description: Collection of settings that configures the project.
      properties:
        isCollectDatabaseSpecificsStatisticsEnabled:
          type: boolean
          description: Flag that indicates whether to collect database-specific
            metrics  for the specified project.
        isDataExplorerEnabled:
          type: boolean
          description: Flag that indicates whether to enable the Data Explorer for the
            specified project.
        isExtendedStorageSizesEnabled:
          type: boolean
          description: Flag that indicates whether to enable extended storage sizes  for
            the specified project.
        isPerformanceAdvisorEnabled:
          type: boolean
          description: Flag that indicates whether to enable the Performance Advisor and
            Profiler  for the specified project.
        isRealtimePerformancePanelEnabled:
          type: boolean
          description: Flag that indicates whether to enable the Real Time Performance
            Panel for the specified project.
        isSchemaAdvisorEnabled:
          type: boolean
          description: Flag that indicates whether to enable the Schema Advisor for the
            specified project.
    GroupUpdate:
      type: object
      description: Request view to update the group.
      properties:
        name:
          type: string
          description: Human-readable label that identifies the project included in the
            MongoDB Cloud organization.
        tags:
          type: array
          description: List that contains key-value pairs between 1 to 255 characters in
            length for tagging and categorizing the project.
          externalDocs:
            description: Resource Tags
            url: https://www.mongodb.com/docs/atlas/tags
          items:
            $ref: "#/components/schemas/ResourceTag"
    HardwareSpec:
      type: object
      description: Hardware specifications for all electable nodes deployed in the
        region. Electable nodes can become the primary and can enable local
        reads. If you don't specify this option, MongoDB Cloud deploys no
        electable nodes to the region.
      properties:
        diskIOPS:
          type: integer
          format: int32
          description: >-
            Target throughput desired for storage attached to your
            AWS-provisioned cluster. Change this parameter only if you:


            - set `"replicationSpecs[n].regionConfigs[m].providerName" : "AWS"`.

            - set `"replicationSpecs[n].regionConfigs[m].electableSpecs.instanceSize" : "M30"` or greater not including `Mxx_NVME` tiers.


            The maximum input/output operations per second (IOPS) depend on the selected **.instanceSize** and **.diskSizeGB**.

            This parameter defaults to the cluster tier's standard IOPS value.

            Changing this value impacts cluster cost.

            MongoDB Cloud enforces minimum ratios of storage capacity to system memory for given cluster tiers. This keeps cluster performance consistent with large datasets.


            - Instance sizes `M10` to `M40` have a ratio of disk capacity to system memory of 60:1.

            - Instance sizes greater than `M40` have a ratio of 120:1.
        ebsVolumeType:
          type: string
          default: STANDARD
          description: >-
            Type of storage you want to attach to your AWS-provisioned cluster.


            - `STANDARD` volume types can't exceed the default input/output operations per second (IOPS) rate for the selected volume size. 


            - `PROVISIONED` volume types must fall within the allowable IOPS range for the selected volume size. You must set this value to (`PROVISIONED`) for NVMe clusters.
        instanceSize:
          type: string
          description: Hardware specification for the instance sizes in this region. Each
            instance size has a default storage and memory capacity. The
            instance size you select applies to all the data-bearing hosts in
            your instance size.
          title: Tenant Instance Sizes
        nodeCount:
          type: integer
          format: int32
          description: Number of nodes of the given type for MongoDB Cloud to deploy to
            the region.
    InboundControlPlaneCloudProviderIPAddresses:
      type: object
      description: List of inbound IP addresses to the Atlas control plane,
        categorized by cloud provider. If your application allows outbound HTTP
        requests only to specific IP addresses, you must allow access to the
        following IP addresses so that your API requests can reach the Atlas
        control plane.
      properties:
        aws:
          type: object
          additionalProperties:
            type: array
            description: Control plane IP addresses in AWS. Each key identifies an Amazon
              Web Services (AWS) region. Each value identifies control plane IP
              addresses in the AWS region.
            items:
              type: string
              description: Control plane IP addresses in AWS. Each key identifies an Amazon
                Web Services (AWS) region. Each value identifies control plane
                IP addresses in the AWS region.
              readOnly: true
            readOnly: true
          description: Control plane IP addresses in AWS. Each key identifies an Amazon
            Web Services (AWS) region. Each value identifies control plane IP
            addresses in the AWS region.
          readOnly: true
        azure:
          type: object
          additionalProperties:
            type: array
            description: Control plane IP addresses in Azure. Each key identifies an Azure
              region. Each value identifies control plane IP addresses in the
              Azure region.
            items:
              type: string
              description: Control plane IP addresses in Azure. Each key identifies an Azure
                region. Each value identifies control plane IP addresses in the
                Azure region.
              readOnly: true
            readOnly: true
          description: Control plane IP addresses in Azure. Each key identifies an Azure
            region. Each value identifies control plane IP addresses in the
            Azure region.
          readOnly: true
        gcp:
          type: object
          additionalProperties:
            type: array
            description: Control plane IP addresses in GCP. Each key identifies a Google
              Cloud (GCP) region. Each value identifies control plane IP
              addresses in the GCP region.
            items:
              type: string
              description: Control plane IP addresses in GCP. Each key identifies a Google
                Cloud (GCP) region. Each value identifies control plane IP
                addresses in the GCP region.
              readOnly: true
            readOnly: true
          description: Control plane IP addresses in GCP. Each key identifies a Google
            Cloud (GCP) region. Each value identifies control plane IP addresses
            in the GCP region.
          readOnly: true
      readOnly: true
      title: Inbound Control Plane IP Addresses By Cloud Provider
    IndexOptions:
      type: object
      description: One or more settings that determine how the MongoDB Cloud creates
        this MongoDB index.
      externalDocs:
        description: Index Options
        url: https://docs.mongodb.com/manual/reference/method/db.collection.createIndex/#options
      properties:
        2dsphereIndexVersion:
          type: integer
          format: int32
          default: 3
          description: Index version number applied to the 2dsphere index. MongoDB 3.2 and
            later use version 3. Use this option to override the default version
            number. This option applies to the **2dsphere** index type only.
        background:
          type: boolean
          default: false
          description: Flag that indicates whether MongoDB should build the index in the
            background. This applies to MongoDB databases running feature
            compatibility version 4.0 or earlier. MongoDB databases running FCV
            4.2 or later build indexes using an optimized build process. This
            process holds the exclusive lock only at the beginning and end of
            the build process. The rest of the build process yields to
            interleaving read and write operations. MongoDB databases running
            FCV 4.2 or later ignore this option. This option applies to all
            index types.
        bits:
          type: integer
          format: int32
          default: 26
          description: Number of precision applied to the stored geohash value of the
            location data. This option applies to the **2d** index type only.
        bucketSize:
          type: integer
          format: int32
          description: >-
            Number of units within which to group the location values. You could
            group in the same bucket those location values within the specified
            number of units to each other. This option applies to the
            geoHaystack index type only.


            MongoDB 5.0 removed geoHaystack Indexes and the `geoSearch` command.
        columnstoreProjection:
          type: object
          additionalProperties:
            type: integer
            format: int32
            description: >-
              The columnstoreProjection document allows to include or exclude
              subschemas schema. One cannot combine inclusion and exclusion
              statements. Accordingly, the <value> can be either of the
              following:

              1 or true to include the field and recursively all fields it is a prefix of in the index

              0 or false to exclude the field and recursively all fields it is a prefix of from the index.
          description: >-
            The columnstoreProjection document allows to include or exclude
            subschemas schema. One cannot combine inclusion and exclusion
            statements. Accordingly, the <value> can be either of the following:

            1 or true to include the field and recursively all fields it is a prefix of in the index

            0 or false to exclude the field and recursively all fields it is a prefix of from the index.
        default_language:
          type: string
          default: english
          description: Human language that determines the list of stop words and the rules
            for the stemmer and tokenizer. This option accepts the supported
            languages using its name in lowercase english or the ISO 639-2 code.
            If you set this parameter to `"none"`, then the text search uses
            simple tokenization with no list of stop words and no stemming. This
            option applies to the **text** index type only.
        expireAfterSeconds:
          type: integer
          format: int32
          description: Number of seconds that MongoDB retains documents in a Time To Live
            (TTL) index.
        hidden:
          type: boolean
          default: false
          description: Flag that determines whether the index is hidden from the query
            planner. A hidden index is not evaluated as part of the query plan
            selection.
        language_override:
          type: string
          default: language
          description: Human-readable label that identifies the document parameter that
            contains the override language for the document. This option applies
            to the **text** index type only.
        max:
          type: integer
          format: int32
          default: 180
          description: Upper inclusive boundary to limit the longitude and latitude
            values. This option applies to the 2d index type only.
        min:
          type: integer
          format: int32
          default: -180
          description: Lower inclusive boundary to limit the longitude and latitude
            values. This option applies to the 2d index type only.
        name:
          type: string
          description: Human-readable label that identifies this index. This option
            applies to all index types.
        partialFilterExpression:
          type: object
          additionalProperties:
            description: >-
              Rules that limit the documents that the index references to a
              filter expression. All MongoDB index types accept a
              **partialFilterExpression** option. **partialFilterExpression**
              can include following expressions:


              - equality (`"parameter" : "value"` or using the `$eq` operator)

              - `"$exists": true`

              , maximum: `$gt`, `$gte`, `$lt`, `$lte` comparisons

              - `$type`

              - `$and` (top-level only)
               This option applies to all index types.
          description: >-
            Rules that limit the documents that the index references to a filter
            expression. All MongoDB index types accept a
            **partialFilterExpression** option. **partialFilterExpression** can
            include following expressions:


            - equality (`"parameter" : "value"` or using the `$eq` operator)

            - `"$exists": true`

            , maximum: `$gt`, `$gte`, `$lt`, `$lte` comparisons

            - `$type`

            - `$and` (top-level only)
             This option applies to all index types.
        sparse:
          type: boolean
          default: false
          description: >-
            Flag that indicates whether the index references documents that only
            have the specified parameter. These indexes use less space but
            behave differently in some situations like when sorting. The
            following index types default to sparse and ignore this option:
            `2dsphere`, `2d`, `geoHaystack`, `text`.


            Compound indexes that includes one or more indexes with `2dsphere` keys alongside other key types, only the `2dsphere` index parameters determine which documents the index references. If you run MongoDB 3.2 or later, use partial indexes. This option applies to all index types.
        storageEngine:
          type: object
          additionalProperties:
            description: 'Storage engine set for the specific index. This value can be set
              only at creation. This option uses the following format:
              `"storageEngine" : { "<storage-engine-name>" : "<options>" }`
              MongoDB validates storage engine configuration options when
              creating indexes. To support replica sets with members with
              different storage engines, MongoDB logs these options to the oplog
              during replication. This option applies to all index types.'
            externalDocs:
              description: MongoDB Server Storage Engines
              url: https://docs.mongodb.com/manual/core/storage-engines/
          description: 'Storage engine set for the specific index. This value can be set
            only at creation. This option uses the following format:
            `"storageEngine" : { "<storage-engine-name>" : "<options>" }`
            MongoDB validates storage engine configuration options when creating
            indexes. To support replica sets with members with different storage
            engines, MongoDB logs these options to the oplog during replication.
            This option applies to all index types.'
          externalDocs:
            description: MongoDB Server Storage Engines
            url: https://docs.mongodb.com/manual/core/storage-engines/
        textIndexVersion:
          type: integer
          format: int32
          default: 3
          description: Version applied to this text index. MongoDB 3.2 and later use
            version `3`. Use this option to override the default version number.
            This option applies to the **text** index type only.
        unique:
          type: boolean
          default: false
          description: "Flag that indicates whether this index can accept insertion or
            update of documents when the index key value matches an existing
            index key value. Set `\"unique\" : true` to set this index as
            unique. You can't set a hashed index to be unique. This option
            applies to all index types. This option is unsupported for rolling
            indexes."
        weights:
          type: object
          additionalProperties:
            description: Relative importance to place upon provided index parameters. This
              object expresses this as key/value pairs of index parameter and
              weight to apply to that parameter. You can specify weights for
              some or all the indexed parameters. The weight must be an integer
              between 1 and 99,999. MongoDB 5.0 and later can apply **weights**
              to **text** indexes only.
          description: Relative importance to place upon provided index parameters. This
            object expresses this as key/value pairs of index parameter and
            weight to apply to that parameter. You can specify weights for some
            or all the indexed parameters. The weight must be an integer between
            1 and 99,999. MongoDB 5.0 and later can apply **weights** to
            **text** indexes only.
      writeOnly: true
    IngestionPipelineRun:
      type: object
      description: Run details of a Data Lake Pipeline.
      properties:
        _id:
          type: string
          description: Unique 24-hexadecimal character string that identifies a Data Lake
            Pipeline run.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        backupFrequencyType:
          type: string
          description: Backup schedule interval of the Data Lake Pipeline.
          readOnly: true
        createdDate:
          type: string
          format: date-time
          description: Timestamp that indicates when the pipeline run was created.
          readOnly: true
        datasetName:
          type: string
          description: Human-readable label that identifies the dataset that Atlas
            generates during this pipeline run. You can use this dataset as a
            `dataSource` in a Federated Database collection.
          example: v1$atlas$snapshot$Cluster0$myDatabase$myCollection$19700101T000000Z
          readOnly: true
        datasetRetentionPolicy:
          $ref: "#/components/schemas/DatasetRetentionPolicy"
        groupId:
          type: string
          description: Unique 24-hexadecimal character string that identifies the project.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        lastUpdatedDate:
          type: string
          format: date-time
          description: Timestamp that indicates the last time that the pipeline run was
            updated.
          readOnly: true
        phase:
          type: string
          description: Processing phase of the Data Lake Pipeline.
          readOnly: true
        pipelineId:
          type: string
          description: Unique 24-hexadecimal character string that identifies a Data Lake
            Pipeline.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        scheduledDeletionDate:
          type: string
          format: date-time
          description: Timestamp that indicates when the pipeline run will expire and its
            dataset will be deleted.
          readOnly: true
        snapshotId:
          type: string
          description: Unique 24-hexadecimal character string that identifies the snapshot
            of a cluster.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        state:
          type: string
          description: State of the pipeline run.
          readOnly: true
        stats:
          $ref: "#/components/schemas/PipelineRunStats"
      title: Data Lake Pipeline Run
    IngestionSink:
      type: object
      description: Ingestion destination of a Data Lake Pipeline.
      properties:
        type:
          type: string
          description: Type of ingestion destination of this Data Lake Pipeline.
          readOnly: true
        metadataProvider:
          type: string
          description: Target cloud provider for this Data Lake Pipeline.
        metadataRegion:
          type: string
          description: Target cloud provider region for this Data Lake Pipeline.
          externalDocs:
            description: Supported cloud provider regions
            url: https://www.mongodb.com/docs/datalake/limitations
        partitionFields:
          type: array
          description: Ordered fields used to physically organize data in the destination.
          items:
            $ref: "#/components/schemas/DataLakePipelinesPartitionField"
      title: Ingestion Destination
    IngestionSource:
      type: object
      description: Ingestion Source of a Data Lake Pipeline.
      properties:
        type:
          type: string
          description: Type of ingestion source of this Data Lake Pipeline.
        clusterName:
          type: string
          description: Human-readable name that identifies the cluster.
        collectionName:
          type: string
          description: Human-readable name that identifies the collection.
        databaseName:
          type: string
          description: Human-readable name that identifies the database.
        groupId:
          type: string
          description: Unique 24-hexadecimal character string that identifies the project.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        policyItemId:
          type: string
          description: Unique 24-hexadecimal character string that identifies a policy item.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
      title: Ingestion Source
    InvoiceLineItem:
      type: object
      description: One service included in this invoice.
      properties:
        clusterName:
          type: string
          description: Human-readable label that identifies the cluster that incurred the
            charge.
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
          readOnly: true
        created:
          type: string
          format: date-time
          description: Date and time when MongoDB Cloud created this line item. This
            parameter expresses its value in the ISO 8601 timestamp format in
            UTC.
          readOnly: true
        discountCents:
          type: integer
          format: int64
          description: Sum by which MongoDB discounted this line item. MongoDB Cloud
            expresses this value in cents (100ths of one US Dollar). The
            resource returns this parameter when a discount applies.
          readOnly: true
        endDate:
          type: string
          format: date-time
          description: Date and time when when MongoDB Cloud finished charging for this
            line item. This parameter expresses its value in the ISO 8601
            timestamp format in UTC.
          readOnly: true
        groupId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the project
            associated to this line item.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        groupName:
          type: string
          description: Human-readable label that identifies the project.
        note:
          type: string
          description: Comment that applies to this line item.
          readOnly: true
        percentDiscount:
          type: number
          format: float
          description: Percentage by which MongoDB discounted this line item. The resource
            returns this parameter when a discount applies.
          readOnly: true
        quantity:
          type: number
          format: double
          description: Number of units included for the line item. These can be
            expressions of storage (GB), time (hours), or other units.
          readOnly: true
        sku:
          type: string
          description: Human-readable description of the service that this line item
            provided. This Stock Keeping Unit (SKU) could be the instance type,
            a support charge, advanced security, or another service.
          readOnly: true
        startDate:
          type: string
          format: date-time
          description: Date and time when MongoDB Cloud began charging for this line item.
            This parameter expresses its value in the ISO 8601 timestamp format
            in UTC.
          readOnly: true
        stitchAppName:
          type: string
          description: Human-readable label that identifies the Atlas App Services
            application associated with this line item.
          externalDocs:
            description: Create a new Atlas App Service
            url: https://www.mongodb.com/docs/atlas/app-services/manage-apps/create/create-with-ui/
          readOnly: true
        tags:
          type: object
          additionalProperties:
            type: array
            description: A map of key-value pairs corresponding to the tags associated with
              the line item resource.
            items:
              type: string
              description: A map of key-value pairs corresponding to the tags associated with
                the line item resource.
              readOnly: true
            readOnly: true
          description: A map of key-value pairs corresponding to the tags associated with
            the line item resource.
          readOnly: true
        tierLowerBound:
          type: number
          format: double
          description: >-
            Lower bound for usage amount range in current SKU tier. 


            **NOTE**: **lineItems[n].tierLowerBound** appears only if your **lineItems[n].sku** is tiered.
          readOnly: true
        tierUpperBound:
          type: number
          format: double
          description: >-
            Upper bound for usage amount range in current SKU tier. 


            **NOTE**: **lineItems[n].tierUpperBound** appears only if your **lineItems[n].sku** is tiered.
          readOnly: true
        totalPriceCents:
          type: integer
          format: int64
          description: Sum of the cost set for this line item. MongoDB Cloud expresses
            this value in cents (100ths of one US Dollar) and calculates this
            value as **unitPriceDollars** × **quantity** × 100.
          readOnly: true
        unit:
          type: string
          description: Element used to express what **quantity** this line item measures.
            This value can be elements of time, storage capacity, and the like.
          readOnly: true
        unitPriceDollars:
          type: number
          format: double
          description: Value per **unit** for this line item expressed in US Dollars.
          readOnly: true
      title: Line Item
    LDAPSecuritySettings:
      type: object
      description: Lightweight Directory Access Protocol (LDAP) over Transport Layer
        Security (TLS) configuration details that apply to the specified
        project.
      properties:
        authenticationEnabled:
          type: boolean
          description: Flag that indicates whether users can authenticate using an
            Lightweight Directory Access Protocol (LDAP) host.
        authorizationEnabled:
          type: boolean
          description: Flag that indicates whether users can authorize access to MongoDB
            Cloud resources using an Lightweight Directory Access Protocol
            (LDAP) host.
        authzQueryTemplate:
          type: string
          default: "{USER}?memberOf?base"
          description: Lightweight Directory Access Protocol (LDAP) query template that
            MongoDB Cloud runs to obtain the LDAP groups associated with the
            authenticated user. MongoDB Cloud uses this parameter only for user
            authorization. Use the `{USER}` placeholder in the Uniform Resource
            Locator (URL) to substitute the authenticated username. The query
            relates to the host specified with the hostname. Format this query
            according to [RFC
            4515](https://datatracker.ietf.org/doc/html/rfc4515) and [RFC
            4516](https://datatracker.ietf.org/doc/html/rfc4516).
          example: "{USER}?memberOf?base"
        bindPassword:
          type: string
          description: Password that MongoDB Cloud uses to authenticate the
            **bindUsername**.
          writeOnly: true
        bindUsername:
          type: string
          description: Full Distinguished Name (DN) of the Lightweight Directory Access
            Protocol (LDAP) user that MongoDB Cloud uses to connect to the LDAP
            host. LDAP distinguished names must be formatted according to RFC
            2253.
          example: CN=BindUser,CN=Users,DC=myldapserver,DC=mycompany,DC=com
          externalDocs:
            description: RFC 2253
            url: https://tools.ietf.org/html/2253
          pattern: ^(?:(?<cn>CN=(?<name>[^,]*)),)?(?:(?<path>(?:(?:CN|OU)=[^,]+,?)+),)?(?<domain>(?:DC=[^,]+,?)+)$
        caCertificate:
          type: string
          description: 'Certificate Authority (CA) certificate that MongoDB Cloud uses to
            verify the identity of the Lightweight Directory Access Protocol
            (LDAP) host. MongoDB Cloud allows self-signed certificates. To
            delete an assigned value, pass an empty string: `"caCertificate":
            ""`.'
        hostname:
          type: string
          description: Human-readable label that identifies the hostname or Internet
            Protocol (IP) address of the Lightweight Directory Access Protocol
            (LDAP) host. This host must have access to the internet or have a
            Virtual Private Cloud (VPC) peering connection to your cluster.
          pattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}|([0-9a-f]{1,4}:){7}([0-9a-f]{1,4})|(([a-z0-9]+\.){1,10}[a-z]+)?$
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        port:
          type: integer
          format: int32
          default: 636
          description: Port to which the Lightweight Directory Access Protocol (LDAP) host
            listens for client connections.
        userToDNMapping:
          type: array
          description: User-to-Distinguished Name (DN) map that MongoDB Cloud uses to
            transform a Lightweight Directory Access Protocol (LDAP) username
            into an LDAP DN.
          items:
            $ref: "#/components/schemas/UserToDNMapping"
      title: LDAP Security Settings
    LDAPVerifyConnectivityJobRequest:
      type: object
      properties:
        groupId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the project
            associated with this Lightweight Directory Access Protocol (LDAP)
            over Transport Layer Security (TLS) configuration.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        request:
          $ref: "#/components/schemas/LDAPVerifyConnectivityJobRequestParams"
        requestId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies this request to
            verify an Lightweight Directory Access Protocol (LDAP)
            configuration.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        status:
          type: string
          description: Human-readable string that indicates the status of the Lightweight
            Directory Access Protocol (LDAP) over Transport Layer Security (TLS)
            configuration.
          readOnly: true
        validations:
          type: array
          description: List that contains the validation messages related to the
            verification of the provided Lightweight Directory Access Protocol
            (LDAP) over Transport Layer Security (TLS) configuration details.
            The list contains a document for each test that MongoDB Cloud runs.
            MongoDB Cloud stops running tests after the first failure.
          items:
            $ref: "#/components/schemas/LDAPVerifyConnectivityJobRequestValidation"
          readOnly: true
    LDAPVerifyConnectivityJobRequestParams:
      type: object
      description: Request information needed to verify an Lightweight Directory
        Access Protocol (LDAP) over Transport Layer Security (TLS)
        configuration. The response does not return the **bindPassword**.
      properties:
        authzQueryTemplate:
          type: string
          default: "{USER}?memberOf?base"
          description: >-
            Lightweight Directory Access Protocol (LDAP) query template that
            MongoDB Cloud applies to create an LDAP query to return the LDAP
            groups associated with the authenticated MongoDB user. MongoDB Cloud
            uses this parameter only for user authorization.


            Use the `{USER}` placeholder in the Uniform Resource Locator (URL) to substitute the authenticated username. The query relates to the host specified with the hostname. Format this query per [RFC 4515](https://datatracker.ietf.org/doc/html/rfc4515) and [RFC 4516](https://datatracker.ietf.org/doc/html/rfc4516).
          example: "{USER}?memberOf?base"
          writeOnly: true
        bindPassword:
          type: string
          description: Password that MongoDB Cloud uses to authenticate the
            **bindUsername**.
          writeOnly: true
        bindUsername:
          type: string
          description: Full Distinguished Name (DN) of the Lightweight Directory Access
            Protocol (LDAP) user that MongoDB Cloud uses to connect to the LDAP
            host. LDAP distinguished names must be formatted according to RFC
            2253.
          example: CN=BindUser,CN=Users,DC=myldapserver,DC=mycompany,DC=com
          externalDocs:
            description: RFC 2253
            url: https://tools.ietf.org/html/2253
          pattern: ^(?:(?<cn>CN=(?<name>[^,]*)),)?(?:(?<path>(?:(?:CN|OU)=[^,]+,?)+),)?(?<domain>(?:DC=[^,]+,?)+)$
        caCertificate:
          type: string
          description: 'Certificate Authority (CA) certificate that MongoDB Cloud uses to
            verify the identity of the Lightweight Directory Access Protocol
            (LDAP) host. MongoDB Cloud allows self-signed certificates. To
            delete an assigned value, pass an empty string: `"caCertificate":
            ""`.'
        hostname:
          type: string
          description: Human-readable label that identifies the hostname or Internet
            Protocol (IP) address of the Lightweight Directory Access Protocol
            (LDAP) host. This host must have access to the internet or have a
            Virtual Private Cloud (VPC) peering connection to your cluster.
          pattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}|([0-9a-f]{1,4}:){7}([0-9a-f]{1,4})|(([a-z0-9]+\.){1,10}[a-z]+)?$
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        port:
          type: integer
          format: int32
          default: 636
          description: IANA port to which the Lightweight Directory Access Protocol (LDAP)
            host listens for client connections.
      required:
        - bindPassword
        - bindUsername
        - hostname
        - port
    LDAPVerifyConnectivityJobRequestValidation:
      type: object
      description: One test that MongoDB Cloud runs to test verification of the
        provided Lightweight Directory Access Protocol (LDAP) over Transport
        Layer Security (TLS) configuration details.
      properties:
        status:
          type: string
          description: Human-readable string that indicates the result of this
            verification test.
          readOnly: true
        validationType:
          type: string
          description: Human-readable label that identifies this verification test that
            MongoDB Cloud runs.
          readOnly: true
      readOnly: true
    LegacyAtlasCluster:
      type: object
      description: Group of settings that configure a MongoDB cluster.
      properties:
        acceptDataRisksAndForceReplicaSetReconfig:
          type: string
          format: date-time
          description: If reconfiguration is necessary to regain a primary due to a
            regional outage, submit this field alongside your topology
            reconfiguration to request a new regional outage resistant topology.
            Forced reconfigurations during an outage of the majority of
            electable nodes carry a risk of data loss if replicated writes (even
            majority committed writes) have not been replicated to the new
            primary node. MongoDB Atlas docs contain more information. To
            proceed with an operation which carries that risk, set
            **acceptDataRisksAndForceReplicaSetReconfig** to the current date.
          externalDocs:
            description: Reconfiguring a Replica Set during a regional outage
            url: https://dochub.mongodb.org/core/regional-outage-reconfigure-replica-set
        autoScaling:
          $ref: "#/components/schemas/ClusterAutoScalingSettings"
        backupEnabled:
          type: boolean
          description: Flag that indicates whether the cluster can perform backups. If set
            to `true`, the cluster can perform backups. You must set this value
            to `true` for NVMe clusters. Backup uses Cloud Backups for dedicated
            clusters and Shared Cluster Backups for tenant clusters. If set to
            `false`, the cluster doesn't use MongoDB Cloud backups.
        biConnector:
          $ref: "#/components/schemas/BiConnector"
        clusterType:
          type: string
          description: Configuration of nodes that comprise the cluster.
        connectionStrings:
          $ref: "#/components/schemas/ClusterConnectionStrings"
        createDate:
          type: string
          format: date-time
          description: Date and time when MongoDB Cloud created this serverless instance.
            MongoDB Cloud represents this timestamp in ISO 8601 format in UTC.
          readOnly: true
        diskSizeGB:
          type: number
          format: double
          description: Storage capacity that the host's root volume possesses expressed in
            gigabytes. Increase this number to add capacity. MongoDB Cloud
            requires this parameter if you set **replicationSpecs**. If you
            specify a disk size below the minimum (10 GB), this parameter
            defaults to the minimum disk size value. Storage charge calculations
            depend on whether you choose the default value or a custom
            value.  The maximum value for disk storage cannot exceed 50 times
            the maximum RAM for the selected cluster. If you require more
            storage space, consider upgrading your cluster to a higher tier.
          maximum: 4096
          minimum: 10
        diskWarmingMode:
          type: string
          default: FULLY_WARMED
          description: Disk warming mode selection.
          externalDocs:
            description: Reduce Secondary Disk Warming Impact
            url: https://docs.atlas.mongodb.com/reference/replica-set-tags/#reduce-secondary-disk-warming-impact
        encryptionAtRestProvider:
          type: string
          description: Cloud service provider that manages your customer keys to provide
            an additional layer of Encryption at Rest for the cluster.
          externalDocs:
            description: Encryption at Rest using Customer Key Management
            url: https://www.mongodb.com/docs/atlas/security-kms-encryption/
        groupId:
          type: string
          description: Unique 24-hexadecimal character string that identifies the project.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the cluster.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        labels:
          type: array
          deprecated: true
          description: >-
            Collection of key-value pairs between 1 to 255 characters in length
            that tag and categorize the cluster. The MongoDB Cloud console
            doesn't display your labels.


            Cluster labels are deprecated and will be removed in a future release. We strongly recommend that you use [resource tags](https://dochub.mongodb.org/core/add-cluster-tag-atlas) instead.
          items:
            $ref: "#/components/schemas/ComponentLabel"
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        mongoDBMajorVersion:
          type: string
          default: "7.0"
          description: Major MongoDB version of the cluster. MongoDB Cloud deploys the
            cluster with the latest stable release of the specified version.
        mongoDBVersion:
          type: string
          description: Version of MongoDB that the cluster runs.
          pattern: ([\d]+\.[\d]+\.[\d]+)
        mongoURI:
          type: string
          description: Base connection string that you can use to connect to the cluster.
            MongoDB Cloud displays the string only after the cluster starts, not
            while it builds the cluster.
          externalDocs:
            description: Connection string URI format.
            url: https://docs.mongodb.com/manual/reference/connection-string/
          readOnly: true
        mongoURIUpdated:
          type: string
          format: date-time
          description: Date and time when someone last updated the connection string.
            MongoDB Cloud represents this timestamp in ISO 8601 format in UTC.
          readOnly: true
        mongoURIWithOptions:
          type: string
          description: Connection string that you can use to connect to the cluster
            including the `replicaSet`, `ssl`, and `authSource` query parameters
            with values appropriate for the cluster. You may need to add MongoDB
            database users. The response returns this parameter once the cluster
            can receive requests, not while it builds the cluster.
          externalDocs:
            description: Connection string URI format.
            url: https://docs.mongodb.com/manual/reference/connection-string/
          readOnly: true
        name:
          type: string
          description: Human-readable label that identifies the cluster.
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        numShards:
          type: integer
          format: int32
          default: 1
          description: Number of shards up to 50 to deploy for a sharded cluster. The
            resource returns `1` to indicate a replica set and values of `2` and
            higher to indicate a sharded cluster. The returned value equals the
            number of shards in the cluster.
          externalDocs:
            description: Sharding
            url: https://docs.mongodb.com/manual/sharding/
          maximum: 50
          minimum: 1
        paused:
          type: boolean
          description: Flag that indicates whether the cluster is paused.
        pitEnabled:
          type: boolean
          description: Flag that indicates whether the cluster uses continuous cloud
            backups.
          externalDocs:
            description: Continuous Cloud Backups
            url: https://docs.atlas.mongodb.com/backup/cloud-backup/overview/
        providerBackupEnabled:
          type: boolean
          description: Flag that indicates whether the M10 or higher cluster can perform
            Cloud Backups. If set to `true`, the cluster can perform backups. If
            this and **backupEnabled** are set to `false`, the cluster doesn't
            use MongoDB Cloud backups.
        providerSettings:
          $ref: "#/components/schemas/ClusterProviderSettings"
        replicationFactor:
          type: integer
          format: int32
          default: 3
          deprecated: true
          description: Number of members that belong to the replica set. Each member
            retains a copy of your databases, providing high availability and
            data redundancy. Use **replicationSpecs** instead.
        replicationSpec:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/RegionSpec"
          description: Physical location where MongoDB Cloud provisions cluster nodes.
          title: Region Configuration
        replicationSpecs:
          type: array
          description: >-
            List of settings that configure your cluster regions.


            - For Global Clusters, each object in the array represents one zone where MongoDB Cloud deploys your clusters nodes.

            - For non-Global sharded clusters and replica sets, the single object represents where MongoDB Cloud deploys your clusters nodes.
          items:
            $ref: "#/components/schemas/LegacyReplicationSpec"
        rootCertType:
          type: string
          default: ISRGROOTX1
          description: Root Certificate Authority that MongoDB Atlas clusters uses.
            MongoDB Cloud supports Internet Security Research Group.
        srvAddress:
          type: string
          description: Connection string that you can use to connect to the cluster. The
            `+srv` modifier forces the connection to use Transport Layer
            Security (TLS). The `mongoURI` parameter lists additional options.
          externalDocs:
            description: Connection string URI format.
            url: https://docs.mongodb.com/manual/reference/connection-string/
          readOnly: true
        stateName:
          type: string
          description: Human-readable label that indicates the current operating condition
            of the cluster.
          readOnly: true
        tags:
          type: array
          description: List that contains key-value pairs between 1 to 255 characters in
            length for tagging and categorizing the cluster.
          externalDocs:
            description: Resource Tags
            url: https://dochub.mongodb.org/core/add-cluster-tag-atlas
          items:
            $ref: "#/components/schemas/ResourceTag"
        terminationProtectionEnabled:
          type: boolean
          default: false
          description: Flag that indicates whether termination protection is enabled on
            the cluster. If set to `true`, MongoDB Cloud won't delete the
            cluster. If set to `false`, MongoDB Cloud will delete the cluster.
        versionReleaseSystem:
          type: string
          default: LTS
          description: Method by which the cluster maintains the MongoDB versions. If
            value is `CONTINUOUS`, you must not specify **mongoDBMajorVersion**.
      title: Cluster Description
    LegacyAtlasTenantClusterUpgradeRequest:
      type: object
      description: Request containing target state of tenant cluster to be upgraded
      properties:
        acceptDataRisksAndForceReplicaSetReconfig:
          type: string
          format: date-time
          description: If reconfiguration is necessary to regain a primary due to a
            regional outage, submit this field alongside your topology
            reconfiguration to request a new regional outage resistant topology.
            Forced reconfigurations during an outage of the majority of
            electable nodes carry a risk of data loss if replicated writes (even
            majority committed writes) have not been replicated to the new
            primary node. MongoDB Atlas docs contain more information. To
            proceed with an operation which carries that risk, set
            **acceptDataRisksAndForceReplicaSetReconfig** to the current date.
          externalDocs:
            description: Reconfiguring a Replica Set during a regional outage
            url: https://dochub.mongodb.org/core/regional-outage-reconfigure-replica-set
        autoScaling:
          $ref: "#/components/schemas/ClusterAutoScalingSettings"
        backupEnabled:
          type: boolean
          description: Flag that indicates whether the cluster can perform backups. If set
            to `true`, the cluster can perform backups. You must set this value
            to `true` for NVMe clusters. Backup uses Cloud Backups for dedicated
            clusters and Shared Cluster Backups for tenant clusters. If set to
            `false`, the cluster doesn't use MongoDB Cloud backups.
        biConnector:
          $ref: "#/components/schemas/BiConnector"
        clusterType:
          type: string
          description: Configuration of nodes that comprise the cluster.
        connectionStrings:
          $ref: "#/components/schemas/ClusterConnectionStrings"
        createDate:
          type: string
          format: date-time
          description: Date and time when MongoDB Cloud created this serverless instance.
            MongoDB Cloud represents this timestamp in ISO 8601 format in UTC.
          readOnly: true
        diskSizeGB:
          type: number
          format: double
          description: Storage capacity that the host's root volume possesses expressed in
            gigabytes. Increase this number to add capacity. MongoDB Cloud
            requires this parameter if you set **replicationSpecs**. If you
            specify a disk size below the minimum (10 GB), this parameter
            defaults to the minimum disk size value. Storage charge calculations
            depend on whether you choose the default value or a custom
            value.  The maximum value for disk storage cannot exceed 50 times
            the maximum RAM for the selected cluster. If you require more
            storage space, consider upgrading your cluster to a higher tier.
          maximum: 4096
          minimum: 10
        diskWarmingMode:
          type: string
          default: FULLY_WARMED
          description: Disk warming mode selection.
          externalDocs:
            description: Reduce Secondary Disk Warming Impact
            url: https://docs.atlas.mongodb.com/reference/replica-set-tags/#reduce-secondary-disk-warming-impact
        encryptionAtRestProvider:
          type: string
          description: Cloud service provider that manages your customer keys to provide
            an additional layer of Encryption at Rest for the cluster.
          externalDocs:
            description: Encryption at Rest using Customer Key Management
            url: https://www.mongodb.com/docs/atlas/security-kms-encryption/
        groupId:
          type: string
          description: Unique 24-hexadecimal character string that identifies the project.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the cluster.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        labels:
          type: array
          deprecated: true
          description: >-
            Collection of key-value pairs between 1 to 255 characters in length
            that tag and categorize the cluster. The MongoDB Cloud console
            doesn't display your labels.


            Cluster labels are deprecated and will be removed in a future release. We strongly recommend that you use [resource tags](https://dochub.mongodb.org/core/add-cluster-tag-atlas) instead.
          items:
            $ref: "#/components/schemas/ComponentLabel"
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        mongoDBMajorVersion:
          type: string
          default: "7.0"
          description: Major MongoDB version of the cluster. MongoDB Cloud deploys the
            cluster with the latest stable release of the specified version.
        mongoDBVersion:
          type: string
          description: Version of MongoDB that the cluster runs.
          pattern: ([\d]+\.[\d]+\.[\d]+)
        mongoURI:
          type: string
          description: Base connection string that you can use to connect to the cluster.
            MongoDB Cloud displays the string only after the cluster starts, not
            while it builds the cluster.
          externalDocs:
            description: Connection string URI format.
            url: https://docs.mongodb.com/manual/reference/connection-string/
          readOnly: true
        mongoURIUpdated:
          type: string
          format: date-time
          description: Date and time when someone last updated the connection string.
            MongoDB Cloud represents this timestamp in ISO 8601 format in UTC.
          readOnly: true
        mongoURIWithOptions:
          type: string
          description: Connection string that you can use to connect to the cluster
            including the `replicaSet`, `ssl`, and `authSource` query parameters
            with values appropriate for the cluster. You may need to add MongoDB
            database users. The response returns this parameter once the cluster
            can receive requests, not while it builds the cluster.
          externalDocs:
            description: Connection string URI format.
            url: https://docs.mongodb.com/manual/reference/connection-string/
          readOnly: true
        name:
          type: string
          description: Human-readable label that identifies the cluster.
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        numShards:
          type: integer
          format: int32
          default: 1
          description: Number of shards up to 50 to deploy for a sharded cluster. The
            resource returns `1` to indicate a replica set and values of `2` and
            higher to indicate a sharded cluster. The returned value equals the
            number of shards in the cluster.
          externalDocs:
            description: Sharding
            url: https://docs.mongodb.com/manual/sharding/
          maximum: 50
          minimum: 1
        paused:
          type: boolean
          description: Flag that indicates whether the cluster is paused.
        pitEnabled:
          type: boolean
          description: Flag that indicates whether the cluster uses continuous cloud
            backups.
          externalDocs:
            description: Continuous Cloud Backups
            url: https://docs.atlas.mongodb.com/backup/cloud-backup/overview/
        providerBackupEnabled:
          type: boolean
          description: Flag that indicates whether the M10 or higher cluster can perform
            Cloud Backups. If set to `true`, the cluster can perform backups. If
            this and **backupEnabled** are set to `false`, the cluster doesn't
            use MongoDB Cloud backups.
        providerSettings:
          $ref: "#/components/schemas/ClusterProviderSettings"
        replicationFactor:
          type: integer
          format: int32
          default: 3
          deprecated: true
          description: Number of members that belong to the replica set. Each member
            retains a copy of your databases, providing high availability and
            data redundancy. Use **replicationSpecs** instead.
        replicationSpec:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/RegionSpec"
          description: Physical location where MongoDB Cloud provisions cluster nodes.
          title: Region Configuration
        replicationSpecs:
          type: array
          description: >-
            List of settings that configure your cluster regions.


            - For Global Clusters, each object in the array represents one zone where MongoDB Cloud deploys your clusters nodes.

            - For non-Global sharded clusters and replica sets, the single object represents where MongoDB Cloud deploys your clusters nodes.
          items:
            $ref: "#/components/schemas/LegacyReplicationSpec"
        rootCertType:
          type: string
          default: ISRGROOTX1
          description: Root Certificate Authority that MongoDB Atlas clusters uses.
            MongoDB Cloud supports Internet Security Research Group.
        srvAddress:
          type: string
          description: Connection string that you can use to connect to the cluster. The
            `+srv` modifier forces the connection to use Transport Layer
            Security (TLS). The `mongoURI` parameter lists additional options.
          externalDocs:
            description: Connection string URI format.
            url: https://docs.mongodb.com/manual/reference/connection-string/
          readOnly: true
        stateName:
          type: string
          description: Human-readable label that indicates the current operating condition
            of the cluster.
          readOnly: true
        tags:
          type: array
          description: List that contains key-value pairs between 1 to 255 characters in
            length for tagging and categorizing the cluster.
          externalDocs:
            description: Resource Tags
            url: https://dochub.mongodb.org/core/add-cluster-tag-atlas
          items:
            $ref: "#/components/schemas/ResourceTag"
        terminationProtectionEnabled:
          type: boolean
          default: false
          description: Flag that indicates whether termination protection is enabled on
            the cluster. If set to `true`, MongoDB Cloud won't delete the
            cluster. If set to `false`, MongoDB Cloud will delete the cluster.
        versionReleaseSystem:
          type: string
          default: LTS
          description: Method by which the cluster maintains the MongoDB versions. If
            value is `CONTINUOUS`, you must not specify **mongoDBMajorVersion**.
      required:
        - name
      title: Tenant Cluster Upgrade Request
    LegacyReplicationSpec:
      type: object
      properties:
        id:
          type: string
          description: >-
            Unique 24-hexadecimal digit string that identifies the replication
            object for a zone in a Global Cluster.


            - If you include existing zones in the request, you must specify this parameter.


            - If you add a new zone to an existing Global Cluster, you may specify this parameter. The request deletes any existing zones in a Global Cluster that you exclude from the request.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
        numShards:
          type: integer
          format: int32
          default: 1
          description: >-
            Positive integer that specifies the number of shards to deploy in
            each specified zone If you set this value to `1` and **clusterType**
            is `SHARDED`, MongoDB Cloud deploys a single-shard sharded cluster.
            Don't create a sharded cluster with a single shard for production
            environments. Single-shard sharded clusters don't provide the same
            benefits as multi-shard configurations.

             If you are upgrading a replica set to a sharded cluster, you cannot increase the number of shards in the same update request.  You should wait until after the cluster has completed upgrading to sharded and you have reconnected all application clients to the MongoDB router before adding additional shards. Otherwise, your data might become inconsistent once MongoDB Cloud begins distributing data across shards.
        regionsConfig:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/RegionSpec"
          description: Physical location where MongoDB Cloud provisions cluster nodes.
          title: Region Configuration
        zoneName:
          type: string
          description: Human-readable label that identifies the zone in a Global Cluster.
            Provide this value only if **clusterType** is `GEOSHARDED`.
    Link:
      type: object
      properties:
        href:
          type: string
          description: Uniform Resource Locator (URL) that points another API resource to
            which this response has some relationship. This URL often begins
            with `https://cloud.mongodb.com/api/atlas`.
          example: https://cloud.mongodb.com/api/atlas
        rel:
          type: string
          description: Uniform Resource Locator (URL) that defines the semantic
            relationship between this resource and another API resource. This
            URL often begins with `https://cloud.mongodb.com/api/atlas`.
          example: self
    Link_Atlas:
      type: object
      properties:
        href:
          type: string
          description: Uniform Resource Locator (URL) that points another API resource to
            which this response has some relationship. This URL often begins
            with `https://cloud.mongodb.com/api/atlas`.
          example: https://cloud.mongodb.com/api/atlas
        rel:
          type: string
          description: Uniform Resource Locator (URL) that defines the semantic
            relationship between this resource and another API resource. This
            URL often begins with `https://cloud.mongodb.com/api/atlas`.
          example: self
    LiveImportAvailableProject:
      type: object
      properties:
        deployments:
          type: array
          description: List of clusters that can be migrated to MongoDB Cloud.
          items:
            $ref: "#/components/schemas/AvailableClustersDeployment"
        migrationHosts:
          type: array
          description: Hostname of MongoDB Agent list that you configured to perform a
            migration.
          items:
            type: string
            description: Hostname of MongoDB Agent that you configured to perform a
              migration.
        name:
          type: string
          description: Human-readable label that identifies this project.
          maxLength: 64
          minLength: 1
          readOnly: true
        projectId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the project to
            be migrated.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
      required:
        - name
        - projectId
    LiveImportValidation:
      type: object
      properties:
        _id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the validation.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        errorMessage:
          type: string
          description: Reason why the validation job failed.
          readOnly: true
        groupId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the project to
            validate.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        sourceGroupId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the source
            project.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
        status:
          type: string
          description: State of the specified validation job returned at the time of the
            request.
          readOnly: true
    LiveMigrationRequest:
      type: object
      properties:
        _id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the migration
            request.
          example: 507f1f77bcf86cd799439011
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        destination:
          $ref: "#/components/schemas/Destination"
        dropEnabled:
          type: boolean
          description: Flag that indicates whether the migration process drops all
            collections from the destination cluster before the migration
            starts.
          writeOnly: true
        migrationHosts:
          type: array
          description: List of migration hosts used for this migration.
          items:
            type: string
            example: vm001.example.com
          maxItems: 1
          minItems: 1
        sharding:
          $ref: "#/components/schemas/ShardingRequest"
        source:
          $ref: "#/components/schemas/Source"
      required:
        - destination
        - dropEnabled
        - source
    LiveMigrationResponse:
      type: object
      properties:
        _id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the migration job.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        lagTimeSeconds:
          type: integer
          format: int64
          description: Replication lag between the source and destination clusters. Atlas
            returns this setting only during an active migration, before the
            cutover phase.
          readOnly: true
        migrationHosts:
          type: array
          description: List of hosts running MongoDB Agents. These Agents can transfer
            your MongoDB data between one source and one target cluster.
          items:
            type: string
            description: One host running a MongoDB Agent. This Agent can transfer your
              MongoDB data between one source and one target cluster.
            example: vm001.example.com
            pattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}|([0-9a-f]{1,4}:){7}([0-9a-f]{1,4})|(([a-z0-9]+\.){1,10}[a-z]+)?$
          readOnly: true
        readyForCutover:
          type: boolean
          description: Flag that indicates the migrated cluster can be cut over to MongoDB
            Atlas.
          readOnly: true
        status:
          type: string
          description: >
            Progress made in migrating one cluster to MongoDB Atlas.


            | Status   | Explanation |

            |----------|-------------|

            | NEW      | Someone scheduled a local cluster migration to MongoDB Atlas. |

            | FAILED   | The cluster migration to MongoDB Atlas failed.                |

            | COMPLETE | The cluster migration to MongoDB Atlas succeeded.             |

            | EXPIRED  | MongoDB Atlas prepares to begin the cut over of the migrating cluster when source and target clusters have almost synchronized. If `"readyForCutover" : true`, this synchronization starts a timer of 120 hours. You can extend this timer. If the timer expires, MongoDB Atlas returns this status. |

            | WORKING  | The cluster migration to MongoDB Atlas is performing one of the following tasks:<ul><li>Preparing connections to source and target clusters</li><li>Replicating data from source to target</li><li>Verifying MongoDB Atlas connection settings</li><li>Stopping replication after the cut over</li></ul> |
          readOnly: true
    ManagedNamespaces:
      type: object
      properties:
        collection:
          type: string
          description: Human-readable label of the collection to manage for this Global
            Cluster.
        customShardKey:
          type: string
          description: Database parameter used to divide the *collection* into shards.
            Global clusters require a compound shard key. This compound shard
            key combines the location parameter and the user-selected custom
            key.
          readOnly: true
        db:
          type: string
          description: Human-readable label of the database to manage for this Global
            Cluster.
        isCustomShardKeyHashed:
          type: boolean
          default: false
          description: Flag that indicates whether someone hashed the custom shard key for
            the specified collection. If you set this value to `false`, MongoDB
            Cloud uses ranged sharding.
          externalDocs:
            description: Hashed Shard Keys
            url: https://www.mongodb.com/docs/manual/reference/method/sh.shardCollection/#hashed-shard-keys
          writeOnly: true
        isShardKeyUnique:
          type: boolean
          default: false
          description: Flag that indicates whether someone
            [hashed](https://www.mongodb.com/docs/manual/reference/method/sh.shardCollection/#hashed-shard-keys)
            the custom shard key. If this parameter returns `false`, this
            cluster uses [ranged
            sharding](https://www.mongodb.com/docs/manual/core/ranged-sharding/).
          writeOnly: true
        numInitialChunks:
          type: integer
          format: int64
          description: Minimum number of chunks to create initially when sharding an empty
            collection with a [hashed shard
            key](https://www.mongodb.com/docs/manual/core/hashed-sharding/).
          externalDocs:
            description: Global Cluster Sharding
            url: https://www.mongodb.com/docs/atlas/shard-global-collection/
          maximum: 8192
          writeOnly: true
        presplitHashedZones:
          type: boolean
          default: false
          description: Flag that indicates whether MongoDB Cloud should create and
            distribute initial chunks for an empty or non-existing collection.
            MongoDB Cloud distributes data based on the defined zones and zone
            ranges for the collection.
          externalDocs:
            description: Hashed Shard Key
            url: https://www.mongodb.com/docs/manual/core/hashed-sharding/
          writeOnly: true
      required:
        - collection
        - customShardKey
        - db
    MeasurementDiskPartition:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        partitionName:
          type: string
          description: Human-readable label of the disk or partition to which the
            measurements apply.
          readOnly: true
    MeasurementsCollStatsLatencyCluster:
      type: object
      properties:
        clusterId:
          type: string
          description: Unique identifier for Clusters.
          readOnly: true
        clusterView:
          type: string
          description: Cluster topology view.
          readOnly: true
        collectionName:
          type: string
          description: Human-readable label that identifies the collection.
          readOnly: true
        databaseName:
          type: string
          description: Human-readable label that identifies the database that the
            specified MongoDB process serves.
          readOnly: true
        end:
          type: string
          format: date-time
          description: Date and time that specifies when to stop retrieving measurements.
            If you set **end**, you must set **start**. You can't set this
            parameter and **period** in the same request. This parameter
            expresses its value in the ISO 8601 timestamp format in UTC.
          readOnly: true
        granularity:
          type: string
          description: Duration that specifies the interval between measurement data
            points. The parameter expresses its value in ISO 8601 timestamp
            format in UTC. If you set this parameter, you must set either
            **period** or **start** and **end**.
          readOnly: true
        groupId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the project. The
            project contains MongoDB processes that you want to return. The
            MongoDB process can be either the `mongod` or `mongos`.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        measurements:
          type: array
          description: List that contains measurements and their data points.
          items:
            $ref: "#/components/schemas/MetricsMeasurement"
          readOnly: true
        processId:
          type: string
          description: Combination of hostname and Internet Assigned Numbers Authority
            (IANA) port that serves the MongoDB process. The host must be the
            hostname, fully qualified domain name (FQDN), or Internet Protocol
            address (IPv4 or IPv6) of the host that runs the MongoDB process
            (`mongod` or `mongos`). The port must be the IANA port on which the
            MongoDB process listens for requests.
          example: mongodb.example.com:27017
          pattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\.){1,10}[a-z]+)?(\:[0-9]{4,5})$
          readOnly: true
        start:
          type: string
          format: date-time
          description: Date and time that specifies when to start retrieving measurements.
            If you set **start**, you must set **end**. You can't set this
            parameter and **period** in the same request. This parameter
            expresses its value in the ISO 8601 timestamp format in UTC.
          readOnly: true
    MeasurementsCollStatsLatencyHost:
      type: object
      properties:
        collectionName:
          type: string
          description: Human-readable label that identifies the collection.
          readOnly: true
        databaseName:
          type: string
          description: Human-readable label that identifies the database that the
            specified MongoDB process serves.
          readOnly: true
        end:
          type: string
          format: date-time
          description: Date and time that specifies when to stop retrieving measurements.
            If you set **end**, you must set **start**. You can't set this
            parameter and **period** in the same request. This parameter
            expresses its value in the ISO 8601 timestamp format in UTC.
          readOnly: true
        granularity:
          type: string
          description: Duration that specifies the interval between measurement data
            points. The parameter expresses its value in ISO 8601 timestamp
            format in UTC. If you set this parameter, you must set either
            **period** or **start** and **end**.
          readOnly: true
        groupId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the project. The
            project contains MongoDB processes that you want to return. The
            MongoDB process can be either the `mongod` or `mongos`.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        measurements:
          type: array
          description: List that contains measurements and their data points.
          items:
            $ref: "#/components/schemas/MetricsMeasurement"
          readOnly: true
        processId:
          type: string
          description: Combination of hostname and Internet Assigned Numbers Authority
            (IANA) port that serves the MongoDB process. The host must be the
            hostname, fully qualified domain name (FQDN), or Internet Protocol
            address (IPv4 or IPv6) of the host that runs the MongoDB process
            (`mongod` or `mongos`). The port must be the IANA port on which the
            MongoDB process listens for requests.
          example: mongodb.example.com:27017
          pattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\.){1,10}[a-z]+)?(\:[0-9]{4,5})$
          readOnly: true
        start:
          type: string
          format: date-time
          description: Date and time that specifies when to start retrieving measurements.
            If you set **start**, you must set **end**. You can't set this
            parameter and **period** in the same request. This parameter
            expresses its value in the ISO 8601 timestamp format in UTC.
          readOnly: true
    MeasurementsIndexes:
      type: object
      properties:
        collectionName:
          type: string
          description: Human-readable label that identifies the collection.
          readOnly: true
        databaseName:
          type: string
          description: Human-readable label that identifies the database that the
            specified MongoDB process serves.
          readOnly: true
        end:
          type: string
          format: date-time
          description: Date and time that specifies when to stop retrieving measurements.
            If you set **end**, you must set **start**. You can't set this
            parameter and **period** in the same request. This parameter
            expresses its value in the ISO 8601 timestamp format in UTC.
          readOnly: true
        granularity:
          type: string
          description: Duration that specifies the interval between measurement data
            points. The parameter expresses its value in ISO 8601 timestamp
            format in UTC. If you set this parameter, you must set either
            **period** or **start** and **end**.
          readOnly: true
        groupId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the project. The
            project contains MongoDB processes that you want to return. The
            MongoDB process can be either the `mongod` or `mongos`.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        indexIds:
          type: array
          description: List that contains the Atlas Search index identifiers.
          items:
            type: string
            description: Unique 24-hexadecimal digit string that identifies the index.
            example: 32b6e34b3d91647abb20e7b8
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
          readOnly: true
        indexStatsMeasurements:
          type: array
          description: List that contains the Atlas Search index stats measurements.
          items:
            $ref: "#/components/schemas/MetricsMeasurement"
          readOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        processId:
          type: string
          description: Combination of hostname and Internet Assigned Numbers Authority
            (IANA) port that serves the MongoDB process. The host must be the
            hostname, fully qualified domain name (FQDN), or Internet Protocol
            address (IPv4 or IPv6) of the host that runs the MongoDB process
            (`mongod` or `mongos`). The port must be the IANA port on which the
            MongoDB process listens for requests.
          example: mongodb.example.com:27017
          pattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\.){1,10}[a-z]+)?(\:[0-9]{4,5})$
          readOnly: true
        start:
          type: string
          format: date-time
          description: Date and time that specifies when to start retrieving measurements.
            If you set **start**, you must set **end**. You can't set this
            parameter and **period** in the same request. This parameter
            expresses its value in the ISO 8601 timestamp format in UTC.
          readOnly: true
    MeasurementsNonIndex:
      type: object
      properties:
        end:
          type: string
          format: date-time
          description: Date and time that specifies when to stop retrieving measurements.
            If you set **end**, you must set **start**. You can't set this
            parameter and **period** in the same request. This parameter
            expresses its value in the ISO 8601 timestamp format in UTC.
          readOnly: true
        granularity:
          type: string
          description: Duration that specifies the interval between measurement data
            points. The parameter expresses its value in ISO 8601 timestamp
            format in UTC. If you set this parameter, you must set either
            **period** or **start** and **end**.
          readOnly: true
        groupId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the project. The
            project contains MongoDB processes that you want to return. The
            MongoDB process can be either the `mongod` or `mongos`.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        hardwareMeasurements:
          type: array
          description: List that contains the Atlas Search hardware measurements.
          items:
            $ref: "#/components/schemas/MetricsMeasurement"
          readOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        processId:
          type: string
          description: Combination of hostname and Internet Assigned Numbers Authority
            (IANA) port that serves the MongoDB process. The host must be the
            hostname, fully qualified domain name (FQDN), or Internet Protocol
            address (IPv4 or IPv6) of the host that runs the MongoDB process
            (`mongod` or `mongos`). The port must be the IANA port on which the
            MongoDB process listens for requests.
          example: mongodb.example.com:27017
          pattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\.){1,10}[a-z]+)?(\:[0-9]{4,5})$
          readOnly: true
        start:
          type: string
          format: date-time
          description: Date and time that specifies when to start retrieving measurements.
            If you set **start**, you must set **end**. You can't set this
            parameter and **period** in the same request. This parameter
            expresses its value in the ISO 8601 timestamp format in UTC.
          readOnly: true
        statusMeasurements:
          type: array
          description: List that contains the Atlas Search status measurements.
          items:
            $ref: "#/components/schemas/MetricsMeasurement"
          readOnly: true
    MesurementsDatabase:
      type: object
      properties:
        databaseName:
          type: string
          description: Human-readable label that identifies the database that the
            specified MongoDB process serves.
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
    MetricDataPoint:
      type: object
      description: value of, and metadata provided for, one data point generated at a
        particular moment in time. If no data point exists for a particular
        moment in time, the `value` parameter returns `null`.
      properties:
        timestamp:
          type: string
          format: date-time
          description: Date and time when this data point occurred. This parameter
            expresses its value in the ISO 8601 timestamp format in UTC.
          readOnly: true
        value:
          type: number
          description: Value that comprises this data point.
          readOnly: true
      readOnly: true
    MetricDataPoint_Atlas:
      type: object
      description: value of, and metadata provided for, one data point generated at a
        particular moment in time. If no data point exists for a particular
        moment in time, the `value` parameter returns `null`.
      properties:
        timestamp:
          type: string
          format: date-time
          description: Date and time when this data point occurred. This parameter
            expresses its value in the ISO 8601 timestamp format in UTC.
          readOnly: true
        value:
          type: number
          description: Value that comprises this data point.
          readOnly: true
      readOnly: true
    MetricsMeasurement:
      type: object
      properties:
        dataPoints:
          type: array
          description: List that contains the value of, and metadata provided for, one
            data point generated at a particular moment in time. If no data
            point exists for a particular moment in time, the `value` parameter
            returns `null`.
          items:
            $ref: "#/components/schemas/MetricDataPoint"
          readOnly: true
        name:
          type: string
          description: Human-readable label of the measurement that this data point covers.
          readOnly: true
        units:
          type: string
          description: Element used to quantify the measurement. The resource returns
            units of throughput, storage, and time.
          readOnly: true
    MetricsMeasurement_Atlas:
      type: object
      properties:
        dataPoints:
          type: array
          description: List that contains the value of, and metadata provided for, one
            data point generated at a particular moment in time. If no data
            point exists for a particular moment in time, the `value` parameter
            returns `null`.
          items:
            $ref: "#/components/schemas/MetricDataPoint_Atlas"
          readOnly: true
        name:
          type: string
          description: Human-readable label of the measurement that this data point covers.
          readOnly: true
        units:
          type: string
          description: Element used to quantify the measurement. The resource returns
            units of throughput, storage, and time.
          readOnly: true
    MongoDBAccessLogs:
      type: object
      description: Authentication attempt, one per object, made against the cluster.
      properties:
        authResult:
          type: boolean
          description: Flag that indicates whether the response should return successful
            authentication attempts only.
        authSource:
          type: string
          description: Database against which someone attempted to authenticate.
          readOnly: true
        failureReason:
          type: string
          description: Reason that the authentication failed. Null if authentication
            succeeded.
          readOnly: true
        groupId:
          type: string
          description: Unique 24-hexadecimal character string that identifies the project.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        hostname:
          type: string
          description: Human-readable label that identifies the hostname of the target
            node that received the authentication attempt.
          readOnly: true
        ipAddress:
          type: string
          description: Internet Protocol address that attempted to authenticate with the
            database.
          pattern: ^((25[0-5]|(2[0-4]|1\d|[1-9]|)\d)(\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$
          readOnly: true
        logLine:
          type: string
          description: Text of the host log concerning the authentication attempt.
          readOnly: true
        timestamp:
          type: string
          description: Date and time when someone made this authentication attempt.
            MongoDB Cloud represents this timestamp in ISO 8601 format in UTC.
          readOnly: true
        username:
          type: string
          description: Username used to authenticate against the database.
          readOnly: true
    MongoDBAccessLogsList:
      type: object
      properties:
        accessLogs:
          type: array
          description: Authentication attempt, one per object, made against the cluster.
          items:
            $ref: "#/components/schemas/MongoDBAccessLogs"
          readOnly: true
    NamespaceObj:
      type: object
      description: Human-readable label that identifies the namespace on the specified
        host. The resource expresses this parameter value as
        `<database>.<collection>`.
      properties:
        namespace:
          type: string
          description: Human-readable label that identifies the namespace on the specified
            host. The resource expresses this parameter value as
            `<database>.<collection>`.
          readOnly: true
        type:
          type: string
          default: collection
          description: Human-readable label that identifies the type of namespace.
          readOnly: true
      readOnly: true
    Namespaces:
      type: object
      properties:
        namespaces:
          type: array
          description: List that contains each combination of database, collection, and
            type on the specified host.
          items:
            $ref: "#/components/schemas/NamespaceObj"
          readOnly: true
          uniqueItems: true
    NamespacesRequest:
      type: object
      properties:
        namespaces:
          type: array
          description: List of namespace strings (combination of database and collection)
            on the specified host or cluster.
          items:
            type: string
            description: Human-readable label that identifies the namespace on the specified
              host or cluster. The resource expresses this parameter value as
              `<database>.<collection>`.
            writeOnly: true
          uniqueItems: true
          writeOnly: true
    NetworkPermissionEntry:
      type: object
      properties:
        awsSecurityGroup:
          type: string
          description: Unique string of the Amazon Web Services (AWS) security group that
            you want to add to the project's IP access list. Your IP access list
            entry can be one **awsSecurityGroup**, one **cidrBlock**, or one
            **ipAddress**. You must configure Virtual Private Connection (VPC)
            peering for your project before you can add an AWS security group to
            an IP access list. You cannot set AWS security groups as temporary
            access list entries. Don't set this parameter if you set
            **cidrBlock** or **ipAddress**.
          pattern: ^([0-9]*/)?sg-([0-9]*)
        cidrBlock:
          type: string
          description: Range of IP addresses in Classless Inter-Domain Routing (CIDR)
            notation that you want to add to the project's IP access list. Your
            IP access list entry can be one **awsSecurityGroup**, one
            **cidrBlock**, or one **ipAddress**. Don't set this parameter if you
            set **awsSecurityGroup** or **ipAddress**.
          pattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\:){7}[0-9a-f]{1,4}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\:){1,6}\:(%2[fF][0-9]{1,3})?$
        comment:
          type: string
          description: Remark that explains the purpose or scope of this IP access list
            entry.
          maxLength: 80
        deleteAfterDate:
          type: string
          format: date-time
          description: Date and time after which MongoDB Cloud deletes the temporary
            access list entry. This parameter expresses its value in the ISO
            8601 timestamp format in UTC and can include the time zone
            designation. The date must be later than the current date but no
            later than one week after you submit this request. The resource
            returns this parameter if you specified an expiration date when
            creating this IP access list entry.
        groupId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the project that
            contains the IP access list to which you want to add one or more
            entries.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        ipAddress:
          type: string
          description: IP address that you want to add to the project's IP access list.
            Your IP access list entry can be one **awsSecurityGroup**, one
            **cidrBlock**, or one **ipAddress**. Don't set this parameter if you
            set **awsSecurityGroup** or **cidrBlock**.
          pattern: ^((25[0-5]|(2[0-4]|1\d|[1-9]|)\d)(\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
    NetworkPermissionEntryStatus:
      type: object
      properties:
        STATUS:
          type: string
          description: >
            State of the access list entry when MongoDB Cloud made this request.


            | Status | Activity |

            |---|---|

            | `ACTIVE` | This access list entry applies to all relevant cloud providers. |

            | `PENDING` | MongoDB Cloud has started to add access list entry. This access list entry may not apply to all cloud providers at the time of this request. |

            | `FAILED` | MongoDB Cloud didn't succeed in adding this access list entry. |
          readOnly: true
      required:
        - STATUS
    NoBody:
      type: object
      description: Endpoint does not return a response body.
    NumberMetricUnits:
      type: string
      description: Element used to express the quantity. This can be an element of
        time, storage capacity, and the like.
      example: COUNT
      title: Number Metric Units
    OnlineArchiveSchedule:
      type: object
      description: Regular frequency and duration when archiving process occurs.
      properties:
        type:
          type: string
          description: Type of schedule.
        endHour:
          type: integer
          format: int32
          description: Hour of the day when the scheduled window to run one online archive
            ends.
          maximum: 23
          minimum: 0
        endMinute:
          type: integer
          format: int32
          description: Minute of the hour when the scheduled window to run one online
            archive ends.
          maximum: 59
          minimum: 0
        startHour:
          type: integer
          format: int32
          description: Hour of the day when the when the scheduled window to run one
            online archive starts.
          maximum: 23
          minimum: 0
        startMinute:
          type: integer
          format: int32
          description: Minute of the hour when the scheduled window to run one online
            archive starts.
          maximum: 59
          minimum: 0
        dayOfWeek:
          type: integer
          format: int32
          description: Day of the week when the scheduled archive starts. The week starts
            with Monday (`1`) and ends with Sunday (`7`).
          maximum: 7
          minimum: 1
        dayOfMonth:
          type: integer
          format: int32
          description: Day of the month when the scheduled archive starts.
          maximum: 31
          minimum: 1
      required:
        - type
      title: Online Archive Schedule
    Operator:
      type: string
      description: Comparison operator to apply when checking the current metric value.
    OrgFederationSettings:
      type: object
      description: Details that define how to connect one MongoDB Cloud organization
        to one federated authentication service.
      properties:
        federatedDomains:
          type: array
          description: List of domains associated with the organization's identity provider.
          items:
            type: string
          uniqueItems: true
        hasRoleMappings:
          type: boolean
          description: Flag that indicates whether this organization has role mappings
            configured.
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies this federation.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        identityProviderId:
          type: string
          description: Unique 20-hexadecimal digit string that identifies the identity
            provider connected to this organization.
          example: c2777a9eca931f29fc2f
          maxLength: 20
          minLength: 20
          pattern: ^([a-f0-9]{20})$
        identityProviderStatus:
          type: string
          description: String enum that indicates whether the identity provider is active.
      title: Organization Federation Settings
    OrgGroup:
      type: object
      properties:
        clusters:
          type: array
          description: Settings that describe the clusters in each project that the API
            key is authorized to view.
          items:
            $ref: "#/components/schemas/CloudCluster"
          readOnly: true
        groupId:
          type: string
          description: Unique 24-hexadecimal character string that identifies the project.
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        groupName:
          type: string
          description: Human-readable label that identifies the project.
          maxLength: 64
          minLength: 1
          pattern: ^[\p{L}\p{N}\-_.(),:&@+']{1,64}$
        orgId:
          type: string
          description: Unique 24-hexadecimal character string that identifies the
            organization that contains the project.
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        orgName:
          type: string
          description: Human-readable label that identifies the organization that contains
            the project.
          maxLength: 64
          minLength: 1
          pattern: ^[\p{L}\p{N}\-_.(),:&@+']{1,64}$
        planType:
          type: string
          description: Human-readable label that indicates the plan type.
          readOnly: true
        tags:
          type: array
          description: List of human-readable labels that categorize the specified
            project. MongoDB Cloud returns an empty array.
          items:
            type: string
            readOnly: true
          readOnly: true
    OrganizationInvitation:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          description: Date and time when MongoDB Cloud sent the invitation. MongoDB Cloud
            represents this timestamp in ISO 8601 format in UTC.
          readOnly: true
        expiresAt:
          type: string
          format: date-time
          description: Date and time when the invitation from MongoDB Cloud expires.
            MongoDB Cloud represents this timestamp in ISO 8601 format in UTC.
          readOnly: true
        groupRoleAssignments:
          type: array
          description: List of projects that the user will be added to when they accept
            their invitation to the organization.
          items:
            $ref: "#/components/schemas/GroupRole"
          uniqueItems: true
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies this invitation.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        inviterUsername:
          type: string
          format: email
          description: Email address of the MongoDB Cloud user who sent the invitation to
            join the organization.
          readOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        orgId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the organization.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        orgName:
          type: string
          description: Human-readable label that identifies this organization.
          pattern: ^[\p{L}\p{N}\-_.(),:&@+']{1,64}$
        roles:
          type: array
          description: One or more organization level roles to assign to the MongoDB Cloud
            user.
          items:
            type: string
          uniqueItems: true
        teamIds:
          type: array
          description: List of unique 24-hexadecimal digit strings that identifies each
            team.
          items:
            type: string
            description: Unique 24-hexadecimal digit string that identifies the team.
            example: 32b6e34b3d91647abb20e7b8
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
          readOnly: true
          uniqueItems: true
        username:
          type: string
          format: email
          description: Email address of the MongoDB Cloud user invited to join the
            organization.
      required:
        - orgName
    OrganizationInvitationGroupRoleAssignmentsRequest:
      type: object
      properties:
        groupId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the project to
            which these roles belong.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
        roles:
          type: array
          description: One or more project level roles to assign to the MongoDB Cloud user.
          items:
            type: string
          uniqueItems: true
    OrganizationInvitationRequest:
      type: object
      properties:
        groupRoleAssignments:
          type: array
          description: List of projects that the user will be added to when they accept
            their invitation to the organization.
          items:
            $ref: "#/components/schemas/OrganizationInvitationGroupRoleAssignmentsRequest"
        roles:
          type: array
          description: One or more organization level roles to assign to the MongoDB Cloud
            user.
          items:
            type: string
          uniqueItems: true
        teamIds:
          type: array
          description: List of teams to which you want to invite the desired MongoDB Cloud
            user.
          items:
            type: string
            description: Unique 24-hexadecimal digit string that identifies the team.
            example: 32b6e34b3d91647abb20e7b8
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
          uniqueItems: true
        username:
          type: string
          format: email
          description: Email address that belongs to the desired MongoDB Cloud user.
    OrganizationInvitationUpdateRequest:
      type: object
      properties:
        groupRoleAssignments:
          type: array
          description: List of projects that the user will be added to when they accept
            their invitation to the organization.
          items:
            $ref: "#/components/schemas/OrganizationInvitationGroupRoleAssignmentsRequest"
        roles:
          type: array
          description: One or more organization level roles to assign to the MongoDB Cloud
            user.
          items:
            type: string
          uniqueItems: true
        teamIds:
          type: array
          description: List of teams to which you want to invite the desired MongoDB Cloud
            user.
          items:
            type: string
            description: Unique 24-hexadecimal digit string that identifies the team.
            example: 32b6e34b3d91647abb20e7b8
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
          uniqueItems: true
    OrganizationSettings:
      type: object
      description: Collection of settings that configures the organization.
      properties:
        apiAccessListRequired:
          type: boolean
          description: Flag that indicates whether to require API operations to originate
            from an IP Address added to the API access list for the specified
            organization.
        multiFactorAuthRequired:
          type: boolean
          description: "Flag that indicates whether to require users to set up
            Multi-Factor Authentication (MFA) before accessing the specified
            organization. To learn more, see:
            https://www.mongodb.com/docs/atlas/security-multi-factor-authentica\
            tion/."
        restrictEmployeeAccess:
          type: boolean
          description: "Flag that indicates whether to block MongoDB Support from
            accessing Atlas infrastructure for any deployment in the specified
            organization without explicit permission. Once this setting is
            turned on, you can grant MongoDB Support a 24-hour bypass access to
            the Atlas deployment to resolve support issues. To learn more, see:
            https://www.mongodb.com/docs/atlas/security-restrict-support-access\
            /."
    OutboundControlPlaneCloudProviderIPAddresses:
      type: object
      description: List of outbound IP addresses from the Atlas control plane,
        categorized by cloud provider. If your network allows inbound HTTP
        requests only from specific IP addresses, you must allow access from the
        following IP addresses so that Atlas can communicate with your webhooks
        and KMS.
      properties:
        aws:
          type: object
          additionalProperties:
            type: array
            description: Control plane IP addresses in AWS. Each key identifies an Amazon
              Web Services (AWS) region. Each value identifies control plane IP
              addresses in the AWS region.
            items:
              type: string
              description: Control plane IP addresses in AWS. Each key identifies an Amazon
                Web Services (AWS) region. Each value identifies control plane
                IP addresses in the AWS region.
              readOnly: true
            readOnly: true
          description: Control plane IP addresses in AWS. Each key identifies an Amazon
            Web Services (AWS) region. Each value identifies control plane IP
            addresses in the AWS region.
          readOnly: true
        azure:
          type: object
          additionalProperties:
            type: array
            description: Control plane IP addresses in Azure. Each key identifies an Azure
              region. Each value identifies control plane IP addresses in the
              Azure region.
            items:
              type: string
              description: Control plane IP addresses in Azure. Each key identifies an Azure
                region. Each value identifies control plane IP addresses in the
                Azure region.
              readOnly: true
            readOnly: true
          description: Control plane IP addresses in Azure. Each key identifies an Azure
            region. Each value identifies control plane IP addresses in the
            Azure region.
          readOnly: true
        gcp:
          type: object
          additionalProperties:
            type: array
            description: Control plane IP addresses in GCP. Each key identifies a Google
              Cloud (GCP) region. Each value identifies control plane IP
              addresses in the GCP region.
            items:
              type: string
              description: Control plane IP addresses in GCP. Each key identifies a Google
                Cloud (GCP) region. Each value identifies control plane IP
                addresses in the GCP region.
              readOnly: true
            readOnly: true
          description: Control plane IP addresses in GCP. Each key identifies a Google
            Cloud (GCP) region. Each value identifies control plane IP addresses
            in the GCP region.
          readOnly: true
      readOnly: true
      title: Outbound Control Plane IP Addresses By Cloud Provider
    PaginatedFederationIdentityProvider:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/FederationIdentityProvider"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedHostView_Atlas:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link_Atlas"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/ApiHostView_Atlas"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PemFileInfo:
      type: object
      description: PEM file information for the identity provider's current certificates.
      properties:
        certificates:
          type: array
          description: List of certificates in the file.
          items:
            $ref: "#/components/schemas/X509Certificate"
        fileName:
          type: string
          description: Human-readable label given to the file.
    PemFileInfoUpdate:
      type: object
      description: PEM file information for the identity provider's current certificates.
      properties:
        certificates:
          type: array
          description: List of certificates in the file.
          items:
            $ref: "#/components/schemas/X509CertificateUpdate"
        fileName:
          type: string
          description: Human-readable label given to the file.
    PerformanceAdvisorIndex:
      type: object
      properties:
        avgObjSize:
          type: number
          format: double
          description: The average size of an object in the collection of this index.
          readOnly: true
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies this index.
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        impact:
          type: array
          description: List that contains unique 24-hexadecimal character string that
            identifies the query shapes in this response that the Performance
            Advisor suggests.
          items:
            type: string
            description: One unique 24-hexadecimal character string that identifies one
              query shape.
            maxLength: 24
            minLength: 24
            pattern: ^([a-f0-9]{24})$
          readOnly: true
        index:
          type: array
          description: List that contains documents that specify a key in the index and
            its sort order.
          items:
            type: object
            additionalProperties:
              type: integer
              format: int32
              description: One index key paired with its sort order. A value of `1` indicates
                an ascending sort order. A value of `-1` indicates a descending
                sort order. Keys in indexes with multiple keys appear in the
                same order that they appear in the index.
            description: One index key paired with its sort order. A value of `1` indicates
              an ascending sort order. A value of `-1` indicates a descending
              sort order. Keys in indexes with multiple keys appear in the same
              order that they appear in the index.
          readOnly: true
        namespace:
          type: string
          description: Human-readable label that identifies the namespace on the specified
            host. The resource expresses this parameter value as
            `<database>.<collection>`.
          readOnly: true
        weight:
          type: number
          format: double
          description: Estimated performance improvement that the suggested index
            provides. This value corresponds to **Impact** in the Performance
            Advisor user interface.
          readOnly: true
    PerformanceAdvisorOpStats:
      type: object
      description: Details that this resource returned about the specified query.
      properties:
        ms:
          type: integer
          format: int64
          description: Length of time expressed during which the query finds suggested
            indexes among the managed namespaces in the cluster. This parameter
            expresses its value in milliseconds. This parameter relates to the
            **duration** query parameter.
          readOnly: true
        nReturned:
          type: integer
          format: int64
          description: Number of results that the query returns.
          readOnly: true
        nScanned:
          type: integer
          format: int64
          description: Number of documents that the query read.
          readOnly: true
        ts:
          type: integer
          format: int64
          description: Date and time from which the query retrieves the suggested indexes.
            This parameter expresses its value in the number of seconds that
            have elapsed since the [UNIX
            epoch](https://en.wikipedia.org/wiki/Unix_time). This parameter
            relates to the **since** query parameter.
          readOnly: true
      readOnly: true
    PerformanceAdvisorResponse:
      type: object
      properties:
        shapes:
          type: array
          description: List of query predicates, sorts, and projections that the
            Performance Advisor suggests.
          items:
            $ref: "#/components/schemas/PerformanceAdvisorShape"
          readOnly: true
        suggestedIndexes:
          type: array
          description: List that contains the documents with information about the indexes
            that the Performance Advisor suggests.
          items:
            $ref: "#/components/schemas/PerformanceAdvisorIndex"
          readOnly: true
    PerformanceAdvisorShape:
      type: object
      properties:
        avgMs:
          type: integer
          format: int64
          description: Average duration in milliseconds for the queries examined that
            match this shape.
          readOnly: true
        count:
          type: integer
          format: int64
          description: Number of queries examined that match this shape.
          readOnly: true
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies this shape. This
            string exists only for the duration of this API request.
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        inefficiencyScore:
          type: integer
          format: int64
          description: Average number of documents read for every document that the query
            returns.
          externalDocs:
            description: Understanding the Query Inefficiency Score
            url: https://www.mongodb.com/docs/atlas/performance-advisor/#std-label-query-inefficiency-score
          readOnly: true
        namespace:
          type: string
          description: Human-readable label that identifies the namespace on the specified
            host. The resource expresses this parameter value as
            `<database>.<collection>`.
          readOnly: true
        operations:
          type: array
          description: List that contains specific about individual queries.
          items:
            $ref: "#/components/schemas/PerformanceAdvisorOperation"
          readOnly: true
    PerformanceAdvisorSlowQuery:
      type: object
      description: Details of one slow query that the Performance Advisor detected.
      properties:
        line:
          type: string
          description: Text of the MongoDB log related to this slow query.
          readOnly: true
        namespace:
          type: string
          description: Human-readable label that identifies the namespace on the specified
            host. The resource expresses this parameter value as
            `<database>.<collection>`.
          readOnly: true
      readOnly: true
    PerformanceAdvisorSlowQueryList:
      type: object
      properties:
        slowQueries:
          type: array
          description: List of operations that the Performance Advisor detected that took
            longer to execute than a specified threshold.
          items:
            $ref: "#/components/schemas/PerformanceAdvisorSlowQuery"
          readOnly: true
    PinnedNamespaces:
      type: object
      description: Pinned namespaces view for cluster
      properties:
        clusterId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the request
            cluster.
          readOnly: true
        groupId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the request
            project.
          readOnly: true
        pinnedNamespaces:
          type: array
          description: List of all pinned namespaces.
          items:
            type: string
            description: A single pinned namespace.
            readOnly: true
          readOnly: true
    PipelineRunStats:
      type: object
      description: Runtime statistics for this Data Lake Pipeline run.
      properties:
        bytesExported:
          type: integer
          format: int64
          description: Total data size in bytes exported for this pipeline run.
          readOnly: true
        numDocs:
          type: integer
          format: int64
          description: Number of docs ingested for a this pipeline run.
          readOnly: true
      readOnly: true
      title: Data Lake Pipeline Run Statistics
    PrivateEndpointHostname:
      type: object
      description: Set of Private endpoint and hostnames.
      properties:
        hostname:
          type: string
          description: Human-readable label that identifies the hostname.
          readOnly: true
        privateEndpoint:
          type: string
          description: Human-readable label that identifies private endpoint.
          readOnly: true
      readOnly: true
    PrivateLinkEndpoint:
      type: object
      properties:
        cloudProvider:
          type: string
          description: Cloud service provider that serves the requested endpoint.
          readOnly: true
        deleteRequested:
          type: boolean
          description: Flag that indicates whether MongoDB Cloud received a request to
            remove the specified private endpoint from the private endpoint
            service.
          readOnly: true
        errorMessage:
          type: string
          description: Error message returned when requesting private connection resource.
            The resource returns `null` if the request succeeded.
          readOnly: true
        connectionStatus:
          type: string
          description: State of the Amazon Web Service PrivateLink connection when MongoDB
            Cloud received this request.
          readOnly: true
        interfaceEndpointId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the interface
            endpoint.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        privateEndpointConnectionName:
          type: string
          description: Human-readable label that MongoDB Cloud generates that identifies
            the private endpoint connection.
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}%2[fF]([-\w._()]+)%2[fF]([-\w._()]+)
          readOnly: true
        privateEndpointIPAddress:
          type: string
          description: IPv4 address of the private endpoint in your Azure VNet that
            someone added to this private endpoint service.
          pattern: ^((25[0-5]|(2[0-4]|1\d|[1-9]|)\d)(\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$
        privateEndpointResourceId:
          type: string
          description: Unique string that identifies the Azure private endpoint's network
            interface that someone added to this private endpoint service.
          example: /subscriptions/cba6d9c6-1d3f-3c11-03cb-c705d895e636/resourcegroups/qrRTqi4TSN)7yB5YLRjVDveH3.yLzpNR7Br0D3-SGrU3j0.0/providers/Microsoft.Network/privateEndpoints/pVP(vb(XeckpxtXzP0NaOsDjeWDbOK)DX8A2j2E_vBYL2.GEYIdln
          readOnly: true
        status:
          type: string
          description: >-
            State of the Azure Private Link Service connection when MongoDB
            Cloud received this request.


            Alternatively:

            State of the Google Cloud network endpoint group when MongoDB Cloud received this request.
          readOnly: true
        endpointGroupName:
          type: string
          description: Human-readable label that identifies a set of endpoints.
          externalDocs:
            description: Google Cloud Forwarding Rule Concepts
            url: https://cloud.google.com/load-balancing/docs/forwarding-rule-concepts
          readOnly: true
        endpoints:
          type: array
          description: List of individual private endpoints that comprise this endpoint
            group.
          externalDocs:
            description: Google Cloud Forwarding Rule Concepts
            url: https://cloud.google.com/load-balancing/docs/forwarding-rule-concepts
          items:
            $ref: "#/components/schemas/GCPConsumerForwardingRule"
          readOnly: true
      required:
        - cloudProvider
    PrivateNetworkEndpointIdEntry:
      type: object
      properties:
        comment:
          type: string
          description: Human-readable string to associate with this private endpoint.
        customerEndpointDNSName:
          type: string
          description: Human-readable label to identify customer's VPC endpoint DNS name.
        endpointId:
          type: string
          description: Unique 22-character alphanumeric string that identifies the private
            endpoint.
          example: vpce-3bf78b0ddee411ba1
          externalDocs:
            description: Atlas Data Lake supports Amazon Web Services private endpoints
              using the AWS PrivateLink feature.
            url: https://aws.amazon.com/privatelink/?privatelink-blogs.sort-by=item.additionalFields.createdDate&privatelink-blogs.sort-order=desc
          maxLength: 22
          minLength: 22
          pattern: ^vpce-[0-9a-f]{17}$
        provider:
          type: string
          default: AWS
          description: Human-readable label that identifies the cloud service provider.
            Atlas Data Lake supports Amazon Web Services only.
        region:
          type: string
          description: Human-readable label to identify the region of customer's VPC
            endpoint.
        type:
          type: string
          default: DATA_LAKE
          description: Human-readable label that identifies the resource type associated
            with this private endpoint.
      required:
        - endpointId
    PushBasedLogExportProject:
      type: object
      properties:
        bucketName:
          type: string
          description: The name of the bucket to which the agent will send the logs to.
        createDate:
          type: string
          format: date-time
          description: Date and time that this feature was enabled on.
          readOnly: true
        iamRoleId:
          type: string
          description: ID of the AWS IAM role that will be used to write to the S3 bucket.
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        prefixPath:
          type: string
          description: S3 directory in which vector will write to in order to store the
            logs.
        state:
          type: string
          description: Describes whether or not the feature is enabled and what status it
            is in.
          readOnly: true
    RawMetricUnits:
      type: string
      default: RAW
      description: Element used to express the quantity. This can be an element of
        time, storage capacity, and the like.
      title: Raw Metric Units
    RegionSpec:
      type: object
      description: Physical location where MongoDB Cloud provisions cluster nodes.
      properties:
        analyticsNodes:
          type: integer
          format: int32
          description: Number of analytics nodes in the region. Analytics nodes handle
            analytic data such as reporting queries from MongoDB Connector for
            Business Intelligence on MongoDB Cloud. Analytics nodes are
            read-only, and can never become the primary. Use
            **replicationSpecs[n].{region}.analyticsNodes** instead.
        electableNodes:
          type: integer
          format: int32
          description: Number of electable nodes to deploy in the specified region.
            Electable nodes can become the primary and can facilitate local
            reads. Use **replicationSpecs[n].{region}.electableNodes** instead.
        priority:
          type: integer
          format: int32
          description: Number that indicates the election priority of the region. To
            identify the Preferred Region of the cluster, set this parameter to
            `7`. The primary node runs in the **Preferred Region**. To identify
            a read-only region, set this parameter to `0`.
          maximum: 7
          minimum: 0
        readOnlyNodes:
          type: integer
          format: int32
          description: Number of read-only nodes in the region. Read-only nodes can never
            become the primary member, but can facilitate local reads. Use
            **replicationSpecs[n].{region}.readOnlyNodes** instead.
      title: Region Configuration
    ReplicationSpec:
      type: object
      description: Details that explain how MongoDB Cloud replicates data on the
        specified MongoDB database.
      properties:
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the replication
            object for a zone in a Multi-Cloud Cluster. If you include existing
            zones in the request, you must specify this parameter. If you add a
            new zone to an existing Multi-Cloud Cluster, you may specify this
            parameter. The request deletes any existing zones in the Multi-Cloud
            Cluster that you exclude from the request.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        numShards:
          type: integer
          format: int32
          description: >-
            Positive integer that specifies the number of shards to deploy in
            each specified zone. If you set this value to `1` and
            **clusterType** is `SHARDED`, MongoDB Cloud deploys a single-shard
            sharded cluster. Don't create a sharded cluster with a single shard
            for production environments. Single-shard sharded clusters don't
            provide the same benefits as multi-shard configurations.

             If you are upgrading a replica set to a sharded cluster, you cannot increase the number of shards in the same update request.  You should wait until after the cluster has completed upgrading to sharded and you have reconnected all application clients to the MongoDB router before adding additional shards. Otherwise, your data might become inconsistent once MongoDB Cloud begins distributing data across shards.
          minimum: 1
        regionConfigs:
          type: array
          description: >-
            Hardware specifications for nodes set for a given region. Each
            **regionConfigs** object describes the region's priority in
            elections and the number and type of MongoDB nodes that MongoDB
            Cloud deploys to the region. Each **regionConfigs** object must have
            either an **analyticsSpecs** object, **electableSpecs** object, or
            **readOnlySpecs** object. Tenant clusters only require
            **electableSpecs. Dedicated** clusters can specify any of these
            specifications, but must have at least one **electableSpecs** object
            within a **replicationSpec**. Every hardware specification must use
            the same **instanceSize**.


            **Example:**


            If you set `"replicationSpecs[n].regionConfigs[m].analyticsSpecs.instanceSize" : "M30"`, set `"replicationSpecs[n].regionConfigs[m].electableSpecs.instanceSize" : `"M30"` if you have electable nodes and `"replicationSpecs[n].regionConfigs[m].readOnlySpecs.instanceSize" : `"M30"` if you have read-only nodes.
          items:
            $ref: "#/components/schemas/CloudRegionConfig"
        zoneName:
          type: string
          description: 'Human-readable label that identifies the zone in a Global Cluster.
            Provide this value only if `"clusterType" : "GEOSHARDED"`.'
      title: Replication Specifications
    RequestAccepted:
      type: object
      description: Accepted
    ResourceEventTypeViewForOrg:
      type: string
      description: Unique identifier of event type.
      example: GROUP_TAGS_MODIFIED
      title: Resource Event Types
    ResourceTag:
      type: object
      description: "Key-value pair that tags and categorizes a MongoDB Cloud
        organization, project, or cluster. For example, `environment :
        production`."
      properties:
        key:
          type: string
          description: "Constant that defines the set of the tag. For example,
            `environment` in the `environment : production` tag."
          maxLength: 255
          minLength: 1
        value:
          type: string
          description: "Variable that belongs to the set of the tag. For example,
            `production` in the `environment : production` tag."
          maxLength: 255
          minLength: 1
      required:
        - key
        - value
      title: Resource Tag
    RestoreJobFileHash:
      type: object
      description: Key and value pair that map one restore file to one hashed
        checksum. This parameter applies after you download the corresponding
        **delivery.url**.
      properties:
        fileName:
          type: string
          description: Human-readable label that identifies the hashed file.
          readOnly: true
        hash:
          type: string
          description: Hashed checksum that maps to the restore file.
          readOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        typeName:
          type: string
          description: Human-readable label that identifies the hashing algorithm used to
            compute the hash value.
          readOnly: true
      readOnly: true
    RoleAssignment:
      type: object
      properties:
        groupId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the project to
            which this role belongs. You can set a value for this parameter or
            **orgId** but not both in the same request.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
        orgId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the organization
            to which this role belongs. You can set a value for this parameter
            or **groupId** but not both in the same request.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
        role:
          type: string
          description: >+
            Human-readable label that identifies the collection of privileges
            that MongoDB Cloud grants a specific API key, MongoDB Cloud user, or
            MongoDB Cloud team. These roles include organization- and
            project-level roles.


            Organization Roles


            * ORG_OWNER

            * ORG_MEMBER

            * ORG_GROUP_CREATOR

            * ORG_BILLING_ADMIN

            * ORG_READ_ONLY


            Project Roles


            * GROUP_CLUSTER_MANAGER

            * GROUP_DATA_ACCESS_ADMIN

            * GROUP_DATA_ACCESS_READ_ONLY

            * GROUP_DATA_ACCESS_READ_WRITE

            * GROUP_OWNER

            * GROUP_READ_ONLY

            * GROUP_SEARCH_INDEX_EDITOR

            * GROUP_STREAM_PROCESSING_OWNER

    SampleDatasetStatus:
      type: object
      properties:
        _id:
          type: string
          description: Unique 24-hexadecimal character string that identifies this sample
            dataset.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        clusterName:
          type: string
          description: Human-readable label that identifies the cluster into which you
            loaded the sample dataset.
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
          readOnly: true
        completeDate:
          type: string
          format: date-time
          description: Date and time when the sample dataset load job completed. MongoDB
            Cloud represents this timestamp in ISO 8601 format in UTC.
          readOnly: true
        createDate:
          type: string
          format: date-time
          description: Date and time when you started the sample dataset load job. MongoDB
            Cloud represents this timestamp in ISO 8601 format in UTC.
          readOnly: true
        errorMessage:
          type: string
          description: Details of the error returned when MongoDB Cloud loads the sample
            dataset. This endpoint returns null if state has a value other than
            FAILED.
          readOnly: true
        state:
          type: string
          description: Status of the sample dataset load job.
          readOnly: true
    SearchSynonymMappingDefinition:
      type: object
      description: Synonyms used for this full text index.
      properties:
        analyzer:
          type: string
          default: lucene.standard
          description: Specific pre-defined method chosen to apply to the synonyms to be
            searched.
        name:
          type: string
          description: Human-readable label that identifies the synonym definition. Each
            **synonym.name** must be unique within the same index definition.
        source:
          $ref: "#/components/schemas/SynonymSource"
      required:
        - analyzer
        - name
        - source
      title: Synonym Mapping Definition
    ServerlessBackupRestoreJob:
      type: object
      properties:
        cancelled:
          type: boolean
          description: Flag that indicates whether someone canceled this restore job.
          readOnly: true
        deliveryType:
          type: string
          description: Human-readable label that categorizes the restore job to create.
        deliveryUrl:
          type: array
          description: 'One or more Uniform Resource Locators (URLs) that point to the
            compressed snapshot files for manual download. MongoDB Cloud returns
            this parameter when `"deliveryType" : "download"`.'
          items:
            type: string
            description: One Uniform Resource Locator that point to the compressed snapshot
              files for manual download.
          readOnly: true
        desiredTimestamp:
          $ref: "#/components/schemas/ApiBSONTimestamp"
        expired:
          type: boolean
          description: Flag that indicates whether the restore job expired.
          readOnly: true
        expiresAt:
          type: string
          format: date-time
          description: Date and time when the restore job expires. This parameter
            expresses its value in the ISO 8601 timestamp format in UTC.
          readOnly: true
        failed:
          type: boolean
          description: Flag that indicates whether the restore job failed.
          readOnly: true
        finishedAt:
          type: string
          format: date-time
          description: Date and time when the restore job completed. This parameter
            expresses its value in the ISO 8601 timestamp format in UTC.
          readOnly: true
        id:
          type: string
          description: Unique 24-hexadecimal character string that identifies the restore
            job.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        oplogInc:
          type: integer
          format: int32
          description: 'Oplog operation number from which you want to restore this
            snapshot. This number represents the second part of an Oplog
            timestamp. The resource returns this parameter when `"deliveryType"
            : "pointInTime"` and **oplogTs** exceeds `0`.'
          example: 1
          minimum: 1
        oplogTs:
          type: integer
          format: int32
          description: 'Date and time from which you want to restore this snapshot. This
            parameter expresses this timestamp in the number of seconds that
            have elapsed since the UNIX epoch. This number represents the first
            part of an Oplog timestamp. The resource returns this parameter when
            `"deliveryType" : "pointInTime"` and **oplogTs** exceeds `0`.'
          minimum: 1199145600
        pointInTimeUTCSeconds:
          type: integer
          format: int32
          description: 'Date and time from which MongoDB Cloud restored this snapshot.
            This parameter expresses this timestamp in the number of seconds
            that have elapsed since the UNIX epoch. The resource returns this
            parameter when `"deliveryType" : "pointInTime"` and
            **pointInTimeUTCSeconds** exceeds `0`.'
          minimum: 1199145600
        snapshotId:
          type: string
          description: Unique 24-hexadecimal character string that identifies the snapshot.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
        targetClusterName:
          type: string
          description: Human-readable label that identifies the target cluster to which
            the restore job restores the snapshot. The resource returns this
            parameter when `"deliveryType":` `"automated"`.
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        targetGroupId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the target
            project for the specified **targetClusterName**.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
        timestamp:
          type: string
          format: date-time
          description: Date and time when MongoDB Cloud took the snapshot associated with
            **snapshotId**. This parameter expresses its value in the ISO 8601
            timestamp format in UTC.
          readOnly: true
      required:
        - deliveryType
        - targetClusterName
        - targetGroupId
    ServerlessBackupSnapshot:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          description: Date and time when MongoDB Cloud took the snapshot. This parameter
            expresses its value in the ISO 8601 timestamp format in UTC.
          readOnly: true
        expiresAt:
          type: string
          format: date-time
          description: Date and time when MongoDB Cloud deletes the snapshot. This
            parameter expresses its value in the ISO 8601 timestamp format in
            UTC.
          readOnly: true
        frequencyType:
          type: string
          description: Human-readable label that identifies how often this snapshot
            triggers.
          readOnly: true
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the snapshot.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        mongodVersion:
          type: string
          description: Version of the MongoDB host that this snapshot backs up.
          pattern: ([\d]+\.[\d]+\.[\d]+)
          readOnly: true
        serverlessInstanceName:
          type: string
          description: Human-readable label given to the serverless instance from which
            MongoDB Cloud took this snapshot.
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
          readOnly: true
        snapshotType:
          type: string
          description: Human-readable label that identifies when this snapshot triggers.
          readOnly: true
        status:
          type: string
          description: Human-readable label that indicates the stage of the backup process
            for this snapshot.
          readOnly: true
        storageSizeBytes:
          type: integer
          format: int64
          description: Number of bytes taken to store the backup snapshot.
          readOnly: true
    ServerlessConnectionStringsPrivateEndpointItem:
      type: object
      description: Details of a private endpoint deployed for this serverless instance.
      properties:
        endpointId:
          type: string
          description: Unique string that the cloud provider uses to identify the private
            endpoint.
          readOnly: true
        providerName:
          type: string
          description: Cloud provider where the private endpoint is deployed.
          readOnly: true
        region:
          type: string
          description: Region where the private endpoint is deployed.
          readOnly: true
      title: Serverless Instance Private Endpoint Connection Strings Endpoint
    ServerlessConnectionStringsPrivateEndpointList:
      type: object
      description: Private endpoint connection string that you can use to connect to
        this serverless instance through a private endpoint.
      externalDocs:
        description: Private Endpoint for Serverless Instance
        url: https://docs.atlas.mongodb.com/security-serverless-private-endpoint/
      properties:
        endpoints:
          type: array
          description: List that contains the private endpoints through which you connect
            to MongoDB Cloud when you use
            **connectionStrings.privateEndpoint[n].srvConnectionString**.
          items:
            $ref: "#/components/schemas/ServerlessConnectionStringsPrivateEndpointItem"
          readOnly: true
        srvConnectionString:
          type: string
          description: Private endpoint-aware connection string that uses the
            `mongodb+srv://` protocol to connect to MongoDB Cloud through a
            private endpoint. The `mongodb+srv` protocol tells the driver to
            look up the seed list of hosts in the Domain Name System (DNS).
          readOnly: true
        type:
          type: string
          description: MongoDB process type to which your application connects.
          readOnly: true
      title: Serverless Instance Private Endpoint Connection String
    ServerlessEventTypeViewAlertable:
      type: string
      description: Event type that triggers an alert.
      example: OUTSIDE_SERVERLESS_METRIC_THRESHOLD
      title: Serverless Event Types
    ServerlessInstanceDescription:
      type: object
      description: Group of settings that configure a MongoDB serverless instance.
      properties:
        connectionStrings:
          $ref: "#/components/schemas/ServerlessInstanceDescriptionConnectionStrings"
        createDate:
          type: string
          format: date-time
          description: Date and time when MongoDB Cloud created this serverless instance.
            MongoDB Cloud represents this timestamp in ISO 8601 format in UTC.
          readOnly: true
        groupId:
          type: string
          description: Unique 24-hexadecimal character string that identifies the project.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the serverless
            instance.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        mongoDBVersion:
          type: string
          description: Version of MongoDB that the serverless instance runs.
          pattern: ([\d]+\.[\d]+\.[\d]+)
          readOnly: true
        name:
          type: string
          description: Human-readable label that identifies the serverless instance.
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
          readOnly: true
        providerSettings:
          $ref: "#/components/schemas/ServerlessProviderSettings"
        serverlessBackupOptions:
          $ref: "#/components/schemas/ClusterServerlessBackupOptions"
        stateName:
          type: string
          description: Human-readable label that indicates the current operating condition
            of the serverless instance.
          readOnly: true
        tags:
          type: array
          description: List that contains key-value pairs between 1 to 255 characters in
            length for tagging and categorizing the serverless instance.
          items:
            $ref: "#/components/schemas/ResourceTag"
        terminationProtectionEnabled:
          type: boolean
          default: false
          description: Flag that indicates whether termination protection is enabled on
            the serverless instance. If set to `true`, MongoDB Cloud won't
            delete the serverless instance. If set to `false`, MongoDB Cloud
            will delete the serverless instance.
      required:
        - providerSettings
      title: Serverless Instance Description
    ServerlessInstanceDescriptionConnectionStrings:
      type: object
      description: Collection of Uniform Resource Locators that point to the MongoDB
        database.
      externalDocs:
        description: Connection string URI format.
        url: https://docs.mongodb.com/manual/reference/connection-string/
      properties:
        privateEndpoint:
          type: array
          description: List of private endpoint-aware connection strings that you can use
            to connect to this serverless instance through a private endpoint.
            This parameter returns only if you created a private endpoint for
            this serverless instance and it is AVAILABLE.
          items:
            $ref: "#/components/schemas/ServerlessConnectionStringsPrivateEndpointList"
          readOnly: true
        standardSrv:
          type: string
          description: Public connection string that you can use to connect to this
            serverless instance. This connection string uses the
            `mongodb+srv://` protocol.
          externalDocs:
            description: Connection String URI Format
            url: https://docs.mongodb.com/manual/reference/connection-string/
          readOnly: true
      readOnly: true
      title: Serverless Instance Connection Strings
    ServerlessInstanceDescriptionCreate:
      type: object
      description: Settings that you can specify when you create a serverless instance.
      properties:
        name:
          type: string
          description: Human-readable label that identifies the serverless instance.
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
          writeOnly: true
        providerSettings:
          $ref: "#/components/schemas/ServerlessProviderSettings"
        serverlessBackupOptions:
          $ref: "#/components/schemas/ClusterServerlessBackupOptions"
        stateName:
          type: string
          description: Human-readable label that indicates the current operating condition
            of the serverless instance.
          readOnly: true
        tags:
          type: array
          description: List that contains key-value pairs between 1 to 255 characters in
            length for tagging and categorizing the serverless instance.
          items:
            $ref: "#/components/schemas/ResourceTag"
        terminationProtectionEnabled:
          type: boolean
          default: false
          description: Flag that indicates whether termination protection is enabled on
            the serverless instance. If set to `true`, MongoDB Cloud won't
            delete the serverless instance. If set to `false`, MongoDB Cloud
            will delete the serverless instance.
      required:
        - name
        - providerSettings
      title: Serverless Instance Description Create
    ServerlessInstanceDescriptionUpdate:
      type: object
      description: Settings that you can update when you request a serverless cluster
        update.
      properties:
        serverlessBackupOptions:
          $ref: "#/components/schemas/ClusterServerlessBackupOptions"
        tags:
          type: array
          description: List that contains key-value pairs between 1 to 255 characters in
            length for tagging and categorizing the serverless instance.
          items:
            $ref: "#/components/schemas/ResourceTag"
        terminationProtectionEnabled:
          type: boolean
          default: false
          description: Flag that indicates whether termination protection is enabled on
            the serverless instance. If set to `true`, MongoDB Cloud won't
            delete the serverless instance. If set to `false`, MongoDB Cloud
            will delete the serverless instance.
      title: Serverless Instance Description Update
    ServerlessMetricThreshold:
      type: object
      description: Threshold for the metric that, when exceeded, triggers an alert.
        The metric threshold pertains to event types which reflects changes of
        measurements and metrics about the serverless database.
      properties:
        metricName:
          type: string
          description: Human-readable label that identifies the metric against which
            MongoDB Cloud checks the configured **metricThreshold.threshold**.
        mode:
          type: string
          description: MongoDB Cloud computes the current metric value as an average.
        operator:
          $ref: "#/components/schemas/Operator"
        threshold:
          type: number
          format: double
          description: Value of metric that, when exceeded, triggers an alert.
        units:
          $ref: "#/components/schemas/ServerlessMetricUnits"
      required:
        - metricName
      title: Serverless Metric Threshold
    ServerlessMetricUnits:
      type: string
      description: Element used to express the quantity. This can be an element of
        time, storage capacity, and the like.
      example: RPU
      title: Serverless Metric Units
    ServerlessProviderSettings:
      type: object
      description: Group of cloud provider settings that configure the provisioned
        MongoDB serverless instance.
      properties:
        backingProviderName:
          type: string
          description: Cloud service provider on which MongoDB Cloud provisioned the
            serverless instance.
        providerName:
          type: string
          default: SERVERLESS
          description: Human-readable label that identifies the cloud service provider.
        regionName:
          type: string
          description: Human-readable label that identifies the geographic location of
            your MongoDB serverless instance. The region you choose can affect
            network latency for clients accessing your databases. For a complete
            list of region names, see
            [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/#std-label-amazon-aws),
            [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), and
            [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
      required:
        - backingProviderName
        - regionName
      title: Cloud Service Provider Settings for a Serverless Instance
    ServerlessTenantCreateRequest:
      type: object
      properties:
        comment:
          type: string
          description: Human-readable comment associated with the private endpoint.
          maxLength: 80
          writeOnly: true
    ServerlessTenantEndpoint:
      type: object
      properties:
        _id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the private
            endpoint.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        cloudProviderEndpointId:
          type: string
          description: >-
            Unique string that identifies the private endpoint's network
            interface.


            Alternatively:

            Unique string that identifies the Azure private endpoint's network interface that someone added to this private endpoint service.
          pattern: ^/subscriptions/[0-9a-f]{8}-([0-9a-f]{4}-){3}[0-9a-f]{12}/resource[gG]roups/private[Ll]ink/providers/Microsoft\.Network/privateEndpoints/[-\w._()]+$
          readOnly: true
        comment:
          type: string
          description: Human-readable comment associated with the private endpoint.
          maxLength: 80
          readOnly: true
        endpointServiceName:
          type: string
          description: >-
            Unique string that identifies the PrivateLink endpoint service.
            MongoDB Cloud returns null while it creates the endpoint service.


            Alternatively:

            Unique string that identifies the Amazon Web Services (AWS) PrivateLink endpoint service. MongoDB Cloud returns null while it creates the endpoint service.


            Alternatively:

            Unique string that identifies the Azure private endpoint service. MongoDB Cloud returns null while it creates the endpoint service.
          pattern: ^pls_[0-9a-f]{24}$
          readOnly: true
        errorMessage:
          type: string
          description: Human-readable error message that indicates error condition
            associated with establishing the private endpoint connection.
          readOnly: true
        status:
          type: string
          description: Human-readable label that indicates the current operating status of
            the private endpoint.
          readOnly: true
        providerName:
          type: string
          description: Human-readable label that identifies the cloud service provider.
          readOnly: true
        privateEndpointIpAddress:
          type: string
          description: IPv4 address of the private endpoint in your Azure VNet that
            someone added to this private endpoint service.
          pattern: ^((25[0-5]|(2[0-4]|1\d|[1-9]|)\d)(\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$
          readOnly: true
        privateLinkServiceResourceId:
          type: string
          description: Root-relative path that identifies the Azure Private Link Service
            that MongoDB Cloud manages. MongoDB Cloud returns null while it
            creates the endpoint service.
          readOnly: true
    ServerlessTenantEndpointUpdate:
      type: object
      description: Update view for a serverless tenant endpoint.
      properties:
        comment:
          type: string
          description: Human-readable comment associated with the private endpoint.
          maxLength: 80
          writeOnly: true
        providerName:
          type: string
          description: Human-readable label that identifies the cloud provider of the
            tenant endpoint.
          writeOnly: true
        cloudProviderEndpointId:
          type: string
          description: >-
            Unique string that identifies the private endpoint's network
            interface.


            Alternatively:

            Unique string that identifies the Azure private endpoint's network interface for this private endpoint service.
          pattern: ^/subscriptions/[0-9a-f]{8}-([0-9a-f]{4}-){3}[0-9a-f]{12}/resource[gG]roups/private[Ll]ink/providers/Microsoft\.Network/privateEndpoints/[-\w._()]+$
          writeOnly: true
        privateEndpointIpAddress:
          type: string
          description: IPv4 address of the private endpoint in your Azure VNet that
            someone added to this private endpoint service.
          pattern: ^((25[0-5]|(2[0-4]|1\d|[1-9]|)\d)(\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$
          writeOnly: true
      required:
        - providerName
    ShardEntry:
      type: object
      description: Sharding configuration for a collection to be sharded on the
        destination cluster.
      properties:
        collection:
          type: string
          description: Human-readable label that identifies the collection to be sharded
            on the destination cluster.
          writeOnly: true
        database:
          type: string
          description: Human-readable label that identifies the database that contains the
            collection to be sharded on the destination cluster.
          writeOnly: true
        shardCollection:
          $ref: "#/components/schemas/ShardKeys"
      required:
        - collection
        - database
        - shardCollection
    ShardKeys:
      type: object
      description: Document that configures the shard key on the destination cluster.
      properties:
        key:
          type: array
          description: List of fields to use for the shard key.
          items:
            type: object
            additionalProperties: {}
          uniqueItems: true
          writeOnly: true
      writeOnly: true
    ShardingRequest:
      type: object
      description: Document that configures sharding on the destination cluster when
        migrating from a replica set source to a sharded cluster destination on
        MongoDB 6.0 or higher. If you don't wish to shard any collections on the
        destination cluster, leave this empty.
      properties:
        createSupportingIndexes:
          type: boolean
          description: Flag that lets the migration create supporting indexes for the
            shard keys, if none exists, as the destination cluster also needs
            compatible indexes for the specified shard keys.
          writeOnly: true
        shardingEntries:
          type: array
          description: List of shard configurations to shard destination collections.
            Atlas shards only those collections that you include in the sharding
            entries array.
          items:
            $ref: "#/components/schemas/ShardEntry"
          uniqueItems: true
          writeOnly: true
      required:
        - createSupportingIndexes
      writeOnly: true
    Source:
      type: object
      description: Document that describes the source of the migration.
      properties:
        caCertificatePath:
          type: string
          description: Path to the CA certificate that signed SSL certificates use to
            authenticate to the source cluster.
        clusterName:
          type: string
          description: Label that identifies the source cluster name.
        groupId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the source
            project.
          example: 9b43a5b329223c3a1591a678
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
        managedAuthentication:
          type: boolean
          description: Flag that indicates whether MongoDB Automation manages
            authentication to the source cluster. If true, do not provide values
            for username and password.
        password:
          type: string
          description: Password that authenticates the username to the source cluster.
          writeOnly: true
        ssl:
          type: boolean
          description: Flag that indicates whether you have SSL enabled.
        username:
          type: string
          description: Label that identifies the SCRAM-SHA user that connects to the
            source cluster.
          writeOnly: true
      required:
        - clusterName
        - groupId
        - managedAuthentication
        - ssl
    StreamConfig:
      type: object
      description: Configuration options for an Atlas Stream Processing Instance.
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        tier:
          type: string
          description: Selected tier for the Stream Instance. Configures Memory / VCPU
            allowances.
          title: Stream Instance Tier
    StreamsConnection:
      type: object
      description: Settings that define a connection to an external data store.
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        name:
          type: string
          description: Human-readable label that identifies the stream connection. In the
            case of the Sample type, this is the name of the sample source.
        type:
          type: string
          description: Type of the connection. Can be either Cluster or Kafka.
        clusterName:
          type: string
          description: Name of the cluster configured for this connection.
        dbRoleToExecute:
          $ref: "#/components/schemas/DBRoleToExecute"
        authentication:
          $ref: "#/components/schemas/StreamsKafkaAuthentication"
        bootstrapServers:
          type: string
          description: Comma separated list of server addresses.
        config:
          type: object
          additionalProperties:
            type: string
            description: A map of Kafka key-value pairs for optional configuration. This is
              a flat object, and keys can have '.' characters.
            example: '{"group.protocol.type":"consumer","debug":"queue, msg, protocol"}'
          description: A map of Kafka key-value pairs for optional configuration. This is
            a flat object, and keys can have '.' characters.
          example:
            debug: queue, msg, protocol
            group.protocol.type: consumer
        security:
          $ref: "#/components/schemas/StreamsKafkaSecurity"
      readOnly: true
    StreamsDataProcessRegion:
      type: object
      description: Information about the cloud provider region in which MongoDB Cloud
        processes the stream.
      properties:
        cloudProvider:
          type: string
          description: Label that identifies the cloud service provider where MongoDB
            Cloud performs stream processing. Currently, this parameter supports
            AWS only.
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        region:
          $ref: "#/components/schemas/BaseStreamsRegion"
      required:
        - cloudProvider
        - region
    StreamsKafkaAuthentication:
      type: object
      description: User credentials required to connect to a Kafka Cluster. Includes
        the authentication type, as well as the parameters for that
        authentication mode.
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        mechanism:
          type: string
          description: Style of authentication. Can be one of PLAIN, SCRAM-256, or
            SCRAM-512.
        password:
          type: string
          format: password
          description: Password of the account to connect to the Kafka cluster.
          writeOnly: true
        username:
          type: string
          description: Username of the account to connect to the Kafka cluster.
    StreamsKafkaSecurity:
      type: object
      description: Properties for the secure transport connection to Kafka. For SSL,
        this can include the trusted certificate to use.
      properties:
        brokerPublicCertificate:
          type: string
          description: A trusted, public x509 certificate for connecting to Kafka over SSL.
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        protocol:
          type: string
          description: Describes the transport type. Can be either PLAINTEXT or SSL.
    StreamsTenant:
      type: object
      properties:
        _id:
          type: string
          description: Unique 24-hexadecimal character string that identifies the project.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        connections:
          type: array
          description: List of connections configured in the stream instance.
          items:
            $ref: "#/components/schemas/StreamsConnection"
          readOnly: true
        dataProcessRegion:
          $ref: "#/components/schemas/StreamsDataProcessRegion"
        groupId:
          type: string
          description: Unique 24-hexadecimal character string that identifies the project.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        hostnames:
          type: array
          description: List that contains the hostnames assigned to the stream instance.
          items:
            type: string
            description: Unique hostname assigned to the stream instance.
            readOnly: true
          readOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        name:
          type: string
          description: Human-readable label that identifies the stream instance.
        streamConfig:
          $ref: "#/components/schemas/StreamConfig"
    SynonymSource:
      type: object
      description: Data set that stores the mapping one or more words map to one or
        more synonyms of those words.
      properties:
        collection:
          type: string
          description: Human-readable label that identifies the MongoDB collection that
            stores words and their applicable synonyms.
      required:
        - collection
    SystemStatus:
      type: object
      properties:
        apiKey:
          $ref: "#/components/schemas/ApiKey"
        appName:
          type: string
          description: Human-readable label that identifies the service from which you
            requested this response.
          readOnly: true
        build:
          type: string
          description: Unique 40-hexadecimal digit hash that identifies the latest git
            commit merged for this application.
          example: 83be55e140f493c88e7f578aae96548dd881587b
          readOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        throttling:
          type: boolean
          description: Flag that indicates whether someone enabled throttling on this
            service.
          readOnly: true
      required:
        - apiKey
        - appName
        - build
        - throttling
    TargetOrg:
      type: object
      properties:
        linkToken:
          type: string
          description: Link token that contains all the information required to complete
            the link.
      required:
        - linkToken
    TargetOrgRequest:
      type: object
      properties:
        accessListIps:
          type: array
          description: IP address access list entries associated with the API key.
          items:
            type: string
            description: One IP address access list entry associated with the API key.
    Team:
      type: object
      properties:
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies this team.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        name:
          type: string
          description: Human-readable label that identifies the team.
        usernames:
          type: array
          description: List that contains the MongoDB Cloud users in this team.
          items:
            type: string
            format: email
            description: List that contains email addresses that identify MongoDB Cloud
              users to in this team.
          uniqueItems: true
      required:
        - name
    TeamResponse:
      type: object
      properties:
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies this team.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        name:
          type: string
          description: Human-readable label that identifies the team.
    TeamRole:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        roleNames:
          type: array
          description: One or more organization- or project-level roles to assign to the
            MongoDB Cloud user.
          items:
            type: string
          uniqueItems: true
        teamId:
          type: string
          description: Unique 24-hexadecimal character string that identifies the team.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
    TeamUpdate:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        name:
          type: string
          description: Human-readable label that identifies the team.
          writeOnly: true
      required:
        - name
    TenantRestore:
      type: object
      properties:
        clusterName:
          type: string
          description: Human-readable label that identifies the source cluster.
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
          readOnly: true
        deliveryType:
          type: string
          description: Means by which this resource returns the snapshot to the requesting
            MongoDB Cloud user.
          readOnly: true
        expirationDate:
          type: string
          format: date-time
          description: Date and time when the download link no longer works. This
            parameter expresses its value in the ISO 8601 timestamp format in
            UTC.
          readOnly: true
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the restore job.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        projectId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the project from
            which the restore job originated.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        restoreFinishedDate:
          type: string
          format: date-time
          description: Date and time when MongoDB Cloud completed writing this snapshot.
            MongoDB Cloud changes the status of the restore job to `CLOSED`.
            This parameter expresses its value in the ISO 8601 timestamp format
            in UTC.
          readOnly: true
        restoreScheduledDate:
          type: string
          format: date-time
          description: Date and time when MongoDB Cloud will restore this snapshot. This
            parameter expresses its value in the ISO 8601 timestamp format in
            UTC.
          readOnly: true
        snapshotFinishedDate:
          type: string
          format: date-time
          description: Date and time when MongoDB Cloud completed writing this snapshot.
            This parameter expresses its value in the ISO 8601 timestamp format
            in UTC.
          readOnly: true
        snapshotId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the snapshot to
            restore.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
        snapshotUrl:
          type: string
          description: 'Internet address from which you can download the compressed
            snapshot files. The resource returns this parameter
            when  `"deliveryType" : "DOWNLOAD"`.'
          readOnly: true
        status:
          type: string
          description: Phase of the restore workflow for this job at the time this
            resource made this request.
          readOnly: true
        targetDeploymentItemName:
          type: string
          description: Human-readable label that identifies the cluster on the target
            project to which you want to restore the snapshot. You can restore
            the snapshot to a cluster tier *M2* or greater.
          maxLength: 64
          minLength: 1
          pattern: ^[\p{L}\p{N}\-_.(),:&@+']{1,64}$
        targetProjectId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the project that
            contains the cluster to which you want to restore the snapshot.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
      required:
        - snapshotId
        - targetDeploymentItemName
    ThirdPartyIntegration:
      type: object
      description: Collection of settings that describe third-party integrations.
      properties:
        type:
          type: string
          description: >-
            Integration type


            Alternatively:

            Human-readable label that identifies the service to which you want to integrate with MongoDB Cloud. The value must match the third-party service integration type.


            Alternatively:

            Human-readable label that identifies the service to which you want to integrate with MongoDB Cloud. The value must match the third-party service integration type.


            Alternatively:

            Human-readable label that identifies the service to which you want to integrate with MongoDB Cloud. The value must match the third-party service integration type.


            Alternatively:

            Human-readable label that identifies the service to which you want to integrate with MongoDB Cloud. The value must match the third-party service integration type.


            Alternatively:

            Human-readable label that identifies the service to which you want to integrate with MongoDB Cloud. The value must match the third-party service integration type.


            Alternatively:

            Human-readable label that identifies the service to which you want to integrate with MongoDB Cloud. The value must match the third-party service integration type.


            Alternatively:

            Human-readable label that identifies the service to which you want to integrate with MongoDB Cloud. The value must match the third-party service integration type.


            Alternatively:

            Human-readable label that identifies the service to which you want to integrate with MongoDB Cloud. The value must match the third-party service integration type.


            Alternatively:

            Human-readable label that identifies the service to which you want to integrate with MongoDB Cloud. The value must match the third-party service integration type.
        apiKey:
          type: string
          description: >-
            Key that allows MongoDB Cloud to access your Datadog account.


            **NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:


            * View or edit the alert through the Atlas UI.


            * Query the alert for the notification through the Atlas Administration API.


            Alternatively:

            Key that allows MongoDB Cloud to access your Opsgenie account.


            **NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:


            * View or edit the alert through the Atlas UI.


            * Query the alert for the notification through the Atlas Administration API.


            Alternatively:

            Key that allows MongoDB Cloud to access your VictorOps account.


            **NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:


            * View or edit the alert through the Atlas UI.


            * Query the alert for the notification through the Atlas Administration API.
          example: "********************************9abc"
        region:
          type: string
          description: >-
            Two-letter code that indicates which regional URL MongoDB uses to
            access the Datadog API.


            To learn more about Datadog's regions, see <a href="https://docs.datadoghq.com/getting_started/site/" target="_blank" rel="noopener noreferrer">Datadog Sites</a>.


            Alternatively:

            Two-letter code that indicates which regional URL MongoDB uses to access the Opsgenie API.


            Alternatively:

            PagerDuty region that indicates the API Uniform Resource Locator (URL) to use.
        microsoftTeamsWebhookUrl:
          type: string
          description: >-
            Endpoint web address of the Microsoft Teams webhook to which MongoDB
            Cloud sends notifications.


            **NOTE**: When you view or edit the alert for a Microsoft Teams notification, the URL appears partially redacted.
          example: https://webhook.com/****
        accountId:
          type: string
          description: Unique 40-hexadecimal digit string that identifies your New Relic
            account.
          example: bcc3c81b344a6030a3935c2527e2216535af7718
          maxLength: 40
          minLength: 40
          pattern: ^([0-9a-f]){40}$
        licenseKey:
          type: string
          description: >-
            Unique 40-hexadecimal digit string that identifies your New Relic
            license.


            **IMPORTANT**: Effective Wednesday, June 16th, 2021, New Relic no longer supports the plugin-based integration with MongoDB. We do not recommend that you sign up for the plugin-based integration.

            To learn more, see the <a href="https://discuss.newrelic.com/t/new-relic-plugin-eol-wednesday-june-16th-2021/127267" target="_blank">New Relic Plugin EOL Statement</a> Consider configuring an alternative monitoring integration before June 16th to maintain visibility into your MongoDB deployments.
          example: bc3768f44193c282b2688ab39e00f8e4fc8d75ea
          maxLength: 40
          minLength: 40
          pattern: ^([0-9a-f]){40}$
        readToken:
          type: string
          description: Query key used to access your New Relic account.
          example: 193c96aee4a3ac640b98634562e2631f17ae0a69
        writeToken:
          type: string
          description: Insert key associated with your New Relic account.
          example: a67b10e5cd7f8fb6a34b501136c409f373edc218
        serviceKey:
          type: string
          description: >-
            Service key associated with your PagerDuty account.


            **NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:


            * View or edit the alert through the Atlas UI.


            * Query the alert for the notification through the Atlas Administration API.
          example: "****************************7890"
        enabled:
          type: boolean
          description: Flag that indicates whether someone has activated the Prometheus
            integration.
        password:
          type: string
          description: Password needed to allow MongoDB Cloud to access your Prometheus
            account.
          writeOnly: true
        serviceDiscovery:
          type: string
          description: Desired method to discover the Prometheus service.
        username:
          type: string
          description: Human-readable label that identifies your Prometheus incoming
            webhook.
          example: prom_user_618d48e05277a606ed2496fe
        apiToken:
          type: string
          description: >-
            Key that allows MongoDB Cloud to access your Slack account.


            **NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:


            * View or edit the alert through the Atlas UI.


            * Query the alert for the notification through the Atlas Administration API.


            **IMPORTANT**: Slack integrations now use the OAuth2 verification method and must  be initially configured, or updated from a legacy integration, through the Atlas  third-party service integrations page. Legacy tokens will soon no longer be  supported.
          example: "*********************************************************************\
            *abcd"
        channelName:
          type: string
          description: Name of the Slack channel to which MongoDB Cloud sends alert
            notifications.
          example: alerts
          maxLength: 80
          minLength: 1
        teamName:
          type: string
          description: Human-readable label that identifies your Slack team. Set this
            parameter when you configure a legacy Slack integration.
          example: MongoDB
        routingKey:
          type: string
          description: Routing key associated with your Splunk On-Call account.
          example: test routing
        secret:
          type: string
          description: >-
            An optional field returned if your webhook is configured with a
            secret.


            **NOTE**: When you view or edit the alert for a webhook notification, the secret appears completely redacted.
          example: "******"
        url:
          type: string
          description: >-
            Endpoint web address to which MongoDB Cloud sends notifications.


            **NOTE**: When you view or edit the alert for a webhook notification, the URL appears partially redacted.
          example: https://webhook.com/****
      title: Third-Party Integration
    TriggerIngestionPipelineRequest:
      type: object
      properties:
        datasetRetentionPolicy:
          $ref: "#/components/schemas/DatasetRetentionPolicy"
        snapshotId:
          type: string
          description: Unique 24-hexadecimal character string that identifies the snapshot.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          writeOnly: true
      required:
        - snapshotId
    UpdateAtlasOrganizationApiKey:
      type: object
      properties:
        desc:
          type: string
          description: Purpose or explanation provided when someone creates this
            organization API key.
          maxLength: 250
          minLength: 1
        roles:
          type: array
          description: List of roles to grant this API key. If you provide this list,
            provide a minimum of one role and ensure each role applies to this
            organization.
          items:
            type: string
    UpdateAtlasProjectApiKey:
      type: object
      properties:
        desc:
          type: string
          description: Purpose or explanation provided when someone creates this project
            API key.
          maxLength: 250
          minLength: 1
        roles:
          type: array
          description: List of roles to grant this API key. If you provide this list,
            provide a minimum of one role and ensure each role applies to this
            project.
          items:
            type: string
    UpdateCustomDBRole:
      type: object
      properties:
        actions:
          type: array
          description: List of the individual privilege actions that the role grants.
          items:
            $ref: "#/components/schemas/DatabasePrivilegeAction"
        inheritedRoles:
          type: array
          description: List of the built-in roles that this custom role inherits.
          items:
            $ref: "#/components/schemas/DatabaseInheritedRole"
          uniqueItems: true
    UpdateGroupRolesForUser:
      type: object
      properties:
        groupRoles:
          type: array
          description: One or more project level roles to assign to the MongoDB Cloud user.
          items:
            type: string
          uniqueItems: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
    UpdateOrgRolesForUser:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        orgRoles:
          type: array
          description: One or more organization level roles to assign to the MongoDB Cloud
            user.
          items:
            type: string
          uniqueItems: true
    UserAccessListRequest:
      type: object
      properties:
        cidrBlock:
          type: string
          description: Range of network addresses that you want to add to the access list
            for the API key. This parameter requires the range to be expressed
            in classless inter-domain routing (CIDR) notation of Internet
            Protocol version 4 or version 6 addresses. You can set a value for
            this parameter or **ipAddress** but not both in the same request.
          example: 203.0.113.0/24
          pattern: ^((([0-9]{1,3}\.){3}[0-9]{1,3})|(:{0,2}([0-9a-f]{1,4}:){0,7}[0-9a-f]{1,4}[:]{0,2}))((%2[fF]|/)[0-9]{1,3})+$
        ipAddress:
          type: string
          description: Network address that you want to add to the access list for the API
            key. This parameter requires the address to be expressed as one
            Internet Protocol version 4 or version 6 address. You can set a
            value for this parameter or **cidrBlock** but not both in the same
            request.
          example: 203.0.113.10
          pattern: ^((25[0-5]|(2[0-4]|1\d|[1-9]|)\d)(\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$
    UserAccessListResponse:
      type: object
      properties:
        cidrBlock:
          type: string
          description: Range of IP addresses in Classless Inter-Domain Routing (CIDR)
            notation in the access list for the API key.
          example: 203.0.113.0/24
          pattern: ^((([0-9]{1,3}\.){3}[0-9]{1,3})|([\:]{0,2}([0-9a-f]{1,4}\:){0,7}[0-9a-f]{1,4}[\:]{0,2}))((%2[fF]|\/)[0-9]{1,3})+$
        count:
          type: integer
          format: int32
          description: Total number of requests that have originated from the Internet
            Protocol (IP) address given as the value of the *lastUsedAddress*
            parameter.
          minimum: 1
          readOnly: true
        created:
          type: string
          format: date-time
          description: Date and time when someone added the network addresses to the
            specified API access list. This parameter expresses its value in the
            ISO 8601 timestamp format in UTC.
          readOnly: true
        ipAddress:
          type: string
          description: Network address in the access list for the API key.
          example: 203.0.113.10
          pattern: ^((([0-9]{1,3}\.){3}[0-9]{1,3})|([\:]{0,2}([0-9a-f]{1,4}\:){0,7}[0-9a-f]{1,4}[\:]{0,2}))$
        lastUsed:
          type: string
          format: date-time
          description: Date and time when MongoDB Cloud received the most recent request
            that originated from this Internet Protocol version 4 or version 6
            address. The resource returns this parameter when at least one
            request has originated from this IP address. MongoDB Cloud updates
            this parameter each time a client accesses the permitted resource.
            This parameter expresses its value in the ISO 8601 timestamp format
            in UTC.
          readOnly: true
        lastUsedAddress:
          type: string
          description: Network address that issued the most recent request to the API.
            This parameter requires the address to be expressed as one Internet
            Protocol version 4 or version 6 address. The resource returns this
            parameter after this IP address made at least one request.
          example: 203.0.113.10
          pattern: ^((([0-9]{1,3}\.){3}[0-9]{1,3})|([\:]{0,2}([0-9a-f]{1,4}\:){0,7}[0-9a-f]{1,4}[\:]{0,2}))$
          readOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
    UserAccessRoleAssignment:
      type: object
      properties:
        apiUserId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the organization
            API key.
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        roles:
          type: array
          description: List of roles to grant this API key. If you provide this list,
            provide a minimum of one role and ensure each role applies to this
            project.
          items:
            type: string
    UserCert:
      type: object
      properties:
        _id:
          type: integer
          format: int64
          description: Unique 24-hexadecimal character string that identifies this
            certificate.
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: Date and time when MongoDB Cloud created this certificate. This
            parameter expresses its value in the ISO 8601 timestamp format in
            UTC.
          readOnly: true
        groupId:
          type: string
          description: Unique 24-hexadecimal character string that identifies the project.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        monthsUntilExpiration:
          type: integer
          format: int32
          default: 3
          description: Number of months that the certificate remains valid until it expires.
          maximum: 24
          writeOnly: true
        notAfter:
          type: string
          format: date-time
          description: Date and time when this certificate expires. This parameter
            expresses its value in the ISO 8601 timestamp format in UTC.
          readOnly: true
        subject:
          type: string
          description: Subject Alternative Name associated with this certificate. This
            parameter expresses its value as a distinguished name as defined in
            [RFC 2253](https://tools.ietf.org/html/2253).
          example: CN=BindUser,CN=Users,DC=myldapserver,DC=mycompany,DC=com
          pattern: ^(?:(?<cn>CN=(?<name>[^,]*)),)?(?:(?<path>(?:(?:CN|OU)=[^,]+,?)+),)?(?<domain>(?:DC=[^,]+,?)+)$
          readOnly: true
    UserCustomDBRole:
      type: object
      properties:
        actions:
          type: array
          description: List of the individual privilege actions that the role grants.
          items:
            $ref: "#/components/schemas/DatabasePrivilegeAction"
        inheritedRoles:
          type: array
          description: List of the built-in roles that this custom role inherits.
          items:
            $ref: "#/components/schemas/DatabaseInheritedRole"
          uniqueItems: true
        roleName:
          type: string
          description: Human-readable label that identifies the role for the request. This
            name must be unique for this custom role in this project.
          pattern: ^\b(?!xgen-)([0-9A-Za-z_\-]+)\b(?<!\atlasAdmin|read|readWrite|dbAdmin|dbOwner|userAdmin|clusterAdmin|clusterManager|clusterMonitor|hostManager|backup|restore|readAnyDatabase|readWriteAnyDatabase|userAdminAnyDatabase|dbAdminAnyDatabase|root|__system)$
      required:
        - roleName
    UserScope:
      type: object
      description: Range of resources available to this database user.
      properties:
        name:
          type: string
          description: Human-readable label that identifies the cluster or MongoDB Atlas
            Data Lake that this database user can access.
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        type:
          type: string
          description: Category of resource that this database user can access.
      required:
        - name
        - type
      title: Database User Scope
    UserSecurity:
      type: object
      properties:
        customerX509:
          $ref: "#/components/schemas/DBUserTLSX509Settings"
        ldap:
          $ref: "#/components/schemas/LDAPSecuritySettings"
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
    UserToDNMapping:
      type: object
      description: User-to-Distinguished Name (DN) map that MongoDB Cloud uses to
        transform a Lightweight Directory Access Protocol (LDAP) username into
        an LDAP DN.
      properties:
        ldapQuery:
          type: string
          description: Lightweight Directory Access Protocol (LDAP) query template that
            inserts the LDAP name that the regular expression matches into an
            LDAP query Uniform Resource Identifier (URI). The formatting for the
            query must conform to [RFC
            4515](https://datatracker.ietf.org/doc/html/rfc4515) and [RFC
            4516](https://datatracker.ietf.org/doc/html/rfc4516).
        match:
          type: string
          description: Regular expression that MongoDB Cloud uses to match against the
            provided Lightweight Directory Access Protocol (LDAP) username. Each
            parenthesis-enclosed section represents a regular expression capture
            group that the substitution or `ldapQuery` template uses.
          example: (.*)
        substitution:
          type: string
          description: Lightweight Directory Access Protocol (LDAP) Distinguished Name
            (DN) template that converts the LDAP username that matches regular
            expression in the *match* parameter into an LDAP Distinguished Name
            (DN).
          example: CN={0},CN=Users,DC=my-atlas-ldap-server,DC=example,DC=com
      required:
        - match
      title: User to Distinguished Name Mapping
    X509Certificate:
      type: object
      properties:
        notAfter:
          type: string
          format: date-time
          description: Latest date that the certificate is valid.
        notBefore:
          type: string
          format: date-time
          description: Earliest date that the certificate is valid.
    X509CertificateUpdate:
      type: object
      properties:
        content:
          type: string
          description: Certificate content.
        notAfter:
          type: string
          format: date-time
          description: Latest date that the certificate is valid.
        notBefore:
          type: string
          format: date-time
          description: Earliest date that the certificate is valid.
    ZoneMapping:
      type: object
      description: Human-readable label that identifies the subset of a global cluster.
      properties:
        location:
          type: string
          description: Code that represents a location that maps to a zone in your global
            cluster. MongoDB Cloud represents this location with a ISO 3166-2
            location and subdivision codes when possible.
        zone:
          type: string
          description: Human-readable label that identifies the zone in your global
            cluster. This zone maps to a location code.
      required:
        - location
        - zone
      title: Global Cluster Zone
    raw:
      type: object
      description: Additional meta information captured about this event. The response
        returns this parameter as a JSON object when the query parameter
        `includeRaw=true`. The list of fields in the raw document may change.
        Don't rely on raw values for formal monitoring.
      properties:
        _t:
          type: string
          description: Unique identifier of event type.
          example: ALERT_AUDIT
        alertConfigId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the alert
            configuration related to the event.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        cid:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the project in
            which the event occurred.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        cre:
          type: string
          format: date-time
          description: Date and time when this event occurred. This parameter expresses
            its value in the <a href="https://en.wikipedia.org/wiki/ISO_8601"
            target="_blank" rel="noopener noreferrer">ISO 8601</a> timestamp
            format in UTC.
          readOnly: true
        description:
          type: string
          description: Description of the event.
          example: Alert Acknowledged
        gn:
          type: string
          description: Human-readable label that identifies the project.
          example: Test Project
          maxLength: 64
          minLength: 1
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the event.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        orgId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the organization
            to which these events apply.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        orgName:
          type: string
          description: Human-readable label that identifies the organization that contains
            the project.
          example: Test Organization
          maxLength: 64
          minLength: 1
        severity:
          type: string
          description: Severity of the event.
      readOnly: true
    AWSCustomDNSEnabled:
      type: object
      properties:
        enabled:
          type: boolean
          description: >-
            Flag that indicates whether the project's clusters deployed to
            Amazon Web Services (AWS) use a custom Domain Name System (DNS).

            When `"enabled": true`, connect to your cluster using Private IP for Peering connection strings.
          externalDocs:
            description: "To learn more, see FAQ: Connection String Options in the MongoDB
              Atlas documentation."
            url: https://www.mongodb.com/docs/atlas/reference/faq/connection-changes/#how-does-this-affect-aws-vpc-peering-when-i-use-custom-dns-
      required:
        - enabled
    AccessListItem:
      type: object
      properties:
        cidrBlock:
          type: string
          description: Range of IP addresses in Classless Inter-Domain Routing (CIDR)
            notation that found in this project's access list.
          pattern: ^((([0-9]{1,3}\.){3}[0-9]{1,3})|(:{0,2}([0-9a-f]{1,4}:){0,7}[0-9a-f]{1,4}[:]{0,2}))((%2[fF]|/)[0-9]{1,3})+$
          readOnly: true
        ipAddress:
          type: string
          description: IP address included in the API access list.
          pattern: ^((25[0-5]|(2[0-4]|1\d|[1-9]|)\d)(\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$
          readOnly: true
      required:
        - ipAddress
    ApiAtlasCheckpoint:
      type: object
      properties:
        clusterId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the cluster that
            contains the checkpoint.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        completed:
          type: string
          format: date-time
          description: Date and time when the checkpoint completed and the balancer
            restarted. This parameter expresses its value in the ISO 8601
            timestamp format in UTC.
          readOnly: true
        groupId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the project that
            owns the checkpoints.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies checkpoint.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        parts:
          type: array
          description: >-
            Metadata that describes the complete snapshot.


            - For a replica set, this array contains a single document.

            - For a sharded cluster, this array contains one document for each shard plus one document for the config host.
          items:
            $ref: "#/components/schemas/ApiCheckpointPart"
          readOnly: true
        restorable:
          type: boolean
          description: Flag that indicates whether MongoDB Cloud can use the checkpoint
            for a restore.
          readOnly: true
        started:
          type: string
          format: date-time
          description: Date and time when the balancer stopped and began the checkpoint.
            This parameter expresses its value in the ISO 8601 timestamp format
            in UTC.
          readOnly: true
        timestamp:
          type: string
          format: date-time
          description: Date and time to which the checkpoint restores. This parameter
            expresses its value in the ISO 8601 timestamp format in UTC.
          readOnly: true
    ApiAtlasSnapshotSchedule:
      type: object
      properties:
        clusterCheckpointIntervalMin:
          type: integer
          format: int32
          description: Quantity of time expressed in minutes between successive cluster
            checkpoints. This parameter applies only to sharded clusters. This
            number determines the granularity of continuous cloud backups for
            sharded clusters.
        clusterId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the cluster with
            the snapshot you want to return.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
        dailySnapshotRetentionDays:
          type: integer
          format: int32
          description: Quantity of time to keep daily snapshots. MongoDB Cloud expresses
            this value in days. Set this value to `0` to disable daily snapshot
            retention.
        groupId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the project that
            contains the cluster.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        monthlySnapshotRetentionMonths:
          type: integer
          format: int32
          description: Number of months that MongoDB Cloud must keep monthly snapshots.
            Set this value to `0` to disable monthly snapshot retention.
        pointInTimeWindowHours:
          type: integer
          format: int32
          description: Number of hours before the current time from which MongoDB Cloud
            can create a Continuous Cloud Backup snapshot.
        snapshotIntervalHours:
          type: integer
          format: int32
          description: Number of hours that must elapse before taking another snapshot.
        snapshotRetentionDays:
          type: integer
          format: int32
          description: Number of days that MongoDB Cloud must keep recent snapshots.
        weeklySnapshotRetentionWeeks:
          type: integer
          format: int32
          description: Number of weeks that MongoDB Cloud must keep weekly snapshots. Set
            this value to `0` to disable weekly snapshot retention.
      required:
        - clusterCheckpointIntervalMin
        - clusterId
        - dailySnapshotRetentionDays
        - groupId
        - monthlySnapshotRetentionMonths
        - pointInTimeWindowHours
        - snapshotIntervalHours
        - snapshotRetentionDays
        - weeklySnapshotRetentionWeeks
    ApiBSONTimestamp:
      type: object
      description: BSON timestamp that indicates when the checkpoint token entry in
        the oplog occurred.
      properties:
        date:
          type: string
          format: date-time
          description: Date and time when the oplog recorded this database operation. This
            parameter expresses its value in the ISO 8601 timestamp format in
            UTC.
          readOnly: true
        increment:
          type: integer
          format: int32
          description: Order of the database operation that the oplog recorded at specific
            date and time.
          example: 1199145600
          minimum: 1199145600
          readOnly: true
      readOnly: true
      title: BSON Timestamp
    ApiCheckpointPart:
      type: object
      description: Metadata contained in one document that describes the complete
        snapshot taken for this node.
      properties:
        replicaSetName:
          type: string
          description: Human-readable label that identifies the replica set to which this
            checkpoint applies.
          readOnly: true
        shardName:
          type: string
          description: Human-readable label that identifies the shard to which this
            checkpoint applies.
          readOnly: true
        tokenDiscovered:
          type: boolean
          description: Flag that indicates whether the token exists.
          readOnly: true
        tokenTimestamp:
          $ref: "#/components/schemas/ApiBSONTimestamp"
        typeName:
          type: string
          description: Human-readable label that identifies the type of host that the part
            represents.
          readOnly: true
      readOnly: true
    ApiSearchDeploymentRequest:
      type: object
      properties:
        specs:
          type: array
          description: List of settings that configure the Search Nodes for your cluster.
          items:
            $ref: "#/components/schemas/ApiSearchDeploymentSpec"
          maxItems: 1
          minItems: 1
      required:
        - specs
    ApiSearchDeploymentResponse:
      type: object
      properties:
        groupId:
          type: string
          description: Unique 24-hexadecimal character string that identifies the project.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the search
            deployment.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        specs:
          type: array
          description: List of settings that configure the Search Nodes for your cluster.
          items:
            $ref: "#/components/schemas/ApiSearchDeploymentSpec"
          readOnly: true
        stateName:
          type: string
          description: Human-readable label that indicates the current operating condition
            of this search deployment.
          readOnly: true
    ApiSearchDeploymentSpec:
      type: object
      properties:
        instanceSize:
          type: string
          description: Hardware specification for the Search Node instance sizes.
        nodeCount:
          type: integer
          format: int32
          description: Number of Search Nodes in the cluster.
          example: 2
          maximum: 32
          minimum: 2
      required:
        - instanceSize
        - nodeCount
    AutoExportPolicy:
      type: object
      description: Policy for automatically exporting cloud backup snapshots.
      properties:
        exportBucketId:
          type: string
          description: Unique 24-hexadecimal character string that identifies the AWS
            Bucket.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
        frequencyType:
          type: string
          description: Human-readable label that indicates the rate at which the export
            policy item occurs.
      title: export
    CollStatsRankedNamespaces:
      type: object
      properties:
        groupId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the request
            project.
          readOnly: true
        identifierId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the request
            process.
          readOnly: true
        rankedNamespaces:
          type: array
          description: Ordered list of the hottest namespaces, highest value first.
          items:
            type: string
            description: A single namespace.
            readOnly: true
          readOnly: true
    CostExplorerFilterResponse:
      type: object
      description: Response object to give information about created query.
      properties:
        token:
          type: string
          description: The token used to identify the created Cost Explorer query.
          example: d9ab638a801efe182f98ae3e18ea4bb47b9fda808a28a8c7de205bb0e94f7d71
          maxLength: 64
          minLength: 64
    CreateDataProcessRegion:
      type: object
      description: Settings to configure the region where you wish to store your
        archived data.
      properties:
        cloudProvider:
          type: string
          description: Human-readable label that identifies the Cloud service provider
            where you wish to store your archived data.
        region:
          type: string
          description: Human-readable label that identifies the geographic location of the
            region where you wish to store your archived data.
      writeOnly: true
    Criteria:
      type: object
      description: >-
        Rules by which MongoDB Cloud archives data.


        Use the **criteria.type** field to choose how MongoDB Cloud selects data to archive. Choose data using the age of the data or a MongoDB query.

        **"criteria.type": "DATE"** selects documents to archive based on a date.

        **"criteria.type": "CUSTOM"** selects documents to archive based on a custom JSON query. MongoDB Cloud doesn't support **"criteria.type": "CUSTOM"** when **"collectionType": "TIMESERIES"**.
      properties:
        type:
          type: string
          description: >-
            Means by which MongoDB Cloud selects data to archive. Data can be
            chosen using the age of the data or a MongoDB query.

            **DATE** selects documents to archive based on a date.

            **CUSTOM** selects documents to archive based on a custom JSON query. MongoDB Cloud doesn't support **CUSTOM** when `"collectionType": "TIMESERIES"`.
        query:
          type: string
          description: "MongoDB find query that selects documents to archive. The
            specified query follows the syntax of the
            `db.collection.find(query)` command. This query can't use the empty
            document (`{}`) to return all documents. Set this parameter when
            **\"criteria.type\" : \"CUSTOM\"**."
        dateField:
          type: string
          description: 'Indexed database parameter that stores the date that determines
            when data moves to the online archive. MongoDB Cloud archives the
            data when the current date exceeds the date in this database
            parameter plus the number of days specified through the
            **expireAfterDays** parameter. Set this parameter when you set
            `"criteria.type" : "DATE"`.'
        dateFormat:
          type: string
          default: ISODATE
          description: >-
            Syntax used to write the date after which data moves to the online
            archive. Date can be expressed as ISO 8601 or Epoch timestamps. The
            Epoch timestamp can be expressed as nanoseconds, milliseconds, or
            seconds. Set this parameter when **"criteria.type" : "DATE"**.

            You must set **"criteria.type" : "DATE"** if **"collectionType": "TIMESERIES"**.
        expireAfterDays:
          type: integer
          format: int32
          description: 'Number of days after the value in the **criteria.dateField** when
            MongoDB Cloud archives data in the specified cluster. Set this
            parameter when you set **"criteria.type" : "DATE"**.'
    DataExpirationRule:
      type: object
      description: Rule for specifying when data should be deleted from the archive.
      properties:
        expireAfterDays:
          type: integer
          format: int32
          description: Number of days used in the date criteria for nominating documents
            for deletion.
          maximum: 9215
          minimum: 7
    DataProcessRegion:
      type: object
      description: Settings related to the region where you to store your archived data.
      properties:
        cloudProvider:
          type: string
          description: Human-readable label that identifies the Cloud service provider
            where you store your archived data.
          readOnly: true
        region:
          type: string
          description: Human-readable label that identifies the geographic location of the
            region where you store your archived data.
          readOnly: true
      readOnly: true
    GroupPaginatedEvent:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/EventViewForNdsGroup"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    ManagedNamespace:
      type: object
      properties:
        collection:
          type: string
          description: Human-readable label of the collection to manage for this Global
            Cluster.
        customShardKey:
          type: string
          description: Database parameter used to divide the *collection* into shards.
            Global clusters require a compound shard key. This compound shard
            key combines the location parameter and the user-selected custom
            key.
        db:
          type: string
          description: Human-readable label of the database to manage for this Global
            Cluster.
        isCustomShardKeyHashed:
          type: boolean
          default: false
          description: Flag that indicates whether someone hashed the custom shard key. If
            this parameter returns `false`, this cluster uses ranged sharding.
        isShardKeyUnique:
          type: boolean
          default: false
          description: Flag that indicates whether the underlying index enforces unique
            values.
        numInitialChunks:
          type: integer
          format: int64
          description: Minimum number of chunks to create initially when sharding an empty
            collection with a hashed shard key.
        presplitHashedZones:
          type: boolean
          default: false
          description: Flag that indicates whether MongoDB Cloud should create and
            distribute initial chunks for an empty or non-existing collection.
            MongoDB Cloud distributes data based on the defined zones and zone
            ranges for the collection.
    MatcherField:
      type: string
    NumberMetricValue:
      type: object
      description: Measurement of the **metricName** recorded at the time of the event.
      properties:
        number:
          type: number
          format: double
          description: Amount of the **metricName** recorded at the time of the event.
            This value triggered the alert.
          readOnly: true
        units:
          $ref: "#/components/schemas/NumberMetricUnits"
      readOnly: true
      title: Number Metric Value
    OrgPaginatedEvent:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/EventViewForOrg"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedAdvancedClusterDescription:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/AdvancedClusterDescription"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedAlertConfig:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/GroupAlertsConfig"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedAlert:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/AlertViewForNdsGroup"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedApiApiUser:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/ApiKeyUserDetails"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedApiAppUser:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/CloudAppUser"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedApiAtlasCheckpoint:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/ApiAtlasCheckpoint"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedApiAtlasDatabaseUser:
      type: object
      description: List of MongoDB Database users granted access to databases in the
        specified project.
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/CloudDatabaseUser"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedApiAtlasDiskBackupExportJob:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/DiskBackupExportJob"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedApiAtlasProviderRegions:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/CloudProviderRegions"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedApiAtlasServerlessBackupRestoreJob:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/ServerlessBackupRestoreJob"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedApiAtlasServerlessBackupSnapshot:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/ServerlessBackupSnapshot"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedApiInvoice:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/BillingInvoice"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedApiStreamsConnection:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/StreamsConnection"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedApiStreamsTenant:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/StreamsTenant"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedApiUserAccessListResponse:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/UserAccessListResponse"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedAppUser:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/CloudAppUser"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedAtlasGroup:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/Group"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedBackupSnapshotExportBucket:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/DiskBackupSnapshotAWSExportBucket"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedBackupSnapshot:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/DiskBackupSnapshot"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedCloudBackupReplicaSet:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/DiskBackupReplicaSet"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedCloudBackupRestoreJob:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/DiskBackupSnapshotRestoreJob"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedCloudBackupShardedClusterSnapshot:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/DiskBackupShardedClusterSnapshot"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedCloudProviderContainer:
      type: object
      description: List of Network Peering Containers that Amazon Web Services serves.
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/CloudProviderContainer"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
      title: Network Peering
    PaginatedContainerPeer:
      type: object
      description: Group of Network Peering connection settings.
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/BaseNetworkPeeringConnectionSettings"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedDatabase:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/MesurementsDatabase"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedDiskPartition:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/MeasurementDiskPartition"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedIntegration:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/ThirdPartyIntegration"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedNetworkAccess:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/NetworkPermissionEntry"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedOnlineArchive:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/BackupOnlineArchive"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedOrgGroup:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/OrgGroup"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedOrganization:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/AtlasOrganization"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedPipelineRun:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/IngestionPipelineRun"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedPrivateNetworkEndpointIdEntry:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/PrivateNetworkEndpointIdEntry"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedRestoreJob:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/BackupRestoreJob"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedRoleMapping:
      type: object
      description: List role mappings from the specified organization in the specified
        federation.
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/AuthFederationRoleMapping"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedServerlessInstanceDescription:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/ServerlessInstanceDescription"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedSnapshot:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/BackupSnapshot"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedTeamRole:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/TeamRole"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedTeam:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/TeamResponse"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedTenantRestore:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/TenantRestore"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedTenantSnapshot:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/BackupTenantSnapshot"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PaginatedUserCert:
      type: object
      properties:
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        results:
          type: array
          description: List of returned documents that MongoDB Cloud providers when
            completing this request.
          items:
            $ref: "#/components/schemas/UserCert"
          readOnly: true
        totalCount:
          type: integer
          format: int32
          description: Total number of documents available. MongoDB Cloud omits this value
            if `includeCount` is set to `false`.
          minimum: 0
          readOnly: true
    PartitionField:
      type: object
      description: Metadata to partition this online archive.
      properties:
        fieldName:
          type: string
          description: Human-readable label that identifies the parameter that MongoDB
            Cloud uses to partition data. To specify a nested parameter, use the
            dot notation.
          maxLength: 700
        fieldType:
          type: string
          description: Data type of the parameter that that MongoDB Cloud uses to
            partition data. Partition parameters of type
            [UUID](http://bsonspec.org/spec.html) must be of binary subtype 4.
            MongoDB Cloud skips partition parameters of type UUID with subtype
            3.
          readOnly: true
        order:
          type: integer
          format: int32
          default: 0
          description: Sequence in which MongoDB Cloud slices the collection data to
            create partitions. The resource expresses this sequence starting
            with zero. The value of the **criteria.dateField** parameter
            defaults as the first item in the partition sequence.
      required:
        - fieldName
        - order
      title: Online Archive Partition
    PerformanceAdvisorOperation:
      type: object
      properties:
        predicates:
          type: array
          description: List that contains the search criteria that the query uses. To use
            the values in key-value pairs in these predicates requires **Project
            Data Access Read Only** permissions or greater. Otherwise, MongoDB
            Cloud redacts these values.
          items:
            type: object
            description: List that contains the search criteria that the query uses. To use
              the values in key-value pairs in these predicates requires
              **Project Data Access Read Only** permissions or greater.
              Otherwise, MongoDB Cloud redacts these values.
            readOnly: true
          readOnly: true
        stats:
          $ref: "#/components/schemas/PerformanceAdvisorOpStats"
    PrivateIPMode:
      type: object
      properties:
        enabled:
          type: boolean
          description: Flag that indicates whether someone enabled **Connect via Peering
            Only** mode for the specified project.
      required:
        - enabled
    ProjectSettingItem:
      type: object
      properties:
        enabled:
          type: boolean
          description: >-
            Flag that indicates whether someone enabled the regionalized private
            endpoint setting for the specified project.


            - Set this value to `true` to enable regionalized private endpoints. This allows you to create more than one private endpoint in a cloud provider region. You need to enable this setting to connect to multi-region and global MongoDB Cloud sharded clusters. Enabling regionalized private endpoints introduces the following limitations:
              - Your applications must use the new connection strings for existing multi-region and global sharded clusters. This might cause downtime.
              - Your MongoDB Cloud project can't contain replica sets nor can you create new replica sets in this project.

              - You can't disable this setting if you have:
                - more than one private endpoint in more than one region
                - more than one private endpoint in one region and one private endpoint in one or more regions.

            - Set this value to `false` to disable regionalized private endpoints.
      required:
        - enabled
    ResourceEventType:
      type: string
      description: Unique identifier of event type.
      example: TAGS_MODIFIED
      title: Resource Event Types
    ApiAtlasFTSAnalyzers:
      type: object
      description: Settings that describe one Atlas Search custom analyzer.
      properties:
        charFilters:
          type: array
          description: Filters that examine text one character at a time and perform
            filtering operations.
          items: {}
        name:
          type: string
          description: >-
            Human-readable name that identifies the custom analyzer. Names must
            be unique within an index, and must not start with any of the
            following strings:

            - `lucene.`

            - `builtin.`

            - `mongodb.`
        tokenFilters:
          type: array
          description: >-
            Filter that performs operations such as:


            - Stemming, which reduces related words, such as "talking", "talked", and "talks" to their root word "talk".


            - Redaction, the removal of sensitive information from public documents.
          items: {}
        tokenizer:
          type: object
          description: Tokenizer that you want to use to create tokens. Tokens determine
            how Atlas Search splits up text into discrete chunks for indexing.
          properties:
            maxGram:
              type: integer
              description: Characters to include in the longest token that Atlas Search
                creates.
            minGram:
              type: integer
              description: Characters to include in the shortest token that Atlas Search
                creates.
            type:
              type: string
              description: Human-readable label that identifies this tokenizer type.
            group:
              type: integer
              description: Index of the character group within the matching expression to
                extract into tokens. Use `0` to extract all character groups.
            pattern:
              type: string
              description: Regular expression to match against.
            maxTokenLength:
              type: integer
              default: 255
              description: Maximum number of characters in a single token. Tokens greater than
                this length are split at this length into multiple tokens.
      required:
        - name
        - tokenizer
      title: analyzers
    ApiAtlasFTSMappings:
      type: object
      description: Index specifications for the collection's fields.
      properties:
        dynamic:
          type: boolean
          default: false
          description: Flag that indicates whether the index uses dynamic or static
            mappings. Required if **mappings.fields** is omitted.
          externalDocs:
            description: Dynamic or Static Mappings
            url: https://www.mongodb.com/docs/atlas/atlas-search/index-definitions/#field-mapping-examples
        fields:
          type: object
          additionalProperties:
            externalDocs:
              description: Atlas Search Field Mappings
              url: https://www.mongodb.com/docs/atlas/atlas-search/define-field-mappings/#define-field-mappings
          description: One or more field specifications for the Atlas Search index.
            Required if **mappings.dynamic** is omitted or set to **false**.
          externalDocs:
            description: Atlas Search Index
            url: https://www.mongodb.com/docs/atlas/atlas-search/index-definitions/
      title: mappings
  securitySchemes:
    DigestAuth:
      scheme: digest
      type: http
