# The file is generated by atlas2crd
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-mappings: |
      properties:
        spec:
          properties:
            v20250312:
              x-atlas-sdk-version: go.mongodb.org/atlas-sdk/v20250312005/admin
  creationTimestamp: null
  name: organizations.atlas.generated.mongodb.com
spec:
  group: atlas.generated.mongodb.com
  names:
    categories:
    - atlas
    kind: Organization
    listKind: OrganizationList
    plural: organizations
    shortNames:
    - aorg
    singular: organization
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: A organization, managed by the MongoDB Kubernetes Atlas Operator.
        properties:
          spec:
            description: |-
              Specification of the organization supporting the following versions:

              - v20250312

              At most one versioned spec can be specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
            properties:
              v20250312:
                description: The spec of the organization resource for version v20250312.
                properties:
                  entry:
                    description: The entry fields of the organization resource spec.
                      These fields can be set for creating and updating organizations.
                    properties:
                      apiKey:
                        description: Details of the programmatic API key to be created.
                        properties:
                          desc:
                            description: Purpose or explanation provided when someone
                              created this organization API key.
                            type: string
                          roles:
                            description: List of roles to grant this API key. If you
                              provide this list, provide a minimum of one role and
                              ensure each role applies to this organization.
                            items:
                              type: string
                            type: array
                        required:
                        - desc
                        - roles
                        type: object
                      federationSettingsId:
                        description: Unique 24-hexadecimal digit string that identifies
                          the federation to link the newly created organization to.
                          If specified, the proposed Organization Owner of the new
                          organization must have the Organization Owner role in an
                          organization associated with the federation.
                        example: 32b6e34b3d91647abb20e7b8
                        type: string
                      name:
                        description: Human-readable label that identifies the organization.
                        type: string
                      orgOwnerId:
                        description: Unique 24-hexadecimal digit string that identifies
                          the MongoDB Cloud user that you want to assign the Organization
                          Owner role. This user must be a member of the same organization
                          as the calling API key. If you provide `federationSettingsId`,  this
                          user must instead have the Organization Owner role on an
                          organization in the specified federation. This parameter
                          is required only when you authenticate with Programmatic
                          API Keys.
                        example: 32b6e34b3d91647abb20e7b8
                        type: string
                      skipDefaultAlertsSettings:
                        description: Disables automatic alert creation. When set to
                          true, no organization level alerts will be created automatically.
                        type: boolean
                    required:
                    - name
                    type: object
                type: object
            type: object
          status:
            description: 'Most recently observed read-only status of the organization
              for the specified resource version. This data may not be up to date
              and is populated by the system. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
            properties:
              conditions:
                description: Represents the latest available observations of a resource's
                  current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon.
                      type: integer
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - type
                  - status
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              v20250312:
                description: The last observed Atlas state of the organization resource
                  for version v20250312.
                properties:
                  federationSettingsId:
                    description: Unique 24-hexadecimal digit string that identifies
                      the federation that you linked the newly created organization
                      to.
                    example: 32b6e34b3d91647abb20e7b8
                    type: string
                  orgOwnerId:
                    description: Unique 24-hexadecimal digit string that identifies
                      the MongoDB Cloud user that you assigned the Organization Owner
                      role in the new organization.
                    example: 32b6e34b3d91647abb20e7b8
                    type: string
                  organization:
                    description: Details that describe the organization.
                    properties:
                      id:
                        description: Unique 24-hexadecimal digit string that identifies
                          the organization.
                        example: 32b6e34b3d91647abb20e7b8
                        type: string
                      isDeleted:
                        description: Flag that indicates whether this organization
                          has been deleted.
                        type: boolean
                      name:
                        description: Human-readable label that identifies the organization.
                        type: string
                      skipDefaultAlertsSettings:
                        description: Disables automatic alert creation. When set to
                          true, no organization level alerts will be created automatically.
                        type: boolean
                    required:
                    - name
                    type: object
                  skipDefaultAlertsSettings:
                    description: Disables automatic alert creation. When set to true,
                      no organization level alerts will be created automatically.
                    type: boolean
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-mappings: |
      properties:
        spec:
          properties:
            v20250312:
              x-atlas-sdk-version: go.mongodb.org/atlas-sdk/v20250312005/admin
  creationTimestamp: null
  name: groups.atlas.generated.mongodb.com
spec:
  group: atlas.generated.mongodb.com
  names:
    categories:
    - atlas
    kind: Group
    listKind: GroupList
    plural: groups
    shortNames:
    - ag
    singular: group
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: A group, managed by the MongoDB Kubernetes Atlas Operator.
        properties:
          spec:
            description: |-
              Specification of the group supporting the following versions:

              - v20250312

              At most one versioned spec can be specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
            properties:
              v20250312:
                description: The spec of the group resource for version v20250312.
                properties:
                  entry:
                    description: The entry fields of the group resource spec. These
                      fields can be set for creating and updating groups.
                    properties:
                      name:
                        description: Human-readable label that identifies the project
                          included in the MongoDB Cloud organization.
                        type: string
                      orgId:
                        description: Unique 24-hexadecimal digit string that identifies
                          the MongoDB Cloud organization to which the project belongs.
                        example: 32b6e34b3d91647abb20e7b8
                        type: string
                      regionUsageRestrictions:
                        description: |-
                          Applies to Atlas for Government only.

                          In Commercial Atlas, this field will be rejected in requests and missing in responses.

                          This field sets restrictions on available regions in the project.

                          `COMMERCIAL_FEDRAMP_REGIONS_ONLY`: Only allows deployments in FedRAMP Moderate regions.

                          `GOV_REGIONS_ONLY`: Only allows deployments in GovCloud regions.
                        type: string
                      tags:
                        description: List that contains key-value pairs between 1
                          to 255 characters in length for tagging and categorizing
                          the project.
                        items:
                          description: 'Key-value pair that tags and categorizes a
                            MongoDB Cloud organization, project, or cluster. For example,
                            `environment : production`.'
                          properties:
                            key:
                              description: 'Constant that defines the set of the tag.
                                For example, `environment` in the `environment : production`
                                tag.'
                              type: string
                            value:
                              description: 'Variable that belongs to the set of the
                                tag. For example, `production` in the `environment
                                : production` tag.'
                              type: string
                          required:
                          - key
                          - value
                          title: Resource Tag
                          type: object
                        type: array
                      withDefaultAlertsSettings:
                        description: Flag that indicates whether to create the project
                          with default alert settings.
                        type: boolean
                    required:
                    - name
                    - orgId
                    type: object
                  projectOwnerId:
                    description: Unique 24-hexadecimal digit string that identifies
                      the MongoDB Cloud user to whom to grant the Project Owner role
                      on the specified project. If you set this parameter, it overrides
                      the default value of the oldest Organization Owner.
                    type: string
                    x-kubernetes-validations:
                    - message: projectOwnerId cannot be modified after creation
                      rule: self == oldSelf
                required:
                - projectOwnerId
                type: object
            type: object
          status:
            description: 'Most recently observed read-only status of the group for
              the specified resource version. This data may not be up to date and
              is populated by the system. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
            properties:
              conditions:
                description: Represents the latest available observations of a resource's
                  current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon.
                      type: integer
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - type
                  - status
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              v20250312:
                description: The last observed Atlas state of the group resource for
                  version v20250312.
                properties:
                  clusterCount:
                    description: Quantity of MongoDB Cloud clusters deployed in this
                      project.
                    type: integer
                  created:
                    description: Date and time when MongoDB Cloud created this project.
                      This parameter expresses its value in the ISO 8601 timestamp
                      format in UTC.
                    type: string
                  id:
                    description: Unique 24-hexadecimal digit string that identifies
                      the MongoDB Cloud project.
                    example: 32b6e34b3d91647abb20e7b8
                    type: string
                required:
                - clusterCount
                - created
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-mappings: |
      properties:
        spec:
          properties:
            v20250312:
              properties:
                groupRef:
                  x-kubernetes-mapping:
                    nameSelector: .name
                    properties:
                    - $.status.v20250312.groupId
                    type:
                      group: atlas.generated.mongodb.com
                      kind: Group
                      resource: groups
                      version: v1
                  x-openapi-mapping:
                    property: $.groupId
              x-atlas-sdk-version: go.mongodb.org/atlas-sdk/v20250312005/admin
  creationTimestamp: null
  name: networkpeeringconnections.atlas.generated.mongodb.com
spec:
  group: atlas.generated.mongodb.com
  names:
    categories:
    - atlas
    kind: NetworkPeeringConnection
    listKind: NetworkPeeringConnectionList
    plural: networkpeeringconnections
    shortNames:
    - anpc
    singular: networkpeeringconnection
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: A networkpeeringconnection, managed by the MongoDB Kubernetes
          Atlas Operator.
        properties:
          spec:
            description: |-
              Specification of the networkpeeringconnection supporting the following versions:

              - v20250312

              At most one versioned spec can be specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
            properties:
              v20250312:
                description: The spec of the networkpeeringconnection resource for
                  version v20250312.
                properties:
                  entry:
                    description: The entry fields of the networkpeeringconnection
                      resource spec. These fields can be set for creating and updating
                      networkpeeringconnections.
                    properties:
                      accepterRegionName:
                        description: Amazon Web Services (AWS) region where the Virtual
                          Peering Connection (VPC) that you peered with the MongoDB
                          Cloud VPC resides. The resource returns `null` if your VPC
                          and the MongoDB Cloud VPC reside in the same region.
                        type: string
                      awsAccountId:
                        description: Unique twelve-digit string that identifies the
                          Amazon Web Services (AWS) account that owns the VPC that
                          you peered with the MongoDB Cloud VPC.
                        type: string
                      azureDirectoryId:
                        description: Unique string that identifies the Azure AD directory
                          in which the VNet peered with the MongoDB Cloud VNet resides.
                        type: string
                      azureSubscriptionId:
                        description: Unique string that identifies the Azure subscription
                          in which the VNet you peered with the MongoDB Cloud VNet
                          resides.
                        type: string
                      containerId:
                        description: Unique 24-hexadecimal digit string that identifies
                          the MongoDB Cloud network container that contains the specified
                          network peering connection.
                        example: 32b6e34b3d91647abb20e7b8
                        type: string
                      gcpProjectId:
                        description: Human-readable label that identifies the GCP
                          project that contains the network that you want to peer
                          with the MongoDB Cloud VPC.
                        type: string
                      networkName:
                        description: Human-readable label that identifies the network
                          to peer with the MongoDB Cloud VPC.
                        type: string
                      providerName:
                        description: Cloud service provider that serves the requested
                          network peering connection.
                        type: string
                      resourceGroupName:
                        description: Human-readable label that identifies the resource
                          group in which the VNet to peer with the MongoDB Cloud VNet
                          resides.
                        type: string
                      routeTableCidrBlock:
                        description: Internet Protocol (IP) addresses expressed in
                          Classless Inter-Domain Routing (CIDR) notation of the VPC's
                          subnet that you want to peer with the MongoDB Cloud VPC.
                        type: string
                      vnetName:
                        description: Human-readable label that identifies the VNet
                          that you want to peer with the MongoDB Cloud VNet.
                        type: string
                      vpcId:
                        description: Unique string that identifies the VPC on Amazon
                          Web Services (AWS) that you want to peer with the MongoDB
                          Cloud VPC.
                        type: string
                    required:
                    - containerId
                    type: object
                  groupId:
                    description: |-
                      Unique 24-hexadecimal digit string that identifies your project. Use the [/groups](#tag/Projects/operation/listProjects) endpoint to retrieve all projects to which the authenticated user has access.

                      **NOTE**: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.
                    example: 32b6e34b3d91647abb20e7b8
                    type: string
                    x-kubernetes-validations:
                    - message: groupId cannot be modified after creation
                      rule: self == oldSelf
                  groupRef:
                    description: |-
                      A reference to a "Group" resource.
                      The value of "$.status.v20250312.groupId" will be used to set "groupId".
                      Mutually exclusive with the "groupId" property.
                    properties:
                      name:
                        description: Name of the "Group" resource.
                        type: string
                    type: object
                type: object
            type: object
          status:
            description: 'Most recently observed read-only status of the networkpeeringconnection
              for the specified resource version. This data may not be up to date
              and is populated by the system. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
            properties:
              conditions:
                description: Represents the latest available observations of a resource's
                  current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon.
                      type: integer
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - type
                  - status
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              v20250312:
                description: The last observed Atlas state of the networkpeeringconnection
                  resource for version v20250312.
                properties:
                  connectionId:
                    description: Unique string that identifies the peering connection
                      on AWS.
                    type: string
                  errorMessage:
                    description: Details of the error returned when requesting a GCP
                      network peering resource. The resource returns `null` if the
                      request succeeded.
                    type: string
                  errorState:
                    description: 'Error message returned when a requested Azure network
                      peering resource returns `"status" : "FAILED"`. The resource
                      returns `null` if the request succeeded.'
                    type: string
                  errorStateName:
                    description: Type of error that can be returned when requesting
                      an Amazon Web Services (AWS) peering connection. The resource
                      returns `null` if the request succeeded.
                    type: string
                  id:
                    description: Unique 24-hexadecimal digit string that identifies
                      the network peering connection.
                    example: 32b6e34b3d91647abb20e7b8
                    type: string
                  status:
                    description: State of the network peering connection at the time
                      you made the request.
                    type: string
                  statusName:
                    description: State of the network peering connection at the time
                      you made the request.
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-mappings: |
      properties:
        spec:
          properties:
            v20250312:
              properties:
                groupRef:
                  x-kubernetes-mapping:
                    nameSelector: .name
                    properties:
                    - $.status.v20250312.groupId
                    type:
                      group: atlas.generated.mongodb.com
                      kind: Group
                      resource: groups
                      version: v1
                  x-openapi-mapping:
                    property: $.groupId
              x-atlas-sdk-version: go.mongodb.org/atlas-sdk/v20250312005/admin
  creationTimestamp: null
  name: databaseusers.atlas.generated.mongodb.com
spec:
  group: atlas.generated.mongodb.com
  names:
    categories:
    - atlas
    kind: DatabaseUser
    listKind: DatabaseUserList
    plural: databaseusers
    shortNames:
    - adu
    singular: databaseuser
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: A databaseuser, managed by the MongoDB Kubernetes Atlas Operator.
        properties:
          spec:
            description: |-
              Specification of the databaseuser supporting the following versions:

              - v20250312

              At most one versioned spec can be specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
            properties:
              v20250312:
                description: The spec of the databaseuser resource for version v20250312.
                properties:
                  entry:
                    description: The entry fields of the databaseuser resource spec.
                      These fields can be set for creating and updating databaseusers.
                    properties:
                      awsIAMType:
                        description: Human-readable label that indicates whether the
                          new database user authenticates with the Amazon Web Services
                          (AWS) Identity and Access Management (IAM) credentials associated
                          with the user or the user's role.
                        type: string
                      databaseName:
                        description: The database against which the database user
                          authenticates. Database users must provide both a username
                          and authentication database to log into MongoDB. If the
                          user authenticates with AWS IAM, x.509, LDAP, or OIDC Workload
                          this value should be `$external`. If the user authenticates
                          with SCRAM-SHA or OIDC Workforce, this value should be `admin`.
                        type: string
                      deleteAfterDate:
                        description: Date and time when MongoDB Cloud deletes the
                          user. This parameter expresses its value in the ISO 8601
                          timestamp format in UTC and can include the time zone designation.
                          You must specify a future date that falls within one week
                          of making the Application Programming Interface (API) request.
                        type: string
                      description:
                        description: Description of this database user.
                        type: string
                      groupId:
                        description: Unique 24-hexadecimal digit string that identifies
                          the project.
                        type: string
                      labels:
                        description: List that contains the key-value pairs for tagging
                          and categorizing the MongoDB database user. The labels that
                          you define do not appear in the console.
                        items:
                          description: Human-readable labels applied to this MongoDB
                            Cloud component.
                          properties:
                            key:
                              description: Key applied to tag and categorize this
                                component.
                              type: string
                            value:
                              description: Value set to the Key applied to tag and
                                categorize this component.
                              type: string
                          title: Component Label
                          type: object
                        type: array
                      ldapAuthType:
                        description: Part of the Lightweight Directory Access Protocol
                          (LDAP) record that the database uses to authenticate this
                          database user on the LDAP host.
                        type: string
                      oidcAuthType:
                        description: Human-readable label that indicates whether the
                          new database user or group authenticates with OIDC federated
                          authentication. To create a federated authentication user,
                          specify the value of USER in this field. To create a federated
                          authentication group, specify the value of IDP_GROUP in
                          this field.
                        type: string
                      password:
                        description: Alphanumeric string that authenticates this database
                          user against the database specified in `databaseName`. To
                          authenticate with SCRAM-SHA, you must specify this parameter.
                          This parameter doesn't appear in this response.
                        type: string
                      roles:
                        description: List that provides the pairings of one role with
                          one applicable database.
                        items:
                          description: Range of resources available to this database
                            user.
                          properties:
                            collectionName:
                              description: Collection on which this role applies.
                              type: string
                            databaseName:
                              description: Database to which the user is granted access
                                privileges.
                              type: string
                            roleName:
                              description: Human-readable label that identifies a
                                group of privileges assigned to a database user. This
                                value can either be a built-in role or a custom role.
                              type: string
                          required:
                          - databaseName
                          - roleName
                          title: Database User Role
                          type: object
                        type: array
                      scopes:
                        description: List that contains clusters, MongoDB Atlas Data
                          Lakes, and MongoDB Atlas Streams Instances that this database
                          user can access. If omitted, MongoDB Cloud grants the database
                          user access to all the clusters, MongoDB Atlas Data Lakes,
                          and MongoDB Atlas Streams Instances in the project.
                        items:
                          description: Range of resources available to this database
                            user.
                          properties:
                            name:
                              description: Human-readable label that identifies the
                                cluster or MongoDB Atlas Data Lake that this database
                                user can access.
                              type: string
                            type:
                              description: Category of resource that this database
                                user can access.
                              type: string
                          required:
                          - name
                          - type
                          title: Database User Scope
                          type: object
                        type: array
                      username:
                        description: |
                          Human-readable label that represents the user that authenticates to MongoDB. The format of this label depends on the method of authentication:

                          | Authentication Method | Parameter Needed | Parameter Value | username Format |
                          |---|---|---|---|
                          | AWS IAM | awsIAMType | ROLE | <abbr title="Amazon Resource Name">ARN</abbr> |
                          | AWS IAM | awsIAMType | USER | <abbr title="Amazon Resource Name">ARN</abbr> |
                          | x.509 | x509Type | CUSTOMER | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |
                          | x.509 | x509Type | MANAGED | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |
                          | LDAP | ldapAuthType | USER | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |
                          | LDAP | ldapAuthType | GROUP | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |
                          | OIDC Workforce | oidcAuthType | IDP_GROUP | Atlas OIDC IdP ID (found in federation settings), followed by a '/', followed by the IdP group name |
                          | OIDC Workload | oidcAuthType | USER | Atlas OIDC IdP ID (found in federation settings), followed by a '/', followed by the IdP user name |
                          | SCRAM-SHA | awsIAMType, x509Type, ldapAuthType, oidcAuthType | NONE | Alphanumeric string |
                        type: string
                      x509Type:
                        description: |-
                          X.509 method that MongoDB Cloud uses to authenticate the database user.

                          - For application-managed X.509, specify `MANAGED`.
                          - For self-managed X.509, specify `CUSTOMER`.

                          Users created with the `CUSTOMER` method require a Common Name (CN) in the **username** parameter. You must create externally authenticated users on the `$external` database.
                        type: string
                    required:
                    - databaseName
                    - groupId
                    - username
                    type: object
                  groupId:
                    description: |-
                      Unique 24-hexadecimal digit string that identifies your project. Use the [/groups](#tag/Projects/operation/listProjects) endpoint to retrieve all projects to which the authenticated user has access.

                      **NOTE**: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.
                    example: 32b6e34b3d91647abb20e7b8
                    type: string
                    x-kubernetes-validations:
                    - message: groupId cannot be modified after creation
                      rule: self == oldSelf
                  groupRef:
                    description: |-
                      A reference to a "Group" resource.
                      The value of "$.status.v20250312.groupId" will be used to set "groupId".
                      Mutually exclusive with the "groupId" property.
                    properties:
                      name:
                        description: Name of the "Group" resource.
                        type: string
                    type: object
                type: object
            type: object
          status:
            description: 'Most recently observed read-only status of the databaseuser
              for the specified resource version. This data may not be up to date
              and is populated by the system. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
            properties:
              conditions:
                description: Represents the latest available observations of a resource's
                  current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon.
                      type: integer
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - type
                  - status
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-mappings: |
      properties:
        spec:
          properties:
            v20250312:
              properties:
                groupRef:
                  x-kubernetes-mapping:
                    nameSelector: .name
                    properties:
                    - $.status.v20250312.groupId
                    type:
                      group: atlas.generated.mongodb.com
                      kind: Group
                      resource: groups
                      version: v1
                  x-openapi-mapping:
                    property: $.groupId
              x-atlas-sdk-version: go.mongodb.org/atlas-sdk/v20250312005/admin
  creationTimestamp: null
  name: backupcompliancepolicies.atlas.generated.mongodb.com
spec:
  group: atlas.generated.mongodb.com
  names:
    categories:
    - atlas
    kind: BackupCompliancePolicy
    listKind: BackupCompliancePolicyList
    plural: backupcompliancepolicies
    shortNames:
    - abcp
    singular: backupcompliancepolicy
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: A backupcompliancepolicy, managed by the MongoDB Kubernetes Atlas
          Operator.
        properties:
          spec:
            description: |-
              Specification of the backupcompliancepolicy supporting the following versions:

              - v20250312

              At most one versioned spec can be specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
            properties:
              v20250312:
                description: The spec of the backupcompliancepolicy resource for version
                  v20250312.
                properties:
                  entry:
                    description: The entry fields of the backupcompliancepolicy resource
                      spec. These fields can be set for creating and updating backupcompliancepolicies.
                    properties:
                      authorizedEmail:
                        description: Email address of the user who authorized to update
                          the Backup Compliance Policy  settings.
                        type: string
                      authorizedUserFirstName:
                        description: First name of the user who authorized to updated
                          the Backup Compliance Policy  settings.
                        type: string
                      authorizedUserLastName:
                        description: Last name of the user who authorized to updated
                          the Backup Compliance Policy  settings.
                        type: string
                      copyProtectionEnabled:
                        description: Flag that indicates whether to prevent cluster
                          users from deleting backups copied to other regions, even
                          if those additional snapshot regions are removed. If unspecified,
                          this value defaults to false.
                        type: boolean
                      encryptionAtRestEnabled:
                        description: Flag that indicates whether Encryption at Rest
                          using Customer Key  Management is required for all clusters
                          with a Backup Compliance Policy. If unspecified, this value
                          defaults to false.
                        type: boolean
                      onDemandPolicyItem:
                        description: Specifications for on-demand policy.
                        properties:
                          frequencyInterval:
                            description: Number that indicates the frequency interval
                              for a set of snapshots. MongoDB Cloud ignores this setting
                              for non-hourly policy items in Backup Compliance Policy
                              settings.
                            type: integer
                          frequencyType:
                            description: Human-readable label that identifies the
                              frequency type associated with the backup policy.
                            type: string
                          retentionUnit:
                            description: Unit of time in which MongoDB Cloud measures
                              snapshot retention.
                            type: string
                          retentionValue:
                            description: |-
                              Duration in days, weeks, months, or years that MongoDB Cloud retains the snapshot. For less frequent policy items, MongoDB Cloud requires that you specify a value greater than or equal to the value specified for more frequent policy items.

                              For example: If the hourly policy item specifies a retention of two days, you must specify two days or greater for the retention of the weekly policy item.
                            type: integer
                        required:
                        - frequencyInterval
                        - frequencyType
                        - retentionUnit
                        - retentionValue
                        type: object
                      pitEnabled:
                        description: Flag that indicates whether the cluster uses
                          Continuous Cloud Backups with a Backup Compliance Policy.
                          If unspecified, this value defaults to false.
                        type: boolean
                      projectId:
                        description: Unique 24-hexadecimal digit string that identifies
                          the project for the Backup Compliance Policy.
                        example: 32b6e34b3d91647abb20e7b8
                        type: string
                      restoreWindowDays:
                        description: Number of previous days that you can restore
                          back to with Continuous Cloud Backup with a Backup Compliance
                          Policy. You must specify a positive, non-zero integer, and
                          the maximum retention window can't exceed the hourly retention
                          time. This parameter applies only to Continuous Cloud Backups
                          with a Backup Compliance Policy.
                        type: integer
                      scheduledPolicyItems:
                        description: List that contains the specifications for one
                          scheduled policy.
                        items:
                          description: Specifications for scheduled policy.
                          properties:
                            frequencyInterval:
                              description: |-
                                Number that indicates the frequency interval for a set of Snapshots. A value of `1` specifies the first instance of the corresponding `frequencyType`.

                                - In a yearly policy item, `1` indicates that the yearly Snapshot occurs on the first day of January and `12` indicates the first day of December.

                                - In a monthly policy item, `1` indicates that the monthly Snapshot occurs on the first day of the month and `40` indicates the last day of the month.

                                - In a weekly policy item, `1` indicates that the weekly Snapshot occurs on Monday and `7` indicates Sunday.

                                - In an hourly policy item, you can set the frequency interval to `1`, `2`, `4`, `6`, `8`, or `12`. For hourly policy items for NVMe clusters, MongoDB Cloud accepts only `12` as the frequency interval value.

                                 MongoDB Cloud ignores this setting for non-hourly policy items in Backup Compliance Policy settings.
                              type: integer
                            frequencyType:
                              description: Human-readable label that identifies the
                                frequency type associated with the backup policy.
                              type: string
                            retentionUnit:
                              description: Unit of time in which MongoDB Cloud measures
                                Snapshot retention.
                              type: string
                            retentionValue:
                              description: |-
                                Duration in days, weeks, months, or years that MongoDB Cloud retains the Snapshot. For less frequent policy items, MongoDB Cloud requires that you specify a value greater than or equal to the value specified for more frequent policy items.

                                For example: If the hourly policy item specifies a retention of two days, you must specify two days or greater for the retention of the weekly policy item.
                              type: integer
                          required:
                          - frequencyInterval
                          - frequencyType
                          - retentionUnit
                          - retentionValue
                          type: object
                        type: array
                    required:
                    - authorizedEmail
                    - authorizedUserFirstName
                    - authorizedUserLastName
                    type: object
                  groupId:
                    description: |-
                      Unique 24-hexadecimal digit string that identifies your project. Use the [/groups](#tag/Projects/operation/listProjects) endpoint to retrieve all projects to which the authenticated user has access.

                      **NOTE**: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.
                    example: 32b6e34b3d91647abb20e7b8
                    type: string
                    x-kubernetes-validations:
                    - message: groupId cannot be modified after creation
                      rule: self == oldSelf
                  groupRef:
                    description: |-
                      A reference to a "Group" resource.
                      The value of "$.status.v20250312.groupId" will be used to set "groupId".
                      Mutually exclusive with the "groupId" property.
                    properties:
                      name:
                        description: Name of the "Group" resource.
                        type: string
                    type: object
                  overwriteBackupPolicies:
                    description: Flag that indicates whether to overwrite non complying
                      backup policies with the new data protection settings or not.
                    type: boolean
                    x-kubernetes-validations:
                    - message: overwriteBackupPolicies cannot be modified after creation
                      rule: self == oldSelf
                required:
                - overwriteBackupPolicies
                type: object
            type: object
          status:
            description: 'Most recently observed read-only status of the backupcompliancepolicy
              for the specified resource version. This data may not be up to date
              and is populated by the system. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
            properties:
              conditions:
                description: Represents the latest available observations of a resource's
                  current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon.
                      type: integer
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - type
                  - status
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              v20250312:
                description: The last observed Atlas state of the backupcompliancepolicy
                  resource for version v20250312.
                properties:
                  deletable:
                    description: Flag that indicates whether the Backup Compliance
                      Policy is allowed to be disabled. It is default to false and
                      a support ticket needs to be filed to request setting to true.
                    type: boolean
                  state:
                    description: Label that indicates the state of the Backup Compliance
                      Policy settings. MongoDB Cloud ignores this setting when you
                      enable or update the Backup Compliance Policy settings.
                    type: string
                  updatedDate:
                    description: ISO 8601 timestamp format in UTC that indicates when
                      the user updated the Data Protection Policy settings. MongoDB
                      Cloud ignores this setting when you enable or update the Backup
                      Compliance Policy settings.
                    type: string
                  updatedUser:
                    description: Email address that identifies the user who updated
                      the Backup Compliance Policy settings. MongoDB Cloud ignores
                      this email setting when you enable or update the Backup Compliance
                      Policy settings.
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-mappings: |
      properties:
        spec:
          properties:
            v20250312:
              properties:
                groupRef:
                  x-kubernetes-mapping:
                    nameSelector: .name
                    properties:
                    - $.status.v20250312.groupId
                    type:
                      group: atlas.generated.mongodb.com
                      kind: Group
                      resource: groups
                      version: v1
                  x-openapi-mapping:
                    property: $.groupId
              x-atlas-sdk-version: go.mongodb.org/atlas-sdk/v20250312005/admin
  creationTimestamp: null
  name: backupschedules.atlas.generated.mongodb.com
spec:
  group: atlas.generated.mongodb.com
  names:
    categories:
    - atlas
    kind: BackupSchedule
    listKind: BackupScheduleList
    plural: backupschedules
    shortNames:
    - abs
    singular: backupschedule
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: A backupschedule, managed by the MongoDB Kubernetes Atlas Operator.
        properties:
          spec:
            description: |-
              Specification of the backupschedule supporting the following versions:

              - v20250312

              At most one versioned spec can be specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
            properties:
              v20250312:
                description: The spec of the backupschedule resource for version v20250312.
                properties:
                  clusterName:
                    description: Human-readable label that identifies the cluster.
                    type: string
                    x-kubernetes-validations:
                    - message: clusterName cannot be modified after creation
                      rule: self == oldSelf
                  entry:
                    description: The entry fields of the backupschedule resource spec.
                      These fields can be set for creating and updating backupschedules.
                    properties:
                      autoExportEnabled:
                        description: Flag that indicates whether MongoDB Cloud automatically
                          exports Cloud Backup Snapshots to the Export Bucket.
                        type: boolean
                      copySettings:
                        description: List that contains a document for each copy setting
                          item in the desired backup policy.
                        items:
                          description: Copy setting item in the desired backup policy.
                          properties:
                            cloudProvider:
                              description: Human-readable label that identifies the
                                cloud provider that stores the snapshot copy.
                              type: string
                            frequencies:
                              description: List that describes which types of snapshots
                                to copy.
                              items:
                                type: string
                              type: array
                            regionName:
                              description: Target region to copy snapshots belonging
                                to zoneId. Please supply the 'Atlas Region'.
                              type: string
                            shouldCopyOplogs:
                              description: Flag that indicates whether to copy the
                                oplogs to the target region. You can use the oplogs
                                to perform point-in-time restores.
                              type: boolean
                            zoneId:
                              description: Unique 24-hexadecimal digit string that
                                identifies the zone in a cluster. For global clusters,
                                there can be multiple zones to choose from. For sharded
                                clusters and replica set clusters, there is only one
                                zone in the cluster. To find the Zone Id, do a GET
                                request to Return One Cluster from One Project and
                                consult the replicationSpecs array.
                              example: 32b6e34b3d91647abb20e7b8
                              type: string
                          required:
                          - zoneId
                          type: object
                        type: array
                      deleteCopiedBackups:
                        description: List that contains a document for each deleted
                          copy setting whose backup copies you want to delete.
                        items:
                          description: Deleted copy setting whose backup copies need
                            to also be deleted.
                          properties:
                            cloudProvider:
                              description: Human-readable label that identifies the
                                cloud provider for the deleted copy setting whose
                                backup copies you want to delete.
                              type: string
                            regionName:
                              description: Target region for the deleted copy setting
                                whose backup copies you want to delete. Please supply
                                the 'Atlas Region'.
                              type: string
                            zoneId:
                              description: Unique 24-hexadecimal digit string that
                                identifies the zone in a cluster. For global clusters,
                                there can be multiple zones to choose from. For sharded
                                clusters and replica set clusters, there is only one
                                zone in the cluster. To find the Zone Id, do a GET
                                request to Return One Cluster from One Project and
                                consult the replicationSpecs array.
                              example: 32b6e34b3d91647abb20e7b8
                              type: string
                          type: object
                        type: array
                      export:
                        description: Policy for automatically exporting Cloud Backup
                          Snapshots.
                        properties:
                          exportBucketId:
                            description: Unique 24-hexadecimal character string that
                              identifies the Export Bucket.
                            example: 32b6e34b3d91647abb20e7b8
                            type: string
                          frequencyType:
                            description: Human-readable label that indicates the rate
                              at which the export policy item occurs.
                            type: string
                        title: export
                        type: object
                      extraRetentionSettings:
                        description: List that contains a document for each extra
                          retention setting item in the desired backup policy.
                        items:
                          description: extra retention setting item in the desired
                            backup policy.
                          properties:
                            frequencyType:
                              description: The frequency type for the extra retention
                                settings for the cluster.
                              type: string
                            retentionDays:
                              description: The number of extra retention days for
                                the cluster.
                              type: integer
                          type: object
                        type: array
                      policies:
                        description: Rules set for this backup schedule.
                        items:
                          description: List that contains a document for each backup
                            policy item in the desired backup policy.
                          properties:
                            id:
                              description: Unique 24-hexadecimal digit string that
                                identifies this backup policy.
                              example: 32b6e34b3d91647abb20e7b8
                              type: string
                            policyItems:
                              description: List that contains the specifications for
                                one policy.
                              items:
                                description: Specifications for one policy.
                                properties:
                                  frequencyInterval:
                                    description: |-
                                      Number that indicates the frequency interval for a set of Snapshots. A value of `1` specifies the first instance of the corresponding `frequencyType`.

                                      - In a yearly policy item, `1` indicates that the yearly Snapshot occurs on the first day of January and `12` indicates the first day of December.

                                      - In a monthly policy item, `1` indicates that the monthly Snapshot occurs on the first day of the month and `40` indicates the last day of the month.

                                      - In a weekly policy item, `1` indicates that the weekly Snapshot occurs on Monday and `7` indicates Sunday.

                                      - In an hourly policy item, you can set the frequency interval to `1`, `2`, `4`, `6`, `8`, or `12`. For hourly policy items for NVMe clusters, MongoDB Cloud accepts only `12` as the frequency interval value.

                                       MongoDB Cloud ignores this setting for non-hourly policy items in Backup Compliance Policy settings.
                                    type: integer
                                  frequencyType:
                                    description: Human-readable label that identifies
                                      the frequency type associated with the backup
                                      policy.
                                    type: string
                                  retentionUnit:
                                    description: Unit of time in which MongoDB Cloud
                                      measures Snapshot retention.
                                    type: string
                                  retentionValue:
                                    description: |-
                                      Duration in days, weeks, months, or years that MongoDB Cloud retains the Snapshot. For less frequent policy items, MongoDB Cloud requires that you specify a value greater than or equal to the value specified for more frequent policy items.

                                      For example: If the hourly policy item specifies a retention of two days, you must specify two days or greater for the retention of the weekly policy item.
                                    type: integer
                                required:
                                - frequencyInterval
                                - frequencyType
                                - retentionUnit
                                - retentionValue
                                type: object
                              type: array
                          type: object
                        type: array
                      referenceHourOfDay:
                        description: Hour of day in Coordinated Universal Time (UTC)
                          that represents when MongoDB Cloud takes the Snapshot.
                        type: integer
                      referenceMinuteOfHour:
                        description: Minute of the **referenceHourOfDay** that represents
                          when MongoDB Cloud takes the Snapshot.
                        type: integer
                      restoreWindowDays:
                        description: Number of previous days that you can restore
                          back to with Continuous Cloud Backup accuracy. You must
                          specify a positive, non-zero integer. This parameter applies
                          to continuous Cloud Backups only.
                        type: integer
                      updateSnapshots:
                        description: Flag that indicates whether to apply the retention
                          changes in the updated backup policy to Snapshots that MongoDB
                          Cloud took previously.
                        type: boolean
                      useOrgAndGroupNamesInExportPrefix:
                        description: Flag that indicates whether to use organization
                          and project names instead of organization and project UUIDs
                          in the path to the metadata files that MongoDB Cloud uploads
                          to your Export Bucket.
                        type: boolean
                    type: object
                  groupId:
                    description: |-
                      Unique 24-hexadecimal digit string that identifies your project. Use the [/groups](#tag/Projects/operation/listProjects) endpoint to retrieve all projects to which the authenticated user has access.

                      **NOTE**: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.
                    example: 32b6e34b3d91647abb20e7b8
                    type: string
                    x-kubernetes-validations:
                    - message: groupId cannot be modified after creation
                      rule: self == oldSelf
                  groupRef:
                    description: |-
                      A reference to a "Group" resource.
                      The value of "$.status.v20250312.groupId" will be used to set "groupId".
                      Mutually exclusive with the "groupId" property.
                    properties:
                      name:
                        description: Name of the "Group" resource.
                        type: string
                    type: object
                required:
                - clusterName
                type: object
            type: object
          status:
            description: 'Most recently observed read-only status of the backupschedule
              for the specified resource version. This data may not be up to date
              and is populated by the system. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
            properties:
              conditions:
                description: Represents the latest available observations of a resource's
                  current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon.
                      type: integer
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - type
                  - status
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              v20250312:
                description: The last observed Atlas state of the backupschedule resource
                  for version v20250312.
                properties:
                  clusterId:
                    description: Unique 24-hexadecimal digit string that identifies
                      the cluster with the Snapshot you want to return.
                    example: 32b6e34b3d91647abb20e7b8
                    type: string
                  clusterName:
                    description: Human-readable label that identifies the cluster
                      with the Snapshot you want to return.
                    type: string
                  nextSnapshot:
                    description: Date and time when MongoDB Cloud takes the next Snapshot.
                      This parameter expresses its value in the ISO 8601 timestamp
                      format in UTC.
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-mappings: |
      properties:
        spec:
          properties:
            v20250312:
              properties:
                groupRef:
                  x-kubernetes-mapping:
                    nameSelector: .name
                    properties:
                    - $.status.v20250312.groupId
                    type:
                      group: atlas.generated.mongodb.com
                      kind: Group
                      resource: groups
                      version: v1
                  x-openapi-mapping:
                    property: $.groupId
              x-atlas-sdk-version: go.mongodb.org/atlas-sdk/v20250312005/admin
  creationTimestamp: null
  name: datafederations.atlas.generated.mongodb.com
spec:
  group: atlas.generated.mongodb.com
  names:
    categories:
    - atlas
    kind: DataFederation
    listKind: DataFederationList
    plural: datafederations
    shortNames:
    - adf
    singular: datafederation
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: A datafederation, managed by the MongoDB Kubernetes Atlas Operator.
        properties:
          spec:
            description: |-
              Specification of the datafederation supporting the following versions:

              - v20250312

              At most one versioned spec can be specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
            properties:
              v20250312:
                description: The spec of the datafederation resource for version v20250312.
                properties:
                  entry:
                    description: The entry fields of the datafederation resource spec.
                      These fields can be set for creating and updating datafederations.
                    properties:
                      cloudProviderConfig:
                        description: Cloud provider where this Federated Database
                          Instance is hosted.
                        properties:
                          aws:
                            description: Configuration for running Data Federation
                              in AWS.
                            properties:
                              roleId:
                                description: Unique identifier of the role that the
                                  data lake can use to access the data stores.Required
                                  if specifying cloudProviderConfig.
                                example: 32b6e34b3d91647abb20e7b8
                                type: string
                              testS3Bucket:
                                description: Name of the S3 data bucket that the provided
                                  role ID is authorized to access.Required if specifying
                                  cloudProviderConfig.
                                type: string
                            required:
                            - roleId
                            - testS3Bucket
                            type: object
                          azure:
                            description: Configuration for running Data Federation
                              in Azure.
                            properties:
                              roleId:
                                description: Unique identifier of the role that Data
                                  Federation can use to access the data stores. Required
                                  if specifying cloudProviderConfig.
                                example: 32b6e34b3d91647abb20e7b8
                                type: string
                            required:
                            - roleId
                            type: object
                          gcp:
                            description: Configuration for running Data Federation
                              in GCP.
                            properties:
                              roleId:
                                description: Unique identifier of the role that Data
                                  Federation can use to access the data stores. Required
                                  if specifying cloudProviderConfig.
                                example: 32b6e34b3d91647abb20e7b8
                                type: string
                            required:
                            - roleId
                            type: object
                        title: Data Federation Cloud Provider
                        type: object
                      dataProcessRegion:
                        description: Information about the cloud provider region to
                          which the Federated Database Instance routes client connections.
                        properties:
                          cloudProvider:
                            description: Name of the cloud service that hosts the
                              Federated Database Instance's infrastructure.
                            type: string
                          region:
                            description: Name of the region to which the data lake
                              routes client connections.
                            type: string
                        required:
                        - cloudProvider
                        - region
                        type: object
                      name:
                        description: Human-readable label that identifies the Federated
                          Database Instance.
                        type: string
                      storage:
                        description: Configuration information for each data store
                          and its mapping to MongoDB Cloud databases.
                        properties:
                          databases:
                            description: Array that contains the queryable databases
                              and collections for this data lake.
                            items:
                              description: Database associated with this data lake.
                                Databases contain collections and views.
                              properties:
                                collections:
                                  description: Array of collections and data sources
                                    that map to a ``stores`` data store.
                                  items:
                                    description: A collection and data sources that
                                      map to a ``stores`` data store.
                                    properties:
                                      dataSources:
                                        description: Array that contains the data
                                          stores that map to a collection for this
                                          data lake.
                                        items:
                                          description: Data store that maps to a collection
                                            for this data lake.
                                          properties:
                                            allowInsecure:
                                              description: Flag that validates the
                                                scheme in the specified URLs. If `true`,
                                                allows insecure `HTTP` scheme, doesn't
                                                verify the server's certificate chain
                                                and hostname, and accepts any certificate
                                                with any hostname presented by the
                                                server. If `false`, allows secure
                                                `HTTPS` scheme only.
                                              type: boolean
                                            collection:
                                              description: Human-readable label that
                                                identifies the collection in the database.
                                                For creating a wildcard (`*`) collection,
                                                you must omit this parameter.
                                              type: string
                                            collectionRegex:
                                              description: Regex pattern to use for
                                                creating the wildcard (*) collection.
                                                To learn more about the regex syntax,
                                                see [Go programming language](https://pkg.go.dev/regexp).
                                              type: string
                                            database:
                                              description: Human-readable label that
                                                identifies the database, which contains
                                                the collection in the cluster. You
                                                must omit this parameter to generate
                                                wildcard (`*`) collections for dynamically
                                                generated databases.
                                              type: string
                                            databaseRegex:
                                              description: Regex pattern to use for
                                                creating the wildcard (*) database.
                                                To learn more about the regex syntax,
                                                see [Go programming language](https://pkg.go.dev/regexp).
                                              type: string
                                            datasetName:
                                              description: Human-readable label that
                                                identifies the dataset that Atlas
                                                generates for an ingestion pipeline
                                                run or Online Archive.
                                              example: v1$atlas$snapshot$Cluster0$myDatabase$myCollection$19700101T000000Z
                                              type: string
                                            datasetPrefix:
                                              description: Human-readable label that
                                                matches against the dataset names
                                                for ingestion pipeline runs or Online
                                                Archives.
                                              type: string
                                            defaultFormat:
                                              description: File format that MongoDB
                                                Cloud uses if it encounters a file
                                                without a file extension while searching
                                                **storeName**.
                                              type: string
                                            path:
                                              description: File path that controls
                                                how MongoDB Cloud searches for and
                                                parses files in the **storeName**
                                                before mapping them to a collection.Specify
                                                ``/`` to capture all files and folders
                                                from the ``prefix`` path.
                                              type: string
                                            provenanceFieldName:
                                              description: Name for the field that
                                                includes the provenance of the documents
                                                in the results. MongoDB Cloud returns
                                                different fields in the results for
                                                each supported provider.
                                              type: string
                                            storeName:
                                              description: Human-readable label that
                                                identifies the data store that MongoDB
                                                Cloud maps to the collection.
                                              type: string
                                            trimLevel:
                                              description: Unsigned integer that specifies
                                                how many fields of the dataset name
                                                to trim from the left of the dataset
                                                name before mapping the remaining
                                                fields to a wildcard collection name.
                                              type: integer
                                            urls:
                                              description: URLs of the publicly accessible
                                                data files. You can't specify URLs
                                                that require authentication. Atlas
                                                Data Lake creates a partition for
                                                each URL. If empty or omitted, Data
                                                Lake uses the URLs from the store
                                                specified in the **dataSources.storeName**
                                                parameter.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      name:
                                        description: Human-readable label that identifies
                                          the collection to which MongoDB Cloud maps
                                          the data in the data stores.
                                        type: string
                                    type: object
                                  type: array
                                maxWildcardCollections:
                                  description: Maximum number of wildcard collections
                                    in the database. This only applies to S3 data
                                    sources.
                                  type: integer
                                name:
                                  description: Human-readable label that identifies
                                    the database to which the data lake maps data.
                                  type: string
                                views:
                                  description: Array of aggregation pipelines that
                                    apply to the collection. This only applies to
                                    S3 data sources.
                                  items:
                                    description: An aggregation pipeline that applies
                                      to the collection.
                                    properties:
                                      name:
                                        description: Human-readable label that identifies
                                          the view, which corresponds to an aggregation
                                          pipeline on a collection.
                                        type: string
                                      pipeline:
                                        description: Aggregation pipeline stages to
                                          apply to the source collection.
                                        type: string
                                      source:
                                        description: Human-readable label that identifies
                                          the source collection for the view.
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            type: array
                          stores:
                            description: Array that contains the data stores for the
                              data lake.
                            items:
                              description: Group of settings that define where the
                                data is stored.
                              properties:
                                additionalStorageClasses:
                                  description: Collection of AWS S3 [storage classes](https://aws.amazon.com/s3/storage-classes/).
                                    Atlas Data Lake includes the files in these storage
                                    classes in the query results.
                                  items:
                                    description: AWS S3 [storage class](https://aws.amazon.com/s3/storage-classes/)
                                      where the files to include in the results are
                                      stored.
                                    type: string
                                  type: array
                                allowInsecure:
                                  description: Flag that validates the scheme in the
                                    specified URLs. If `true`, allows insecure `HTTP`
                                    scheme, doesn't verify the server's certificate
                                    chain and hostname, and accepts any certificate
                                    with any hostname presented by the server. If
                                    `false`, allows secure `HTTPS` scheme only.
                                  type: boolean
                                bucket:
                                  description: Human-readable label that identifies
                                    the Google Cloud Storage bucket.
                                  type: string
                                clusterName:
                                  description: Human-readable label of the MongoDB
                                    Cloud cluster on which the store is based.
                                  type: string
                                containerName:
                                  description: Human-readable label that identifies
                                    the name of the container.
                                  type: string
                                defaultFormat:
                                  description: Default format that Data Lake assumes
                                    if it encounters a file without an extension while
                                    searching the `storeName`. If omitted, Data Lake
                                    attempts to detect the file type by processing
                                    a few bytes of the file. The specified format
                                    only applies to the URLs specified in the **databases.[n].collections.[n].dataSources**
                                    object.
                                  type: string
                                delimiter:
                                  description: Delimiter.
                                  type: string
                                includeTags:
                                  description: Flag that indicates whether to use
                                    S3 tags on the files in the given path as additional
                                    partition attributes. If set to `true`, data lake
                                    adds the S3 tags as additional partition attributes
                                    and adds new top-level BSON elements associating
                                    each tag to each document.
                                  type: boolean
                                name:
                                  description: Human-readable label that identifies
                                    the data store. The **databases.[n].collections.[n].dataSources.[n].storeName**
                                    field references this values as part of the mapping
                                    configuration. To use MongoDB Cloud as a data
                                    store, the data lake requires a serverless instance
                                    or an `M10` or higher cluster.
                                  type: string
                                prefix:
                                  description: Prefix.
                                  type: string
                                provider:
                                  type: string
                                public:
                                  description: Flag that indicates whether the bucket
                                    is public. If set to `true`, MongoDB Cloud doesn't
                                    use the configured GCP service account to access
                                    the bucket. If set to `false`, the configured
                                    GCP service acccount must include permissions
                                    to access the bucket.
                                  type: boolean
                                readConcern:
                                  description: MongoDB Cloud cluster read concern,
                                    which determines the consistency and isolation
                                    properties of the data read from an Atlas cluster.
                                  properties:
                                    level:
                                      description: Read Concern level that specifies
                                        the consistency and availability of the data
                                        read.
                                      type: string
                                  type: object
                                readPreference:
                                  description: MongoDB Cloud cluster read preference,
                                    which describes how to route read requests to
                                    the cluster.
                                  properties:
                                    maxStalenessSeconds:
                                      description: Maximum replication lag, or **staleness**,
                                        for reads from secondaries.
                                      type: integer
                                    mode:
                                      description: Read preference mode that specifies
                                        to which replica set member to route the read
                                        requests.
                                      type: string
                                    tagSets:
                                      description: List that contains tag sets or
                                        tag specification documents. If specified,
                                        Atlas Data Lake routes read requests to replica
                                        set member or members that are associated
                                        with the specified tags.
                                      items:
                                        items:
                                          properties:
                                            name:
                                              description: Human-readable label of
                                                the tag.
                                              type: string
                                            value:
                                              description: Value of the tag.
                                              type: string
                                          type: object
                                        type: array
                                      type: array
                                  type: object
                                region:
                                  description: Google Cloud Platform Regions.
                                  title: GCP Regions
                                  type: string
                                replacementDelimiter:
                                  description: Replacement Delimiter.
                                  type: string
                                serviceURL:
                                  description: Service URL.
                                  type: string
                                urls:
                                  description: Comma-separated list of publicly accessible
                                    HTTP URLs where data is stored. You can't specify
                                    URLs that require authentication.
                                  items:
                                    description: Comma-separated list of publicly
                                      accessible HTTP URLs where data is stored. You
                                      can't specify URLs that require authentication.
                                    type: string
                                  type: array
                              required:
                              - provider
                              type: object
                            type: array
                        type: object
                    type: object
                  groupId:
                    description: |-
                      Unique 24-hexadecimal digit string that identifies your project. Use the [/groups](#tag/Projects/operation/listProjects) endpoint to retrieve all projects to which the authenticated user has access.

                      **NOTE**: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.
                    example: 32b6e34b3d91647abb20e7b8
                    type: string
                    x-kubernetes-validations:
                    - message: groupId cannot be modified after creation
                      rule: self == oldSelf
                  groupRef:
                    description: |-
                      A reference to a "Group" resource.
                      The value of "$.status.v20250312.groupId" will be used to set "groupId".
                      Mutually exclusive with the "groupId" property.
                    properties:
                      name:
                        description: Name of the "Group" resource.
                        type: string
                    type: object
                  skipRoleValidation:
                    description: Flag that indicates whether this request should check
                      if the requesting IAM role can read from the S3 bucket. AWS
                      checks if the role can list the objects in the bucket before
                      writing to it. Some IAM roles only need write permissions. This
                      flag allows you to skip that check.
                    type: boolean
                    x-kubernetes-validations:
                    - message: skipRoleValidation cannot be modified after creation
                      rule: self == oldSelf
                required:
                - skipRoleValidation
                type: object
            type: object
          status:
            description: 'Most recently observed read-only status of the datafederation
              for the specified resource version. This data may not be up to date
              and is populated by the system. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
            properties:
              conditions:
                description: Represents the latest available observations of a resource's
                  current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon.
                      type: integer
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - type
                  - status
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              v20250312:
                description: The last observed Atlas state of the datafederation resource
                  for version v20250312.
                properties:
                  groupId:
                    description: Unique 24-hexadecimal character string that identifies
                      the project.
                    example: 32b6e34b3d91647abb20e7b8
                    type: string
                  hostnames:
                    description: List that contains the hostnames assigned to the
                      Federated Database Instance.
                    items:
                      description: Unique hostname assigned to the Federated Database
                        Instance.
                      type: string
                    type: array
                  privateEndpointHostnames:
                    description: List that contains the sets of private endpoints
                      and hostnames.
                    items:
                      description: Set of Private endpoint and hostnames.
                      properties:
                        hostname:
                          description: Human-readable label that identifies the hostname.
                          type: string
                        privateEndpoint:
                          description: Human-readable label that identifies private
                            endpoint.
                          type: string
                      type: object
                    type: array
                  state:
                    description: Label that indicates the status of the Federated
                      Database Instance.
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-mappings: |
      properties:
        spec:
          properties:
            v20250312:
              x-atlas-sdk-version: go.mongodb.org/atlas-sdk/v20250312005/admin
  creationTimestamp: null
  name: organizationsettings.atlas.generated.mongodb.com
spec:
  group: atlas.generated.mongodb.com
  names:
    categories:
    - atlas
    kind: OrganizationSetting
    listKind: OrganizationSettingList
    plural: organizationsettings
    shortNames:
    - aos
    singular: organizationsetting
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: A organizationsetting, managed by the MongoDB Kubernetes Atlas
          Operator.
        properties:
          spec:
            description: |-
              Specification of the organizationsetting supporting the following versions:

              - v20250312

              At most one versioned spec can be specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
            properties:
              v20250312:
                description: The spec of the organizationsetting resource for version
                  v20250312.
                properties:
                  entry:
                    description: The entry fields of the organizationsetting resource
                      spec. These fields can be set for creating and updating organizationsettings.
                    properties:
                      apiAccessListRequired:
                        description: Flag that indicates whether to require API operations
                          to originate from an IP Address added to the API access
                          list for the specified organization.
                        type: boolean
                      genAIFeaturesEnabled:
                        description: Flag that indicates whether this organization
                          has access to generative AI features. This setting only
                          applies to Atlas Commercial and is enabled by default. Once
                          this setting is turned on, Project Owners may be able to
                          enable or disable individual AI features at the project
                          level.
                        type: boolean
                      maxServiceAccountSecretValidityInHours:
                        description: Number that represents the maximum period before
                          expiry in hours for new Atlas Admin API Service Account
                          secrets within the specified organization.
                        type: integer
                      multiFactorAuthRequired:
                        description: 'Flag that indicates whether to require users
                          to set up Multi-Factor Authentication (MFA) before accessing
                          the specified organization. To learn more, see: https://www.mongodb.com/docs/atlas/security-multi-factor-authentication/.'
                        type: boolean
                      restrictEmployeeAccess:
                        description: 'Flag that indicates whether to block MongoDB
                          Support from accessing Atlas infrastructure and cluster
                          logs for any deployment in the specified organization without
                          explicit permission. Once this setting is turned on, you
                          can grant MongoDB Support a 24-hour bypass access to the
                          Atlas deployment to resolve support issues. To learn more,
                          see: https://www.mongodb.com/docs/atlas/security-restrict-support-access/.'
                        type: boolean
                      securityContact:
                        description: String that specifies a single email address
                          for the specified organization to receive security-related
                          notifications. Specifying a security contact does not grant
                          them authorization or access to Atlas for security decisions
                          or approvals. An empty string is valid and clears the existing
                          security contact (if any).
                        type: string
                      streamsCrossGroupEnabled:
                        description: Flag that indicates whether a group's Atlas Stream
                          Processing instances in this organization can create connections
                          to other group's clusters in the same organization.
                        type: boolean
                    type: object
                  orgId:
                    description: Unique 24-hexadecimal digit string that identifies
                      the organization that contains your projects. Use the [/orgs](#tag/Organizations/operation/listOrganizations)
                      endpoint to retrieve all organizations to which the authenticated
                      user has access.
                    example: 4888442a3354817a7320eb61
                    type: string
                    x-kubernetes-validations:
                    - message: orgId cannot be modified after creation
                      rule: self == oldSelf
                required:
                - orgId
                type: object
            type: object
          status:
            description: 'Most recently observed read-only status of the organizationsetting
              for the specified resource version. This data may not be up to date
              and is populated by the system. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
            properties:
              conditions:
                description: Represents the latest available observations of a resource's
                  current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon.
                      type: integer
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - type
                  - status
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-mappings: |
      properties:
        spec:
          properties:
            v20250312:
              x-atlas-sdk-version: go.mongodb.org/atlas-sdk/v20250312005/admin
  creationTimestamp: null
  name: teams.atlas.generated.mongodb.com
spec:
  group: atlas.generated.mongodb.com
  names:
    categories:
    - atlas
    kind: Team
    listKind: TeamList
    plural: teams
    shortNames:
    - at
    singular: team
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: A team, managed by the MongoDB Kubernetes Atlas Operator.
        properties:
          spec:
            description: |-
              Specification of the team supporting the following versions:

              - v20250312

              At most one versioned spec can be specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
            properties:
              v20250312:
                description: The spec of the team resource for version v20250312.
                properties:
                  entry:
                    description: The entry fields of the team resource spec. These
                      fields can be set for creating and updating teams.
                    properties:
                      name:
                        description: Human-readable label that identifies the team.
                        type: string
                      usernames:
                        description: List that contains the MongoDB Cloud users in
                          this team.
                        items:
                          type: string
                        type: array
                    required:
                    - name
                    - usernames
                    type: object
                  orgId:
                    description: Unique 24-hexadecimal digit string that identifies
                      the organization that contains your projects. Use the [/orgs](#tag/Organizations/operation/listOrganizations)
                      endpoint to retrieve all organizations to which the authenticated
                      user has access.
                    example: 4888442a3354817a7320eb61
                    type: string
                    x-kubernetes-validations:
                    - message: orgId cannot be modified after creation
                      rule: self == oldSelf
                required:
                - orgId
                type: object
            type: object
          status:
            description: 'Most recently observed read-only status of the team for
              the specified resource version. This data may not be up to date and
              is populated by the system. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
            properties:
              conditions:
                description: Represents the latest available observations of a resource's
                  current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon.
                      type: integer
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - type
                  - status
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              v20250312:
                description: The last observed Atlas state of the team resource for
                  version v20250312.
                properties:
                  id:
                    description: Unique 24-hexadecimal digit string that identifies
                      this team.
                    example: 32b6e34b3d91647abb20e7b8
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-mappings: |
      properties:
        spec:
          properties:
            v20250312:
              properties:
                groupRef:
                  x-kubernetes-mapping:
                    nameSelector: .name
                    properties:
                    - $.status.v20250312.groupId
                    type:
                      group: atlas.generated.mongodb.com
                      kind: Group
                      resource: groups
                      version: v1
                  x-openapi-mapping:
                    property: $.groupId
              x-atlas-sdk-version: go.mongodb.org/atlas-sdk/v20250312005/admin
  creationTimestamp: null
  name: networkpermissionentrieses.atlas.generated.mongodb.com
spec:
  group: atlas.generated.mongodb.com
  names:
    categories:
    - atlas
    kind: NetworkPermissionEntries
    listKind: NetworkPermissionEntriesList
    plural: networkpermissionentrieses
    shortNames:
    - anp
    singular: networkpermissionentries
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: A networkpermissionentries, managed by the MongoDB Kubernetes
          Atlas Operator.
        properties:
          spec:
            description: |-
              Specification of the networkpermissionentries supporting the following versions:

              - v20250312

              At most one versioned spec can be specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
            properties:
              v20250312:
                description: The spec of the networkpermissionentries resource for
                  version v20250312.
                properties:
                  entry:
                    description: The entry fields of the networkpermissionentries
                      resource spec. These fields can be set for creating and updating
                      networkpermissionentrieses.
                    items:
                      properties:
                        awsSecurityGroup:
                          description: Unique string of the Amazon Web Services (AWS)
                            security group that you want to add to the project's IP
                            access list. Your IP access list entry can be one **awsSecurityGroup**,
                            one **cidrBlock**, or one **ipAddress**. You must configure
                            Virtual Private Connection (VPC) peering for your project
                            before you can add an AWS security group to an IP access
                            list. You cannot set AWS security groups as temporary
                            access list entries. Don't set this parameter if you set
                            **cidrBlock** or **ipAddress**.
                          type: string
                        cidrBlock:
                          description: Range of IP addresses in Classless Inter-Domain
                            Routing (CIDR) notation that you want to add to the project's
                            IP access list. Your IP access list entry can be one **awsSecurityGroup**,
                            one **cidrBlock**, or one **ipAddress**. Don't set this
                            parameter if you set **awsSecurityGroup** or **ipAddress**.
                          type: string
                        comment:
                          description: Remark that explains the purpose or scope of
                            this IP access list entry.
                          type: string
                        deleteAfterDate:
                          description: Date and time after which MongoDB Cloud deletes
                            the temporary access list entry. This parameter expresses
                            its value in the ISO 8601 timestamp format in UTC and
                            can include the time zone designation. The date must be
                            later than the current date but no later than one week
                            after you submit this request. The resource returns this
                            parameter if you specified an expiration date when creating
                            this IP access list entry.
                          type: string
                        ipAddress:
                          description: IP address that you want to add to the project's
                            IP access list. Your IP access list entry can be one **awsSecurityGroup**,
                            one **cidrBlock**, or one **ipAddress**. Don't set this
                            parameter if you set **awsSecurityGroup** or **cidrBlock**.
                          type: string
                      type: object
                    type: array
                  groupId:
                    description: |-
                      Unique 24-hexadecimal digit string that identifies your project. Use the [/groups](#tag/Projects/operation/listProjects) endpoint to retrieve all projects to which the authenticated user has access.

                      **NOTE**: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.
                    example: 32b6e34b3d91647abb20e7b8
                    type: string
                    x-kubernetes-validations:
                    - message: groupId cannot be modified after creation
                      rule: self == oldSelf
                  groupRef:
                    description: |-
                      A reference to a "Group" resource.
                      The value of "$.status.v20250312.groupId" will be used to set "groupId".
                      Mutually exclusive with the "groupId" property.
                    properties:
                      name:
                        description: Name of the "Group" resource.
                        type: string
                    type: object
                type: object
            type: object
          status:
            description: 'Most recently observed read-only status of the networkpermissionentries
              for the specified resource version. This data may not be up to date
              and is populated by the system. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
            properties:
              conditions:
                description: Represents the latest available observations of a resource's
                  current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon.
                      type: integer
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - type
                  - status
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              v20250312:
                description: The last observed Atlas state of the networkpermissionentries
                  resource for version v20250312.
                properties:
                  groupId:
                    description: Unique 24-hexadecimal digit string that identifies
                      the project that contains the IP access list to which you want
                      to add one or more entries.
                    example: 32b6e34b3d91647abb20e7b8
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-mappings: |
      properties:
        spec:
          properties:
            v20250312:
              properties:
                groupRef:
                  x-kubernetes-mapping:
                    nameSelector: .name
                    properties:
                    - $.status.v20250312.groupId
                    type:
                      group: atlas.generated.mongodb.com
                      kind: Group
                      resource: groups
                      version: v1
                  x-openapi-mapping:
                    property: $.groupId
              x-atlas-sdk-version: go.mongodb.org/atlas-sdk/v20250312005/admin
  creationTimestamp: null
  name: clusters.atlas.generated.mongodb.com
spec:
  group: atlas.generated.mongodb.com
  names:
    categories:
    - atlas
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    shortNames:
    - ac
    singular: cluster
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: A cluster, managed by the MongoDB Kubernetes Atlas Operator.
        properties:
          spec:
            description: |-
              Specification of the cluster supporting the following versions:

              - v20250312

              At most one versioned spec can be specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
            properties:
              v20250312:
                description: The spec of the cluster resource for version v20250312.
                properties:
                  entry:
                    description: The entry fields of the cluster resource spec. These
                      fields can be set for creating and updating clusters.
                    properties:
                      acceptDataRisksAndForceReplicaSetReconfig:
                        description: If reconfiguration is necessary to regain a primary
                          due to a regional outage, submit this field alongside your
                          topology reconfiguration to request a new regional outage
                          resistant topology. Forced reconfigurations during an outage
                          of the majority of electable nodes carry a risk of data
                          loss if replicated writes (even majority committed writes)
                          have not been replicated to the new primary node. MongoDB
                          Atlas docs contain more information. To proceed with an
                          operation which carries that risk, set **acceptDataRisksAndForceReplicaSetReconfig**
                          to the current date. This parameter expresses its value
                          in the ISO 8601 timestamp format in UTC.
                        type: string
                      advancedConfiguration:
                        description: Group of settings that configures a subset of
                          the advanced configuration details.
                        properties:
                          customOpensslCipherConfigTls12:
                            description: The custom OpenSSL cipher suite list for
                              TLS 1.2. This field is only valid when `tlsCipherConfigMode`
                              is set to `CUSTOM`.
                            items:
                              type: string
                            type: array
                          minimumEnabledTlsProtocol:
                            description: Minimum Transport Layer Security (TLS) version
                              that the cluster accepts for incoming connections. Clusters
                              using TLS 1.0 or 1.1 should consider setting TLS 1.2
                              as the minimum TLS protocol version.
                            type: string
                          tlsCipherConfigMode:
                            description: The TLS cipher suite configuration mode.
                              The default mode uses the default cipher suites. The
                              custom mode allows you to specify custom cipher suites
                              for both TLS 1.2 and TLS 1.3.
                            type: string
                        type: object
                      backupEnabled:
                        description: Flag that indicates whether the cluster can perform
                          backups. If set to `true`, the cluster can perform backups.
                          You must set this value to `true` for NVMe clusters. Backup
                          uses Cloud Backups for dedicated clusters and [Shared Cluster
                          Backups](https://docs.atlas.mongodb.com/backup/shared-tier/overview/)
                          for tenant clusters. If set to `false`, the cluster doesn't
                          use backups.
                        type: boolean
                      biConnector:
                        description: Settings needed to configure the MongoDB Connector
                          for Business Intelligence for this cluster.
                        properties:
                          enabled:
                            description: Flag that indicates whether MongoDB Connector
                              for Business Intelligence is enabled on the specified
                              cluster.
                            type: boolean
                          readPreference:
                            description: Data source node designated for the MongoDB
                              Connector for Business Intelligence on MongoDB Cloud.
                              The MongoDB Connector for Business Intelligence on MongoDB
                              Cloud reads data from the primary, secondary, or analytics
                              node based on your read preferences. Defaults to `ANALYTICS`
                              node, or `SECONDARY` if there are no `ANALYTICS` nodes.
                            type: string
                        title: MongoDB Connector for Business Intelligence Settings
                        type: object
                      clusterType:
                        description: Configuration of nodes that comprise the cluster.
                        type: string
                      configServerManagementMode:
                        description: |-
                          Config Server Management Mode for creating or updating a sharded cluster.

                          When configured as ATLAS_MANAGED, atlas may automatically switch the cluster's config server type for optimal performance and savings.

                          When configured as FIXED_TO_DEDICATED, the cluster will always use a dedicated config server.
                        type: string
                      configServerType:
                        description: Describes a sharded cluster's config server type.
                        type: string
                      diskWarmingMode:
                        description: Disk warming mode selection.
                        type: string
                      encryptionAtRestProvider:
                        description: 'Cloud service provider that manages your customer
                          keys to provide an additional layer of encryption at rest
                          for the cluster. To enable customer key management for encryption
                          at rest, the cluster **replicationSpecs[n].regionConfigs[m].{type}Specs.instanceSize**
                          setting must be `M10` or higher and `"backupEnabled" : false`
                          or omitted entirely.'
                        type: string
                      featureCompatibilityVersion:
                        description: Feature compatibility version of the cluster.
                          This will always appear regardless of whether FCV is pinned.
                        type: string
                      featureCompatibilityVersionExpirationDate:
                        description: Feature compatibility version expiration date.
                          Will only appear if FCV is pinned. This parameter expresses
                          its value in the ISO 8601 timestamp format in UTC.
                        type: string
                      globalClusterSelfManagedSharding:
                        description: |-
                          Set this field to configure the Sharding Management Mode when creating a new Global Cluster.

                          When set to false, the management mode is set to Atlas-Managed Sharding. This mode fully manages the sharding of your Global Cluster and is built to provide a seamless deployment experience.

                          When set to true, the management mode is set to Self-Managed Sharding. This mode leaves the management of shards in your hands and is built to provide an advanced and flexible deployment experience.

                          This setting cannot be changed once the cluster is deployed.
                        type: boolean
                      labels:
                        description: |-
                          Collection of key-value pairs between 1 to 255 characters in length that tag and categorize the cluster. The MongoDB Cloud console doesn't display your labels.

                          Cluster labels are deprecated and will be removed in a future release. We strongly recommend that you use Resource Tags instead.
                        items:
                          description: Human-readable labels applied to this MongoDB
                            Cloud component.
                          properties:
                            key:
                              description: Key applied to tag and categorize this
                                component.
                              type: string
                            value:
                              description: Value set to the Key applied to tag and
                                categorize this component.
                              type: string
                          title: Component Label
                          type: object
                        type: array
                      mongoDBEmployeeAccessGrant:
                        description: MongoDB employee granted access level and expiration
                          for a cluster.
                        properties:
                          expirationTime:
                            description: Expiration date for the employee access grant.
                              This parameter expresses its value in the ISO 8601 timestamp
                              format in UTC.
                            type: string
                          grantType:
                            description: Level of access to grant to MongoDB Employees.
                            type: string
                          links:
                            description: List of one or more Uniform Resource Locators
                              (URLs) that point to API sub-resources, related API
                              resources, or both. RFC 5988 outlines these relationships.
                            items:
                              properties:
                                href:
                                  description: Uniform Resource Locator (URL) that
                                    points another API resource to which this response
                                    has some relationship. This URL often begins with
                                    `https://cloud.mongodb.com/api/atlas`.
                                  example: https://cloud.mongodb.com/api/atlas
                                  type: string
                                rel:
                                  description: Uniform Resource Locator (URL) that
                                    defines the semantic relationship between this
                                    resource and another API resource. This URL often
                                    begins with `https://cloud.mongodb.com/api/atlas`.
                                  example: self
                                  type: string
                              type: object
                            type: array
                        required:
                        - expirationTime
                        - grantType
                        type: object
                      mongoDBMajorVersion:
                        description: "MongoDB major version of the cluster. Set to
                          the binary major version. \n\nOn creation: Choose from the
                          available versions of MongoDB, or leave unspecified for
                          the current recommended default in the MongoDB Cloud platform.
                          The recommended version is a recent Long Term Support version.
                          The default is not guaranteed to be the most recently released
                          version throughout the entire release cycle. For versions
                          available in a specific project, see the linked documentation
                          or use the API endpoint for [project LTS versions endpoint](#tag/Projects/operation/getProjectLtsVersions).\n\n
                          On update: Increase version only by 1 major version at a
                          time. If the cluster is pinned to a MongoDB feature compatibility
                          version exactly one major version below the current MongoDB
                          version, the MongoDB version can be downgraded to the previous
                          major version."
                        type: string
                      name:
                        description: Human-readable label that identifies the cluster.
                        type: string
                      paused:
                        description: Flag that indicates whether the cluster is paused.
                        type: boolean
                      pitEnabled:
                        description: Flag that indicates whether the cluster uses
                          continuous cloud backups.
                        type: boolean
                      redactClientLogData:
                        description: |-
                          Enable or disable log redaction.

                          This setting configures the ``mongod`` or ``mongos`` to redact any document field contents from a message accompanying a given log event before logging. This prevents the program from writing potentially sensitive data stored on the database to the diagnostic log. Metadata such as error or operation codes, line numbers, and source file names are still visible in the logs.

                          Use ``redactClientLogData`` in conjunction with Encryption at Rest and TLS/SSL (Transport Encryption) to assist compliance with regulatory requirements.

                          *Note*: changing this setting on a cluster will trigger a rolling restart as soon as the cluster is updated.
                        type: boolean
                      replicaSetScalingStrategy:
                        description: |-
                          Set this field to configure the replica set scaling mode for your cluster.

                          By default, Atlas scales under WORKLOAD_TYPE. This mode allows Atlas to scale your analytics nodes in parallel to your operational nodes.

                          When configured as SEQUENTIAL, Atlas scales all nodes sequentially. This mode is intended for steady-state workloads and applications performing latency-sensitive secondary reads.

                          When configured as NODE_TYPE, Atlas scales your electable nodes in parallel with your read-only and analytics nodes. This mode is intended for large, dynamic workloads requiring frequent and timely cluster tier scaling. This is the fastest scaling strategy, but it might impact latency of workloads when performing extensive secondary reads.
                        type: string
                      replicationSpecs:
                        description: List of settings that configure your cluster
                          regions. This array has one object per shard representing
                          node configurations in each shard. For replica sets there
                          is only one object representing node configurations.
                        items:
                          description: Details that explain how MongoDB Cloud replicates
                            data on the specified MongoDB database.
                          properties:
                            regionConfigs:
                              description: |-
                                Hardware specifications for nodes set for a given region. Each **regionConfigs** object describes the region's priority in elections and the number and type of MongoDB nodes that MongoDB Cloud deploys to the region. Each **regionConfigs** object must have either an **analyticsSpecs** object, **electableSpecs** object, or **readOnlySpecs** object. Tenant clusters only require **electableSpecs. Dedicated** clusters can specify any of these specifications, but must have at least one **electableSpecs** object within a **replicationSpec**.

                                **Example:**

                                If you set `"replicationSpecs[n].regionConfigs[m].analyticsSpecs.instanceSize" : "M30"`, set `"replicationSpecs[n].regionConfigs[m].electableSpecs.instanceSize" : `"M30"` if you have electable nodes and `"replicationSpecs[n].regionConfigs[m].readOnlySpecs.instanceSize" : `"M30"` if you have read-only nodes.
                              items:
                                description: Cloud service provider on which MongoDB
                                  Cloud provisions the hosts.
                                properties:
                                  analyticsAutoScaling:
                                    description: Options that determine how this cluster
                                      handles resource scaling.
                                    properties:
                                      compute:
                                        description: Options that determine how this
                                          cluster handles CPU scaling.
                                        properties:
                                          enabled:
                                            description: |-
                                              Flag that indicates whether instance size reactive auto-scaling is enabled.

                                              - Set to `true` to enable instance size reactive auto-scaling. If enabled, you must specify a value for **replicationSpecs[n].regionConfigs[m].autoScaling.compute.maxInstanceSize**.
                                              - Set to `false` to disable instance size reactive auto-scaling.
                                            type: boolean
                                          maxInstanceSize:
                                            description: Instance size boundary to
                                              which your cluster can automatically
                                              scale.
                                            type: string
                                          minInstanceSize:
                                            description: Instance size boundary to
                                              which your cluster can automatically
                                              scale.
                                            type: string
                                          predictiveEnabled:
                                            description: |-
                                              Flag that indicates whether predictive instance size auto-scaling is enabled.

                                              - Set to `true` to enable predictive instance size auto-scaling. MongoDB Cloud requires **replicationSpecs[n].regionConfigs[m].autoScaling.compute.enabled** to be `true` in order to enable this feature.
                                              - Set to `false` to disable predictive instance size auto-scaling.
                                            type: boolean
                                          scaleDownEnabled:
                                            description: Flag that indicates whether
                                              the instance size may scale down via
                                              reactive auto-scaling. MongoDB Cloud
                                              requires this parameter if **replicationSpecs[n].regionConfigs[m].autoScaling.compute.enabled**
                                              is `true`. If you enable this option,
                                              specify a value for **replicationSpecs[n].regionConfigs[m].autoScaling.compute.minInstanceSize**.
                                            type: boolean
                                        title: Automatic Compute Scaling Settings
                                        type: object
                                      diskGB:
                                        description: Setting that enables disk auto-scaling.
                                        properties:
                                          enabled:
                                            description: Flag that indicates whether
                                              this cluster enables disk auto-scaling.
                                              The maximum memory allowed for the selected
                                              cluster tier and the oplog size can
                                              limit storage auto-scaling.
                                            type: boolean
                                        type: object
                                    title: Automatic Scaling Settings
                                    type: object
                                  analyticsSpecs:
                                    description: Hardware specifications for read-only
                                      nodes in the region. Read-only nodes can never
                                      become the primary member, but can enable local
                                      reads. If you don't specify this parameter,
                                      no read-only nodes are deployed to the region.
                                    properties:
                                      diskIOPS:
                                        description: |-
                                          Target throughput desired for storage attached to your Azure-provisioned cluster. Change this parameter if you:

                                          - set `"replicationSpecs[n].regionConfigs[m].providerName" : "Azure"`.
                                          - set `"replicationSpecs[n].regionConfigs[m].electableSpecs.instanceSize" : "M40"` or greater not including `Mxx_NVME` tiers.

                                          The maximum input/output operations per second (IOPS) depend on the selected **.instanceSize** and **.diskSizeGB**.
                                          This parameter defaults to the cluster tier's standard IOPS value.
                                          Changing this value impacts cluster cost.
                                        type: integer
                                      diskSizeGB:
                                        description: "Storage capacity of instance
                                          data volumes expressed in gigabytes. Increase
                                          this number to add capacity.\n\n This value
                                          must be equal for all shards and node types.\n\n
                                          This value is not configurable on M0/M2/M5
                                          clusters.\n\n MongoDB Cloud requires this
                                          parameter if you set **replicationSpecs**.\n\n
                                          If you specify a disk size below the minimum
                                          (10 GB), this parameter defaults to the
                                          minimum disk size value. \n\n Storage charge
                                          calculations depend on whether you choose
                                          the default value or a custom value.\n\n
                                          The maximum value for disk storage cannot
                                          exceed 50 times the maximum RAM for the
                                          selected cluster. If you require more storage
                                          space, consider upgrading your cluster to
                                          a higher tier."
                                        type: number
                                      ebsVolumeType:
                                        description: "Type of storage you want to
                                          attach to your AWS-provisioned cluster.\n\n-
                                          `STANDARD` volume types can't exceed the
                                          default input/output operations per second
                                          (IOPS) rate for the selected volume size.
                                          \n\n- `PROVISIONED` volume types must fall
                                          within the allowable IOPS range for the
                                          selected volume size. You must set this
                                          value to (`PROVISIONED`) for NVMe clusters."
                                        type: string
                                      instanceSize:
                                        description: Hardware specification for the
                                          instance sizes in this region in this shard.
                                          Each instance size has a default storage
                                          and memory capacity. Electable nodes and
                                          read-only nodes (known as "base nodes")
                                          within a single shard must use the same
                                          instance size. Analytics nodes can scale
                                          independently from base nodes within a shard.
                                          Both base nodes and analytics nodes can
                                          scale independently from their equivalents
                                          in other shards.
                                        title: GCP Instance Sizes
                                        type: string
                                      nodeCount:
                                        description: Number of nodes of the given
                                          type for MongoDB Cloud to deploy to the
                                          region.
                                        type: integer
                                    type: object
                                  autoScaling:
                                    description: Options that determine how this cluster
                                      handles resource scaling.
                                    properties:
                                      compute:
                                        description: Options that determine how this
                                          cluster handles CPU scaling.
                                        properties:
                                          enabled:
                                            description: |-
                                              Flag that indicates whether instance size reactive auto-scaling is enabled.

                                              - Set to `true` to enable instance size reactive auto-scaling. If enabled, you must specify a value for **replicationSpecs[n].regionConfigs[m].autoScaling.compute.maxInstanceSize**.
                                              - Set to `false` to disable instance size reactive auto-scaling.
                                            type: boolean
                                          maxInstanceSize:
                                            description: Instance size boundary to
                                              which your cluster can automatically
                                              scale.
                                            type: string
                                          minInstanceSize:
                                            description: Instance size boundary to
                                              which your cluster can automatically
                                              scale.
                                            type: string
                                          predictiveEnabled:
                                            description: |-
                                              Flag that indicates whether predictive instance size auto-scaling is enabled.

                                              - Set to `true` to enable predictive instance size auto-scaling. MongoDB Cloud requires **replicationSpecs[n].regionConfigs[m].autoScaling.compute.enabled** to be `true` in order to enable this feature.
                                              - Set to `false` to disable predictive instance size auto-scaling.
                                            type: boolean
                                          scaleDownEnabled:
                                            description: Flag that indicates whether
                                              the instance size may scale down via
                                              reactive auto-scaling. MongoDB Cloud
                                              requires this parameter if **replicationSpecs[n].regionConfigs[m].autoScaling.compute.enabled**
                                              is `true`. If you enable this option,
                                              specify a value for **replicationSpecs[n].regionConfigs[m].autoScaling.compute.minInstanceSize**.
                                            type: boolean
                                        title: Automatic Compute Scaling Settings
                                        type: object
                                      diskGB:
                                        description: Setting that enables disk auto-scaling.
                                        properties:
                                          enabled:
                                            description: Flag that indicates whether
                                              this cluster enables disk auto-scaling.
                                              The maximum memory allowed for the selected
                                              cluster tier and the oplog size can
                                              limit storage auto-scaling.
                                            type: boolean
                                        type: object
                                    title: Automatic Scaling Settings
                                    type: object
                                  backingProviderName:
                                    description: "Cloud service provider on which
                                      MongoDB Cloud provisioned the multi-tenant cluster.
                                      The resource returns this parameter when **providerName**
                                      is `TENANT` and **electableSpecs.instanceSize**
                                      is `M0`, `M2` or `M5`. \n\nPlease note that
                                      \ using an instanceSize of M2 or M5 will create
                                      a Flex cluster instead. Support for the instanceSize
                                      of M2 or M5 will be discontinued in January
                                      2026. We recommend using the createFlexCluster
                                      API for such configurations moving forward."
                                    type: string
                                  electableSpecs:
                                    description: Hardware specifications for all electable
                                      nodes deployed in the region. Electable nodes
                                      can become the primary and can enable local
                                      reads. If you don't specify this option, MongoDB
                                      Cloud deploys no electable nodes to the region.
                                    properties:
                                      diskIOPS:
                                        description: |-
                                          Target throughput desired for storage attached to your Azure-provisioned cluster. Change this parameter if you:

                                          - set `"replicationSpecs[n].regionConfigs[m].providerName" : "Azure"`.
                                          - set `"replicationSpecs[n].regionConfigs[m].electableSpecs.instanceSize" : "M40"` or greater not including `Mxx_NVME` tiers.

                                          The maximum input/output operations per second (IOPS) depend on the selected **.instanceSize** and **.diskSizeGB**.
                                          This parameter defaults to the cluster tier's standard IOPS value.
                                          Changing this value impacts cluster cost.
                                        type: integer
                                      diskSizeGB:
                                        description: "Storage capacity of instance
                                          data volumes expressed in gigabytes. Increase
                                          this number to add capacity.\n\n This value
                                          must be equal for all shards and node types.\n\n
                                          This value is not configurable on M0/M2/M5
                                          clusters.\n\n MongoDB Cloud requires this
                                          parameter if you set **replicationSpecs**.\n\n
                                          If you specify a disk size below the minimum
                                          (10 GB), this parameter defaults to the
                                          minimum disk size value. \n\n Storage charge
                                          calculations depend on whether you choose
                                          the default value or a custom value.\n\n
                                          The maximum value for disk storage cannot
                                          exceed 50 times the maximum RAM for the
                                          selected cluster. If you require more storage
                                          space, consider upgrading your cluster to
                                          a higher tier."
                                        type: number
                                      ebsVolumeType:
                                        description: "Type of storage you want to
                                          attach to your AWS-provisioned cluster.\n\n-
                                          `STANDARD` volume types can't exceed the
                                          default input/output operations per second
                                          (IOPS) rate for the selected volume size.
                                          \n\n- `PROVISIONED` volume types must fall
                                          within the allowable IOPS range for the
                                          selected volume size. You must set this
                                          value to (`PROVISIONED`) for NVMe clusters."
                                        type: string
                                      effectiveInstanceSize:
                                        description: The true tenant instance size.
                                          This is present to support backwards compatibility
                                          for deprecated provider types and/or instance
                                          sizes.
                                        type: string
                                      instanceSize:
                                        description: Hardware specification for the
                                          instances in this M0/M2/M5 tier cluster.
                                        title: Tenant Instance Sizes
                                        type: string
                                      nodeCount:
                                        description: Number of nodes of the given
                                          type for MongoDB Cloud to deploy to the
                                          region.
                                        type: integer
                                    type: object
                                  priority:
                                    description: |-
                                      Precedence is given to this region when a primary election occurs. If your **regionConfigs** has only **readOnlySpecs**, **analyticsSpecs**, or both, set this value to `0`. If you have multiple **regionConfigs** objects (your cluster is multi-region or multi-cloud), they must have priorities in descending order. The highest priority is `7`.

                                      **Example:** If you have three regions, their priorities would be `7`, `6`, and `5` respectively. If you added two more regions for supporting electable nodes, the priorities of those regions would be `4` and `3` respectively.
                                    type: integer
                                  providerName:
                                    description: Cloud service provider on which MongoDB
                                      Cloud provisions the hosts. Set dedicated clusters
                                      to `AWS`, `GCP`, `AZURE` or `TENANT`.
                                    type: string
                                  readOnlySpecs:
                                    description: Hardware specifications for read-only
                                      nodes in the region. Read-only nodes can never
                                      become the primary member, but can enable local
                                      reads. If you don't specify this parameter,
                                      no read-only nodes are deployed to the region.
                                    properties:
                                      diskIOPS:
                                        description: |-
                                          Target throughput desired for storage attached to your Azure-provisioned cluster. Change this parameter if you:

                                          - set `"replicationSpecs[n].regionConfigs[m].providerName" : "Azure"`.
                                          - set `"replicationSpecs[n].regionConfigs[m].electableSpecs.instanceSize" : "M40"` or greater not including `Mxx_NVME` tiers.

                                          The maximum input/output operations per second (IOPS) depend on the selected **.instanceSize** and **.diskSizeGB**.
                                          This parameter defaults to the cluster tier's standard IOPS value.
                                          Changing this value impacts cluster cost.
                                        type: integer
                                      diskSizeGB:
                                        description: "Storage capacity of instance
                                          data volumes expressed in gigabytes. Increase
                                          this number to add capacity.\n\n This value
                                          must be equal for all shards and node types.\n\n
                                          This value is not configurable on M0/M2/M5
                                          clusters.\n\n MongoDB Cloud requires this
                                          parameter if you set **replicationSpecs**.\n\n
                                          If you specify a disk size below the minimum
                                          (10 GB), this parameter defaults to the
                                          minimum disk size value. \n\n Storage charge
                                          calculations depend on whether you choose
                                          the default value or a custom value.\n\n
                                          The maximum value for disk storage cannot
                                          exceed 50 times the maximum RAM for the
                                          selected cluster. If you require more storage
                                          space, consider upgrading your cluster to
                                          a higher tier."
                                        type: number
                                      ebsVolumeType:
                                        description: "Type of storage you want to
                                          attach to your AWS-provisioned cluster.\n\n-
                                          `STANDARD` volume types can't exceed the
                                          default input/output operations per second
                                          (IOPS) rate for the selected volume size.
                                          \n\n- `PROVISIONED` volume types must fall
                                          within the allowable IOPS range for the
                                          selected volume size. You must set this
                                          value to (`PROVISIONED`) for NVMe clusters."
                                        type: string
                                      instanceSize:
                                        description: Hardware specification for the
                                          instance sizes in this region in this shard.
                                          Each instance size has a default storage
                                          and memory capacity. Electable nodes and
                                          read-only nodes (known as "base nodes")
                                          within a single shard must use the same
                                          instance size. Analytics nodes can scale
                                          independently from base nodes within a shard.
                                          Both base nodes and analytics nodes can
                                          scale independently from their equivalents
                                          in other shards.
                                        title: GCP Instance Sizes
                                        type: string
                                      nodeCount:
                                        description: Number of nodes of the given
                                          type for MongoDB Cloud to deploy to the
                                          region.
                                        type: integer
                                    type: object
                                  regionName:
                                    description: Physical location of your MongoDB
                                      cluster nodes. The region you choose can affect
                                      network latency for clients accessing your databases.
                                      The region name is only returned in the response
                                      for single-region clusters. When MongoDB Cloud
                                      deploys a dedicated cluster, it checks if a
                                      VPC or VPC connection exists for that provider
                                      and region. If not, MongoDB Cloud creates them
                                      as part of the deployment. It assigns the VPC
                                      a Classless Inter-Domain Routing (CIDR) block.
                                      To limit a new VPC peering connection to one
                                      Classless Inter-Domain Routing (CIDR) block
                                      and region, create the connection first. Deploy
                                      the cluster after the connection starts. GCP
                                      Clusters and Multi-region clusters require one
                                      VPC peering connection for each region. MongoDB
                                      nodes can use only the peering connection that
                                      resides in the same region as the nodes to communicate
                                      with the peered VPC.
                                    type: string
                                title: Cloud Service Provider Settings
                                type: object
                              type: array
                            zoneId:
                              description: Unique 24-hexadecimal digit string that
                                identifies the zone in a Global Cluster. This value
                                can be used to configure Global Cluster backup policies.
                              example: 32b6e34b3d91647abb20e7b8
                              type: string
                            zoneName:
                              description: 'Human-readable label that describes the
                                zone this shard belongs to in a Global Cluster. Provide
                                this value only if "clusterType" : "GEOSHARDED" but
                                not "selfManagedSharding" : true.'
                              type: string
                          title: Replication Specifications
                          type: object
                        type: array
                      rootCertType:
                        description: Root Certificate Authority that MongoDB Atlas
                          cluster uses. MongoDB Cloud supports Internet Security Research
                          Group.
                        type: string
                      tags:
                        description: List that contains key-value pairs between 1
                          to 255 characters in length for tagging and categorizing
                          the cluster.
                        items:
                          description: 'Key-value pair that tags and categorizes a
                            MongoDB Cloud organization, project, or cluster. For example,
                            `environment : production`.'
                          properties:
                            key:
                              description: 'Constant that defines the set of the tag.
                                For example, `environment` in the `environment : production`
                                tag.'
                              type: string
                            value:
                              description: 'Variable that belongs to the set of the
                                tag. For example, `production` in the `environment
                                : production` tag.'
                              type: string
                          required:
                          - key
                          - value
                          title: Resource Tag
                          type: object
                        type: array
                      terminationProtectionEnabled:
                        description: Flag that indicates whether termination protection
                          is enabled on the cluster. If set to `true`, MongoDB Cloud
                          won't delete the cluster. If set to `false`, MongoDB Cloud
                          will delete the cluster.
                        type: boolean
                      versionReleaseSystem:
                        description: Method by which the cluster maintains the MongoDB
                          versions. If value is `CONTINUOUS`, you must not specify
                          **mongoDBMajorVersion**.
                        type: string
                    type: object
                  groupId:
                    description: |-
                      Unique 24-hexadecimal digit string that identifies your project. Use the [/groups](#tag/Projects/operation/listProjects) endpoint to retrieve all projects to which the authenticated user has access.

                      **NOTE**: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.
                    example: 32b6e34b3d91647abb20e7b8
                    type: string
                    x-kubernetes-validations:
                    - message: groupId cannot be modified after creation
                      rule: self == oldSelf
                  groupRef:
                    description: |-
                      A reference to a "Group" resource.
                      The value of "$.status.v20250312.groupId" will be used to set "groupId".
                      Mutually exclusive with the "groupId" property.
                    properties:
                      name:
                        description: Name of the "Group" resource.
                        type: string
                    type: object
                type: object
            type: object
          status:
            description: 'Most recently observed read-only status of the cluster for
              the specified resource version. This data may not be up to date and
              is populated by the system. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
            properties:
              conditions:
                description: Represents the latest available observations of a resource's
                  current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon.
                      type: integer
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - type
                  - status
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              v20250312:
                description: The last observed Atlas state of the cluster resource
                  for version v20250312.
                properties:
                  advancedConfiguration:
                    description: Group of settings that configures a subset of the
                      advanced configuration details.
                    properties:
                      customOpensslCipherConfigTls12:
                        description: The custom OpenSSL cipher suite list for TLS
                          1.2. This field is only valid when `tlsCipherConfigMode`
                          is set to `CUSTOM`.
                        items:
                          type: string
                        type: array
                      minimumEnabledTlsProtocol:
                        description: Minimum Transport Layer Security (TLS) version
                          that the cluster accepts for incoming connections. Clusters
                          using TLS 1.0 or 1.1 should consider setting TLS 1.2 as
                          the minimum TLS protocol version.
                        type: string
                      tlsCipherConfigMode:
                        description: The TLS cipher suite configuration mode. The
                          default mode uses the default cipher suites. The custom
                          mode allows you to specify custom cipher suites for both
                          TLS 1.2 and TLS 1.3.
                        type: string
                    type: object
                  configServerManagementMode:
                    description: |-
                      Config Server Management Mode for creating or updating a sharded cluster.

                      When configured as ATLAS_MANAGED, atlas may automatically switch the cluster's config server type for optimal performance and savings.

                      When configured as FIXED_TO_DEDICATED, the cluster will always use a dedicated config server.
                    type: string
                  configServerType:
                    description: Describes a sharded cluster's config server type.
                    type: string
                  connectionStrings:
                    description: Collection of Uniform Resource Locators that point
                      to the MongoDB database.
                    properties:
                      awsPrivateLink:
                        additionalProperties:
                          description: Private endpoint-aware connection strings that
                            use AWS-hosted clusters with Amazon Web Services (AWS)
                            PrivateLink. Each key identifies an Amazon Web Services
                            (AWS) interface endpoint. Each value identifies the related
                            `mongodb://` connection string that you use to connect
                            to MongoDB Cloud through the interface endpoint that the
                            key names.
                          type: string
                        description: Private endpoint-aware connection strings that
                          use AWS-hosted clusters with Amazon Web Services (AWS) PrivateLink.
                          Each key identifies an Amazon Web Services (AWS) interface
                          endpoint. Each value identifies the related `mongodb://`
                          connection string that you use to connect to MongoDB Cloud
                          through the interface endpoint that the key names.
                        type: object
                      awsPrivateLinkSrv:
                        additionalProperties:
                          description: Private endpoint-aware connection strings that
                            use AWS-hosted clusters with Amazon Web Services (AWS)
                            PrivateLink. Each key identifies an Amazon Web Services
                            (AWS) interface endpoint. Each value identifies the related
                            `mongodb://` connection string that you use to connect
                            to Atlas through the interface endpoint that the key names.
                            If the cluster uses an optimized connection string, `awsPrivateLinkSrv`
                            contains the optimized connection string. If the cluster
                            has the non-optimized (legacy) connection string, `awsPrivateLinkSrv`
                            contains the non-optimized connection string even if an
                            optimized connection string is also present.
                          type: string
                        description: Private endpoint-aware connection strings that
                          use AWS-hosted clusters with Amazon Web Services (AWS) PrivateLink.
                          Each key identifies an Amazon Web Services (AWS) interface
                          endpoint. Each value identifies the related `mongodb://`
                          connection string that you use to connect to Atlas through
                          the interface endpoint that the key names. If the cluster
                          uses an optimized connection string, `awsPrivateLinkSrv`
                          contains the optimized connection string. If the cluster
                          has the non-optimized (legacy) connection string, `awsPrivateLinkSrv`
                          contains the non-optimized connection string even if an
                          optimized connection string is also present.
                        type: object
                      private:
                        description: Network peering connection strings for each interface
                          Virtual Private Cloud (VPC) endpoint that you configured
                          to connect to this cluster. This connection string uses
                          the `mongodb+srv://` protocol. The resource returns this
                          parameter once someone creates a network peering connection
                          to this cluster. This protocol tells the application to
                          look up the host seed list in the Domain Name System (DNS).
                          This list synchronizes with the nodes in a cluster. If the
                          connection string uses this Uniform Resource Identifier
                          (URI) format, you don't need to append the seed list or
                          change the URI if the nodes change. Use this URI format
                          if your driver supports it. If it doesn't, use connectionStrings.private.
                          For Amazon Web Services (AWS) clusters, this resource returns
                          this parameter only if you enable custom DNS.
                        type: string
                      privateEndpoint:
                        description: List of private endpoint-aware connection strings
                          that you can use to connect to this cluster through a private
                          endpoint. This parameter returns only if you deployed a
                          private endpoint to all regions to which you deployed this
                          clusters' nodes.
                        items:
                          description: Private endpoint-aware connection string that
                            you can use to connect to this cluster through a private
                            endpoint.
                          properties:
                            connectionString:
                              description: Private endpoint-aware connection string
                                that uses the `mongodb://` protocol to connect to
                                MongoDB Cloud through a private endpoint.
                              type: string
                            endpoints:
                              description: List that contains the private endpoints
                                through which you connect to MongoDB Cloud when you
                                use **connectionStrings.privateEndpoint[n].connectionString**
                                or **connectionStrings.privateEndpoint[n].srvConnectionString**.
                              items:
                                description: Details of a private endpoint deployed
                                  for this cluster.
                                properties:
                                  endpointId:
                                    description: Unique string that the cloud provider
                                      uses to identify the private endpoint.
                                    type: string
                                  providerName:
                                    description: Cloud provider in which MongoDB Cloud
                                      deploys the private endpoint.
                                    type: string
                                  region:
                                    description: Region where the private endpoint
                                      is deployed.
                                    type: string
                                title: Cluster Private Endpoint Connection Strings
                                  Endpoint
                                type: object
                              type: array
                            srvConnectionString:
                              description: Private endpoint-aware connection string
                                that uses the `mongodb+srv://` protocol to connect
                                to MongoDB Cloud through a private endpoint. The `mongodb+srv`
                                protocol tells the driver to look up the seed list
                                of hosts in the Domain Name System (DNS). This list
                                synchronizes with the nodes in a cluster. If the connection
                                string uses this Uniform Resource Identifier (URI)
                                format, you don't need to append the seed list or
                                change the Uniform Resource Identifier (URI) if the
                                nodes change. Use this Uniform Resource Identifier
                                (URI) format if your application supports it. If it
                                doesn't, use connectionStrings.privateEndpoint[n].connectionString.
                              type: string
                            srvShardOptimizedConnectionString:
                              description: Private endpoint-aware connection string
                                optimized for sharded clusters that uses the `mongodb+srv://`
                                protocol to connect to MongoDB Cloud through a private
                                endpoint. If the connection string uses this Uniform
                                Resource Identifier (URI) format, you don't need to
                                change the Uniform Resource Identifier (URI) if the
                                nodes change. Use this Uniform Resource Identifier
                                (URI) format if your application and Atlas cluster
                                supports it. If it doesn't, use and consult the documentation
                                for connectionStrings.privateEndpoint[n].srvConnectionString.
                              type: string
                            type:
                              description: MongoDB process type to which your application
                                connects. Use `MONGOD` for replica sets and `MONGOS`
                                for sharded clusters.
                              type: string
                          title: Cluster Private Endpoint Connection String
                          type: object
                        type: array
                      privateSrv:
                        description: Network peering connection strings for each interface
                          Virtual Private Cloud (VPC) endpoint that you configured
                          to connect to this cluster. This connection string uses
                          the `mongodb+srv://` protocol. The resource returns this
                          parameter when someone creates a network peering connection
                          to this cluster. This protocol tells the application to
                          look up the host seed list in the Domain Name System (DNS).
                          This list synchronizes with the nodes in a cluster. If the
                          connection string uses this Uniform Resource Identifier
                          (URI) format, you don't need to append the seed list or
                          change the Uniform Resource Identifier (URI) if the nodes
                          change. Use this Uniform Resource Identifier (URI) format
                          if your driver supports it. If it doesn't, use `connectionStrings.private`.
                          For Amazon Web Services (AWS) clusters, this parameter returns
                          only if you [enable custom DNS](https://docs.atlas.mongodb.com/reference/api/aws-custom-dns-update/).
                        type: string
                      standard:
                        description: Public connection string that you can use to
                          connect to this cluster. This connection string uses the
                          `mongodb://` protocol.
                        type: string
                      standardSrv:
                        description: Public connection string that you can use to
                          connect to this cluster. This connection string uses the
                          `mongodb+srv://` protocol.
                        type: string
                    title: Cluster Connection Strings
                    type: object
                  createDate:
                    description: Date and time when MongoDB Cloud created this cluster.
                      This parameter expresses its value in ISO 8601 format in UTC.
                    type: string
                  featureCompatibilityVersion:
                    description: Feature compatibility version of the cluster. This
                      will always appear regardless of whether FCV is pinned.
                    type: string
                  featureCompatibilityVersionExpirationDate:
                    description: Feature compatibility version expiration date. Will
                      only appear if FCV is pinned. This parameter expresses its value
                      in the ISO 8601 timestamp format in UTC.
                    type: string
                  globalClusterSelfManagedSharding:
                    description: |-
                      Set this field to configure the Sharding Management Mode when creating a new Global Cluster.

                      When set to false, the management mode is set to Atlas-Managed Sharding. This mode fully manages the sharding of your Global Cluster and is built to provide a seamless deployment experience.

                      When set to true, the management mode is set to Self-Managed Sharding. This mode leaves the management of shards in your hands and is built to provide an advanced and flexible deployment experience.

                      This setting cannot be changed once the cluster is deployed.
                    type: boolean
                  groupId:
                    description: Unique 24-hexadecimal character string that identifies
                      the project.
                    example: 32b6e34b3d91647abb20e7b8
                    type: string
                  id:
                    description: Unique 24-hexadecimal digit string that identifies
                      the cluster.
                    example: 32b6e34b3d91647abb20e7b8
                    type: string
                  mongoDBEmployeeAccessGrant:
                    description: MongoDB employee granted access level and expiration
                      for a cluster.
                    properties:
                      expirationTime:
                        description: Expiration date for the employee access grant.
                          This parameter expresses its value in the ISO 8601 timestamp
                          format in UTC.
                        type: string
                      grantType:
                        description: Level of access to grant to MongoDB Employees.
                        type: string
                      links:
                        description: List of one or more Uniform Resource Locators
                          (URLs) that point to API sub-resources, related API resources,
                          or both. RFC 5988 outlines these relationships.
                        items:
                          properties:
                            href:
                              description: Uniform Resource Locator (URL) that points
                                another API resource to which this response has some
                                relationship. This URL often begins with `https://cloud.mongodb.com/api/atlas`.
                              example: https://cloud.mongodb.com/api/atlas
                              type: string
                            rel:
                              description: Uniform Resource Locator (URL) that defines
                                the semantic relationship between this resource and
                                another API resource. This URL often begins with `https://cloud.mongodb.com/api/atlas`.
                              example: self
                              type: string
                          type: object
                        type: array
                    required:
                    - expirationTime
                    - grantType
                    type: object
                  mongoDBVersion:
                    description: Version of MongoDB that the cluster runs.
                    type: string
                  redactClientLogData:
                    description: |-
                      Enable or disable log redaction.

                      This setting configures the ``mongod`` or ``mongos`` to redact any document field contents from a message accompanying a given log event before logging. This prevents the program from writing potentially sensitive data stored on the database to the diagnostic log. Metadata such as error or operation codes, line numbers, and source file names are still visible in the logs.

                      Use ``redactClientLogData`` in conjunction with Encryption at Rest and TLS/SSL (Transport Encryption) to assist compliance with regulatory requirements.

                      *Note*: changing this setting on a cluster will trigger a rolling restart as soon as the cluster is updated.
                    type: boolean
                  replicaSetScalingStrategy:
                    description: |-
                      Set this field to configure the replica set scaling mode for your cluster.

                      By default, Atlas scales under WORKLOAD_TYPE. This mode allows Atlas to scale your analytics nodes in parallel to your operational nodes.

                      When configured as SEQUENTIAL, Atlas scales all nodes sequentially. This mode is intended for steady-state workloads and applications performing latency-sensitive secondary reads.

                      When configured as NODE_TYPE, Atlas scales your electable nodes in parallel with your read-only and analytics nodes. This mode is intended for large, dynamic workloads requiring frequent and timely cluster tier scaling. This is the fastest scaling strategy, but it might impact latency of workloads when performing extensive secondary reads.
                    type: string
                  replicationSpecs:
                    description: List of settings that configure your cluster regions.
                      This array has one object per shard representing node configurations
                      in each shard. For replica sets there is only one object representing
                      node configurations.
                    items:
                      description: Details that explain how MongoDB Cloud replicates
                        data on the specified MongoDB database.
                      properties:
                        id:
                          description: Unique 24-hexadecimal digit string that identifies
                            the replication object for a shard in a Cluster. If you
                            include existing shard replication configurations in the
                            request, you must specify this parameter. If you add a
                            new shard to an existing Cluster, you may specify this
                            parameter. The request deletes any existing shards  in
                            the Cluster that you exclude from the request. This corresponds
                            to Shard ID displayed in the UI.
                          example: 32b6e34b3d91647abb20e7b8
                          type: string
                        zoneId:
                          description: Unique 24-hexadecimal digit string that identifies
                            the zone in a Global Cluster. This value can be used to
                            configure Global Cluster backup policies.
                          example: 32b6e34b3d91647abb20e7b8
                          type: string
                      title: Replication Specifications
                      type: object
                    type: array
                  stateName:
                    description: Human-readable label that indicates the current operating
                      condition of this cluster.
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-mappings: |
      properties:
        spec:
          properties:
            v20250312:
              properties:
                groupRef:
                  x-kubernetes-mapping:
                    nameSelector: .name
                    properties:
                    - $.status.v20250312.groupId
                    type:
                      group: atlas.generated.mongodb.com
                      kind: Group
                      resource: groups
                      version: v1
                  x-openapi-mapping:
                    property: $.groupId
              x-atlas-sdk-version: go.mongodb.org/atlas-sdk/v20250312005/admin
  creationTimestamp: null
  name: searchindexes.atlas.generated.mongodb.com
spec:
  group: atlas.generated.mongodb.com
  names:
    categories:
    - atlas
    kind: SearchIndex
    listKind: SearchIndexList
    plural: searchindexes
    shortNames:
    - asi
    singular: searchindex
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: A searchindex, managed by the MongoDB Kubernetes Atlas Operator.
        properties:
          spec:
            description: |-
              Specification of the searchindex supporting the following versions:

              - v20250312

              At most one versioned spec can be specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
            properties:
              v20250312:
                description: The spec of the searchindex resource for version v20250312.
                properties:
                  clusterName:
                    description: Name of the cluster that contains the collection
                      on which to create an Atlas Search index.
                    type: string
                    x-kubernetes-validations:
                    - message: clusterName cannot be modified after creation
                      rule: self == oldSelf
                  entry:
                    description: The entry fields of the searchindex resource spec.
                      These fields can be set for creating and updating searchindexes.
                    properties:
                      collectionName:
                        description: Label that identifies the collection to create
                          an Atlas Search index in.
                        type: string
                      database:
                        description: Label that identifies the database that contains
                          the collection to create an Atlas Search index in.
                        type: string
                      definition:
                        properties:
                          analyzer:
                            description: |-
                              Specific pre-defined method chosen to convert database field text into searchable words. This conversion reduces the text of fields into the smallest units of text. These units are called a **term** or **token**. This process, known as tokenization, involves making the following changes to the text in fields:

                              - extracting words
                              - removing punctuation
                              - removing accents
                              - changing to lowercase
                              - removing common words
                              - reducing words to their root form (stemming)
                              - changing words to their base form (lemmatization)
                               MongoDB Cloud uses the process you select to build the Atlas Search index.
                            type: string
                          analyzers:
                            description: List of user-defined methods to convert database
                              field text into searchable words.
                            items:
                              properties:
                                charFilters:
                                  description: Filters that examine text one character
                                    at a time and perform filtering operations.
                                  items:
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  type: array
                                name:
                                  description: |-
                                    Name that identifies the custom analyzer. Names must be unique within an index, and must not start with any of the following strings:
                                    - `lucene.`
                                    - `builtin.`
                                    - `mongodb.`
                                  type: string
                                tokenFilters:
                                  description: |-
                                    Filter that performs operations such as:

                                    - Stemming, which reduces related words, such as "talking", "talked", and "talks" to their root word "talk".

                                    - Redaction, which is the removal of sensitive information from public documents.
                                  items:
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  type: array
                                tokenizer:
                                  description: Tokenizer that you want to use to create
                                    tokens. Tokens determine how Atlas Search splits
                                    up text into discrete chunks for indexing.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              required:
                              - name
                              - tokenizer
                              title: Atlas Search Analyzer
                              type: object
                            type: array
                          fields:
                            description: Settings that configure the fields, one per
                              object, to index. You must define at least one "vector"
                              type field. You can optionally define "filter" type
                              fields also.
                            items:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            type: array
                          mappings:
                            description: Index specifications for the collection's
                              fields.
                            properties:
                              dynamic:
                                description: Flag that indicates whether the index
                                  uses dynamic or static mappings. Required if **mappings.fields**
                                  is omitted.
                                type: boolean
                              fields:
                                additionalProperties:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                description: One or more field specifications for
                                  the Atlas Search index. Required if **mappings.dynamic**
                                  is omitted or set to **false**.
                                type: object
                            title: Mappings
                            type: object
                          numPartitions:
                            description: Number of index partitions. Allowed values
                              are [1, 2, 4].
                            type: integer
                          searchAnalyzer:
                            description: Method applied to identify words when searching
                              this index.
                            type: string
                          storedSource:
                            description: Flag that indicates whether to store all
                              fields (true) on Atlas Search. By default, Atlas doesn't
                              store (false) the fields on Atlas Search.  Alternatively,
                              you can specify an object that only contains the list
                              of fields to store (include) or not store (exclude)
                              on Atlas Search. To learn more, see Stored Source Fields.
                            example:
                              include | exclude:
                              - field1
                              - field2
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          synonyms:
                            description: Rule sets that map words to their synonyms
                              in this index.
                            items:
                              description: Synonyms used for this full text index.
                              properties:
                                analyzer:
                                  description: Specific pre-defined method chosen
                                    to apply to the synonyms to be searched.
                                  type: string
                                name:
                                  description: Label that identifies the synonym definition.
                                    Each **synonym.name** must be unique within the
                                    same index definition.
                                  type: string
                                source:
                                  description: Data set that stores words and their
                                    applicable synonyms.
                                  properties:
                                    collection:
                                      description: Label that identifies the MongoDB
                                        collection that stores words and their applicable
                                        synonyms.
                                      type: string
                                  required:
                                  - collection
                                  type: object
                              required:
                              - analyzer
                              - name
                              - source
                              title: Synonym Mapping Definition
                              type: object
                            type: array
                        type: object
                      name:
                        description: Label that identifies this index. Within each
                          namespace, names of all indexes in the namespace must be
                          unique.
                        type: string
                      type:
                        description: Type of the index. The default type is search.
                        type: string
                    required:
                    - collectionName
                    - database
                    - name
                    type: object
                  groupId:
                    description: |-
                      Unique 24-hexadecimal digit string that identifies your project. Use the [/groups](#tag/Projects/operation/listProjects) endpoint to retrieve all projects to which the authenticated user has access.

                      **NOTE**: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.
                    example: 32b6e34b3d91647abb20e7b8
                    type: string
                    x-kubernetes-validations:
                    - message: groupId cannot be modified after creation
                      rule: self == oldSelf
                  groupRef:
                    description: |-
                      A reference to a "Group" resource.
                      The value of "$.status.v20250312.groupId" will be used to set "groupId".
                      Mutually exclusive with the "groupId" property.
                    properties:
                      name:
                        description: Name of the "Group" resource.
                        type: string
                    type: object
                required:
                - clusterName
                type: object
            type: object
          status:
            description: 'Most recently observed read-only status of the searchindex
              for the specified resource version. This data may not be up to date
              and is populated by the system. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
            properties:
              conditions:
                description: Represents the latest available observations of a resource's
                  current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon.
                      type: integer
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - type
                  - status
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              v20250312:
                description: The last observed Atlas state of the searchindex resource
                  for version v20250312.
                properties:
                  collectionName:
                    description: Label that identifies the collection that contains
                      one or more Atlas Search indexes.
                    type: string
                  database:
                    description: Label that identifies the database that contains
                      the collection with one or more Atlas Search indexes.
                    type: string
                  indexID:
                    description: Unique 24-hexadecimal digit string that identifies
                      this Atlas Search index.
                    example: 32b6e34b3d91647abb20e7b8
                    type: string
                  latestDefinitionVersion:
                    description: Object which includes the version number of the index
                      definition and the time that the index definition was created.
                    properties:
                      createdAt:
                        description: The time at which this index definition was created.
                          This parameter expresses its value in the ISO 8601 timestamp
                          format in UTC.
                        type: string
                      version:
                        description: The version number associated with this index
                          definition when it was created.
                        type: integer
                    title: Search Index Definition Version
                    type: object
                  name:
                    description: Label that identifies this index. Within each namespace,
                      the names of all indexes must be unique.
                    type: string
                  queryable:
                    description: Flag that indicates whether the index is queryable
                      on all hosts.
                    type: boolean
                  status:
                    description: |-
                      Condition of the search index when you made this request.

                      - `DELETING`: The index is being deleted.
                      - `FAILED` The index build failed. Indexes can enter the FAILED state due to an invalid index definition.
                      - `STALE`: The index is queryable but has stopped replicating data from the indexed collection. Searches on the index may return out-of-date data.
                      - `PENDING`: Atlas has not yet started building the index.
                      - `BUILDING`: Atlas is building or re-building the index after an edit.
                      - `READY`: The index is ready and can support queries.
                    type: string
                  statusDetail:
                    description: List of documents detailing index status on each
                      host.
                    items:
                      properties:
                        hostname:
                          description: Hostname that corresponds to the status detail.
                          type: string
                        mainIndex:
                          description: Contains status information about a vector
                            search index.
                          properties:
                            definition:
                              description: The vector search index definition set
                                by the user.
                              properties:
                                fields:
                                  description: Settings that configure the fields,
                                    one per object, to index. You must define at least
                                    one "vector" type field. You can optionally define
                                    "filter" type fields also.
                                  items:
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  type: array
                                numPartitions:
                                  description: Number of index partitions. Allowed
                                    values are [1, 2, 4].
                                  type: integer
                              title: Vector Search Index Definition
                              type: object
                            definitionVersion:
                              description: Object which includes the version number
                                of the index definition and the time that the index
                                definition was created.
                              properties:
                                createdAt:
                                  description: The time at which this index definition
                                    was created. This parameter expresses its value
                                    in the ISO 8601 timestamp format in UTC.
                                  type: string
                                version:
                                  description: The version number associated with
                                    this index definition when it was created.
                                  type: integer
                              title: Search Index Definition Version
                              type: object
                            message:
                              description: Optional message describing an error.
                              type: string
                            queryable:
                              description: Flag that indicates whether the index generation
                                is queryable on the host.
                              type: boolean
                            status:
                              description: |-
                                Condition of the search index when you made this request.

                                - `DELETING`: The index is being deleted.
                                - `FAILED` The index build failed. Indexes can enter the FAILED state due to an invalid index definition.
                                - `STALE`: The index is queryable but has stopped replicating data from the indexed collection. Searches on the index may return out-of-date data.
                                - `PENDING`: Atlas has not yet started building the index.
                                - `BUILDING`: Atlas is building or re-building the index after an edit.
                                - `READY`: The index is ready and can support queries.
                              type: string
                          title: Vector Search Index Status Detail
                          type: object
                        queryable:
                          description: Flag that indicates whether the index is queryable
                            on the host.
                          type: boolean
                        stagedIndex:
                          description: Contains status information about a vector
                            search index.
                          properties:
                            definition:
                              description: The vector search index definition set
                                by the user.
                              properties:
                                fields:
                                  description: Settings that configure the fields,
                                    one per object, to index. You must define at least
                                    one "vector" type field. You can optionally define
                                    "filter" type fields also.
                                  items:
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  type: array
                                numPartitions:
                                  description: Number of index partitions. Allowed
                                    values are [1, 2, 4].
                                  type: integer
                              title: Vector Search Index Definition
                              type: object
                            definitionVersion:
                              description: Object which includes the version number
                                of the index definition and the time that the index
                                definition was created.
                              properties:
                                createdAt:
                                  description: The time at which this index definition
                                    was created. This parameter expresses its value
                                    in the ISO 8601 timestamp format in UTC.
                                  type: string
                                version:
                                  description: The version number associated with
                                    this index definition when it was created.
                                  type: integer
                              title: Search Index Definition Version
                              type: object
                            message:
                              description: Optional message describing an error.
                              type: string
                            queryable:
                              description: Flag that indicates whether the index generation
                                is queryable on the host.
                              type: boolean
                            status:
                              description: |-
                                Condition of the search index when you made this request.

                                - `DELETING`: The index is being deleted.
                                - `FAILED` The index build failed. Indexes can enter the FAILED state due to an invalid index definition.
                                - `STALE`: The index is queryable but has stopped replicating data from the indexed collection. Searches on the index may return out-of-date data.
                                - `PENDING`: Atlas has not yet started building the index.
                                - `BUILDING`: Atlas is building or re-building the index after an edit.
                                - `READY`: The index is ready and can support queries.
                              type: string
                          title: Vector Search Index Status Detail
                          type: object
                        status:
                          description: |-
                            Condition of the search index when you made this request.

                            - `DELETING`: The index is being deleted.
                            - `FAILED` The index build failed. Indexes can enter the FAILED state due to an invalid index definition.
                            - `STALE`: The index is queryable but has stopped replicating data from the indexed collection. Searches on the index may return out-of-date data.
                            - `PENDING`: Atlas has not yet started building the index.
                            - `BUILDING`: Atlas is building or re-building the index after an edit.
                            - `READY`: The index is ready and can support queries.
                          type: string
                      title: Vector Search Host Status Detail
                      type: object
                    type: array
                  synonymMappingStatus:
                    description: Status that describes this index's synonym mappings.
                      This status appears only if the index has synonyms defined.
                    type: string
                  synonymMappingStatusDetail:
                    description: A list of documents describing the status of the
                      index's synonym mappings on each search host. Only appears if
                      the index has synonyms defined.
                    items:
                      additionalProperties:
                        description: Contains the status of the index's synonym mappings
                          on each search host. This field (and its subfields) only
                          appear if the index has synonyms defined.
                        properties:
                          message:
                            description: Optional message describing an error.
                            type: string
                          queryable:
                            description: Flag that indicates whether the synonym mapping
                              is queryable on a host.
                            type: boolean
                          status:
                            description: Status that describes this index's synonym
                              mappings. This status appears only if the index has
                              synonyms defined.
                            type: string
                        title: Synonym Mapping Status Detail
                        type: object
                      type: object
                    type: array
                  type:
                    description: Type of the index. The default type is search.
                    type: string
                title: Search Index Response
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-mappings: |
      properties:
        spec:
          properties:
            v20250312:
              properties:
                groupRef:
                  x-kubernetes-mapping:
                    nameSelector: .name
                    properties:
                    - $.status.v20250312.groupId
                    type:
                      group: atlas.generated.mongodb.com
                      kind: Group
                      resource: groups
                      version: v1
                  x-openapi-mapping:
                    property: $.groupId
              x-atlas-sdk-version: go.mongodb.org/atlas-sdk/v20250312005/admin
  creationTimestamp: null
  name: sampledatasets.atlas.generated.mongodb.com
spec:
  group: atlas.generated.mongodb.com
  names:
    categories:
    - atlas
    kind: SampleDataset
    listKind: SampleDatasetList
    plural: sampledatasets
    shortNames:
    - asd
    singular: sampledataset
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: A sampledataset, managed by the MongoDB Kubernetes Atlas Operator.
        properties:
          spec:
            description: |-
              Specification of the sampledataset supporting the following versions:

              - v20250312

              At most one versioned spec can be specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
            properties:
              v20250312:
                description: The spec of the sampledataset resource for version v20250312.
                properties:
                  groupId:
                    description: |-
                      Unique 24-hexadecimal digit string that identifies your project. Use the [/groups](#tag/Projects/operation/listProjects) endpoint to retrieve all projects to which the authenticated user has access.

                      **NOTE**: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.
                    example: 32b6e34b3d91647abb20e7b8
                    type: string
                    x-kubernetes-validations:
                    - message: groupId cannot be modified after creation
                      rule: self == oldSelf
                  groupRef:
                    description: |-
                      A reference to a "Group" resource.
                      The value of "$.status.v20250312.groupId" will be used to set "groupId".
                      Mutually exclusive with the "groupId" property.
                    properties:
                      name:
                        description: Name of the "Group" resource.
                        type: string
                    type: object
                  name:
                    description: Human-readable label that identifies the cluster
                      into which you load the sample dataset.
                    type: string
                    x-kubernetes-validations:
                    - message: name cannot be modified after creation
                      rule: self == oldSelf
                required:
                - name
                type: object
            type: object
          status:
            description: 'Most recently observed read-only status of the sampledataset
              for the specified resource version. This data may not be up to date
              and is populated by the system. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
            properties:
              conditions:
                description: Represents the latest available observations of a resource's
                  current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon.
                      type: integer
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - type
                  - status
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              v20250312:
                description: The last observed Atlas state of the sampledataset resource
                  for version v20250312.
                properties:
                  _id:
                    description: Unique 24-hexadecimal character string that identifies
                      this sample dataset.
                    example: 32b6e34b3d91647abb20e7b8
                    type: string
                  clusterName:
                    description: Human-readable label that identifies the cluster
                      into which you loaded the sample dataset.
                    type: string
                  completeDate:
                    description: Date and time when the sample dataset load job completed.
                      MongoDB Cloud represents this timestamp in ISO 8601 format in
                      UTC.
                    type: string
                  createDate:
                    description: Date and time when you started the sample dataset
                      load job. MongoDB Cloud represents this timestamp in ISO 8601
                      format in UTC.
                    type: string
                  errorMessage:
                    description: Details of the error returned when MongoDB Cloud
                      loads the sample dataset. This endpoint returns null if state
                      has a value other than FAILED.
                    type: string
                  state:
                    description: Status of the sample dataset load job.
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-mappings: |
      properties:
        spec:
          properties:
            v20250312:
              properties:
                groupRef:
                  x-kubernetes-mapping:
                    nameSelector: .name
                    properties:
                    - $.status.v20250312.groupId
                    type:
                      group: atlas.generated.mongodb.com
                      kind: Group
                      resource: groups
                      version: v1
                  x-openapi-mapping:
                    property: $.groupId
              x-atlas-sdk-version: go.mongodb.org/atlas-sdk/v20250312005/admin
  creationTimestamp: null
  name: customroles.atlas.generated.mongodb.com
spec:
  group: atlas.generated.mongodb.com
  names:
    categories:
    - atlas
    kind: CustomRole
    listKind: CustomRoleList
    plural: customroles
    shortNames:
    - arole
    singular: customrole
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: A customrole, managed by the MongoDB Kubernetes Atlas Operator.
        properties:
          spec:
            description: |-
              Specification of the customrole supporting the following versions:

              - v20250312

              At most one versioned spec can be specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
            properties:
              v20250312:
                description: The spec of the customrole resource for version v20250312.
                properties:
                  entry:
                    description: The entry fields of the customrole resource spec.
                      These fields can be set for creating and updating customroles.
                    properties:
                      actions:
                        description: List of the individual privilege actions that
                          the role grants.
                        items:
                          description: Privilege action that the role grants.
                          properties:
                            action:
                              description: Human-readable label that identifies the
                                privilege action.
                              type: string
                            resources:
                              description: List of resources on which you grant the
                                action.
                              items:
                                description: Namespace to which this database user
                                  has access.
                                properties:
                                  cluster:
                                    description: Flag that indicates whether to grant
                                      the action on the cluster resource. If `true`,
                                      MongoDB Cloud ignores the **actions.resources.collection**
                                      and **actions.resources.db** parameters.
                                    type: boolean
                                  collection:
                                    description: 'Human-readable label that identifies
                                      the collection on which you grant the action
                                      to one MongoDB user. If you don''t set this
                                      parameter, you grant the action to all collections
                                      in the database specified in the **actions.resources.db**
                                      parameter. If you set `"actions.resources.cluster"
                                      : true`, MongoDB Cloud ignores this parameter.'
                                    type: string
                                  db:
                                    description: 'Human-readable label that identifies
                                      the database on which you grant the action to
                                      one MongoDB user. If you set `"actions.resources.cluster"
                                      : true`, MongoDB Cloud ignores this parameter.'
                                    type: string
                                required:
                                - cluster
                                - collection
                                - db
                                title: Permitted Namespace
                                type: object
                              type: array
                          required:
                          - action
                          title: Database Privilege Action
                          type: object
                        type: array
                      inheritedRoles:
                        description: List of the built-in roles that this custom role
                          inherits.
                        items:
                          description: Role inherited from another context for this
                            database user.
                          properties:
                            db:
                              description: Human-readable label that identifies the
                                database on which someone grants the action to one
                                MongoDB user.
                              type: string
                            role:
                              description: Human-readable label that identifies the
                                role inherited. Set this value to `admin` for every
                                role except `read` or `readWrite`.
                              type: string
                          required:
                          - db
                          - role
                          title: Inherited Role
                          type: object
                        type: array
                      roleName:
                        description: Human-readable label that identifies the role
                          for the request. This name must be unique for this custom
                          role in this project.
                        type: string
                    required:
                    - roleName
                    type: object
                  groupId:
                    description: |-
                      Unique 24-hexadecimal digit string that identifies your project. Use the [/groups](#tag/Projects/operation/listProjects) endpoint to retrieve all projects to which the authenticated user has access.

                      **NOTE**: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.
                    example: 32b6e34b3d91647abb20e7b8
                    type: string
                    x-kubernetes-validations:
                    - message: groupId cannot be modified after creation
                      rule: self == oldSelf
                  groupRef:
                    description: |-
                      A reference to a "Group" resource.
                      The value of "$.status.v20250312.groupId" will be used to set "groupId".
                      Mutually exclusive with the "groupId" property.
                    properties:
                      name:
                        description: Name of the "Group" resource.
                        type: string
                    type: object
                type: object
            type: object
          status:
            description: 'Most recently observed read-only status of the customrole
              for the specified resource version. This data may not be up to date
              and is populated by the system. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
            properties:
              conditions:
                description: Represents the latest available observations of a resource's
                  current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon.
                      type: integer
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - type
                  - status
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-mappings: |
      properties:
        spec:
          properties:
            v20250312:
              properties:
                groupRef:
                  x-kubernetes-mapping:
                    nameSelector: .name
                    properties:
                    - $.status.v20250312.groupId
                    type:
                      group: atlas.generated.mongodb.com
                      kind: Group
                      resource: groups
                      version: v1
                  x-openapi-mapping:
                    property: $.groupId
              x-atlas-sdk-version: go.mongodb.org/atlas-sdk/v20250312005/admin
  creationTimestamp: null
  name: flexclusters.atlas.generated.mongodb.com
spec:
  group: atlas.generated.mongodb.com
  names:
    categories:
    - atlas
    kind: FlexCluster
    listKind: FlexClusterList
    plural: flexclusters
    shortNames:
    - afc
    singular: flexcluster
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: A flexcluster, managed by the MongoDB Kubernetes Atlas Operator.
        properties:
          spec:
            description: |-
              Specification of the flexcluster supporting the following versions:

              - v20250312

              At most one versioned spec can be specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
            properties:
              v20250312:
                description: The spec of the flexcluster resource for version v20250312.
                properties:
                  entry:
                    description: The entry fields of the flexcluster resource spec.
                      These fields can be set for creating and updating flexclusters.
                    properties:
                      name:
                        description: Human-readable label that identifies the instance.
                        type: string
                      providerSettings:
                        description: Group of cloud provider settings that configure
                          the provisioned MongoDB flex cluster.
                        properties:
                          backingProviderName:
                            description: Cloud service provider on which MongoDB Cloud
                              provisioned the flex cluster.
                            type: string
                          regionName:
                            description: Human-readable label that identifies the
                              geographic location of your MongoDB flex cluster. The
                              region you choose can affect network latency for clients
                              accessing your databases. For a complete list of region
                              names, see [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/#std-label-amazon-aws),
                              [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/),
                              and [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
                            type: string
                        required:
                        - backingProviderName
                        - regionName
                        title: Cloud Service Provider Settings for a Flex Cluster
                        type: object
                      tags:
                        description: List that contains key-value pairs between 1
                          to 255 characters in length for tagging and categorizing
                          the instance.
                        items:
                          description: 'Key-value pair that tags and categorizes a
                            MongoDB Cloud organization, project, or cluster. For example,
                            `environment : production`.'
                          properties:
                            key:
                              description: 'Constant that defines the set of the tag.
                                For example, `environment` in the `environment : production`
                                tag.'
                              type: string
                            value:
                              description: 'Variable that belongs to the set of the
                                tag. For example, `production` in the `environment
                                : production` tag.'
                              type: string
                          required:
                          - key
                          - value
                          title: Resource Tag
                          type: object
                        type: array
                      terminationProtectionEnabled:
                        description: Flag that indicates whether termination protection
                          is enabled on the cluster. If set to `true`, MongoDB Cloud
                          won't delete the cluster. If set to `false`, MongoDB Cloud
                          will delete the cluster.
                        type: boolean
                    required:
                    - name
                    - providerSettings
                    title: Flex Cluster Description Create
                    type: object
                  groupId:
                    description: |-
                      Unique 24-hexadecimal digit string that identifies your project. Use the [/groups](#tag/Projects/operation/listProjects) endpoint to retrieve all projects to which the authenticated user has access.

                      **NOTE**: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.
                    example: 32b6e34b3d91647abb20e7b8
                    type: string
                    x-kubernetes-validations:
                    - message: groupId cannot be modified after creation
                      rule: self == oldSelf
                  groupRef:
                    description: |-
                      A reference to a "Group" resource.
                      The value of "$.status.v20250312.groupId" will be used to set "groupId".
                      Mutually exclusive with the "groupId" property.
                    properties:
                      name:
                        description: Name of the "Group" resource.
                        type: string
                    type: object
                type: object
            type: object
          status:
            description: 'Most recently observed read-only status of the flexcluster
              for the specified resource version. This data may not be up to date
              and is populated by the system. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
            properties:
              conditions:
                description: Represents the latest available observations of a resource's
                  current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon.
                      type: integer
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - type
                  - status
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              v20250312:
                description: The last observed Atlas state of the flexcluster resource
                  for version v20250312.
                properties:
                  backupSettings:
                    description: Flex backup configuration.
                    properties:
                      enabled:
                        description: Flag that indicates whether backups are performed
                          for this flex cluster. Backup uses flex cluster backups.
                        type: boolean
                    title: Flex Backup Configuration
                    type: object
                  clusterType:
                    description: Flex cluster topology.
                    type: string
                  connectionStrings:
                    description: Collection of Uniform Resource Locators that point
                      to the MongoDB database.
                    properties:
                      standard:
                        description: Public connection string that you can use to
                          connect to this cluster. This connection string uses the
                          mongodb:// protocol.
                        type: string
                      standardSrv:
                        description: Public connection string that you can use to
                          connect to this flex cluster. This connection string uses
                          the `mongodb+srv://` protocol.
                        type: string
                    title: Flex Cluster Connection Strings
                    type: object
                  createDate:
                    description: Date and time when MongoDB Cloud created this instance.
                      This parameter expresses its value in ISO 8601 format in UTC.
                    type: string
                  groupId:
                    description: Unique 24-hexadecimal character string that identifies
                      the project.
                    example: 32b6e34b3d91647abb20e7b8
                    type: string
                  id:
                    description: Unique 24-hexadecimal digit string that identifies
                      the instance.
                    example: 32b6e34b3d91647abb20e7b8
                    type: string
                  mongoDBVersion:
                    description: Version of MongoDB that the instance runs.
                    type: string
                  name:
                    description: Human-readable label that identifies the instance.
                    type: string
                  providerSettings:
                    description: Group of cloud provider settings that configure the
                      provisioned MongoDB flex cluster.
                    properties:
                      backingProviderName:
                        description: Cloud service provider on which MongoDB Cloud
                          provisioned the flex cluster.
                        type: string
                      diskSizeGB:
                        description: Storage capacity available to the flex cluster
                          expressed in gigabytes.
                        type: number
                      providerName:
                        description: Human-readable label that identifies the provider
                          type.
                        type: string
                      regionName:
                        description: Human-readable label that identifies the geographic
                          location of your MongoDB flex cluster. The region you choose
                          can affect network latency for clients accessing your databases.
                          For a complete list of region names, see [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/#std-label-amazon-aws),
                          [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/),
                          and [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
                        type: string
                    title: Cloud Service Provider Settings for a Flex Cluster
                    type: object
                  stateName:
                    description: Human-readable label that indicates the current operating
                      condition of this instance.
                    type: string
                  versionReleaseSystem:
                    description: Method by which the cluster maintains the MongoDB
                      versions.
                    type: string
                required:
                - providerSettings
                title: Flex Cluster Description
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-mappings: |
      properties:
        spec:
          properties:
            v20250312:
              properties:
                entry:
                  properties:
                    notifications:
                      items:
                        properties:
                          apiTokenSecretRef:
                            x-kubernetes-mapping:
                              nameSelector: .name
                              propertySelectors:
                              - $.data.#
                              type:
                                kind: Secret
                                resource: secrets
                                version: v1
                            x-openapi-mapping:
                              property: .apiToken
                              type: string
                          datadogApiKeySecretRef:
                            x-kubernetes-mapping:
                              nameSelector: .name
                              propertySelectors:
                              - $.data.#
                              type:
                                kind: Secret
                                resource: secrets
                                version: v1
                            x-openapi-mapping:
                              property: .datadogApiKey
                              type: string
                          microsoftTeamsWebhookUrlSecretRef:
                            x-kubernetes-mapping:
                              nameSelector: .name
                              propertySelectors:
                              - $.data.#
                              type:
                                kind: Secret
                                resource: secrets
                                version: v1
                            x-openapi-mapping:
                              property: .microsoftTeamsWebhookUrl
                              type: string
                          notificationTokenSecretRef:
                            x-kubernetes-mapping:
                              nameSelector: .name
                              propertySelectors:
                              - $.data.#
                              type:
                                kind: Secret
                                resource: secrets
                                version: v1
                            x-openapi-mapping:
                              property: .notificationToken
                              type: string
                          opsGenieApiKeySecretRef:
                            x-kubernetes-mapping:
                              nameSelector: .name
                              propertySelectors:
                              - $.data.#
                              type:
                                kind: Secret
                                resource: secrets
                                version: v1
                            x-openapi-mapping:
                              property: .opsGenieApiKey
                              type: string
                          serviceKeySecretRef:
                            x-kubernetes-mapping:
                              nameSelector: .name
                              propertySelectors:
                              - $.data.#
                              type:
                                kind: Secret
                                resource: secrets
                                version: v1
                            x-openapi-mapping:
                              property: .serviceKey
                              type: string
                          victorOpsApiKeySecretRef:
                            x-kubernetes-mapping:
                              nameSelector: .name
                              propertySelectors:
                              - $.data.#
                              type:
                                kind: Secret
                                resource: secrets
                                version: v1
                            x-openapi-mapping:
                              property: .victorOpsApiKey
                              type: string
                          victorOpsRoutingKeySecretRef:
                            x-kubernetes-mapping:
                              nameSelector: .name
                              propertySelectors:
                              - $.data.#
                              type:
                                kind: Secret
                                resource: secrets
                                version: v1
                            x-openapi-mapping:
                              property: .victorOpsRoutingKey
                              type: string
                          webhookSecretSecretRef:
                            x-kubernetes-mapping:
                              nameSelector: .name
                              propertySelectors:
                              - $.data.#
                              type:
                                kind: Secret
                                resource: secrets
                                version: v1
                            x-openapi-mapping:
                              property: .webhookSecret
                              type: string
                          webhookUrlSecretRef:
                            x-kubernetes-mapping:
                              nameSelector: .name
                              propertySelectors:
                              - $.data.#
                              type:
                                kind: Secret
                                resource: secrets
                                version: v1
                            x-openapi-mapping:
                              property: .webhookUrl
                              type: string
                groupRef:
                  x-kubernetes-mapping:
                    nameSelector: .name
                    properties:
                    - $.status.v20250312.groupId
                    type:
                      group: atlas.generated.mongodb.com
                      kind: Group
                      resource: groups
                      version: v1
                  x-openapi-mapping:
                    property: $.groupId
              x-atlas-sdk-version: go.mongodb.org/atlas-sdk/v20250312005/admin
  creationTimestamp: null
  name: groupalertsconfigs.atlas.generated.mongodb.com
spec:
  group: atlas.generated.mongodb.com
  names:
    categories:
    - atlas
    kind: GroupAlertsConfig
    listKind: GroupAlertsConfigList
    plural: groupalertsconfigs
    shortNames:
    - aga
    singular: groupalertsconfig
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: A groupalertsconfig, managed by the MongoDB Kubernetes Atlas
          Operator.
        properties:
          spec:
            description: |-
              Specification of the groupalertsconfig supporting the following versions:

              - v20250312

              At most one versioned spec can be specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
            properties:
              v20250312:
                description: The spec of the groupalertsconfig resource for version
                  v20250312.
                properties:
                  entry:
                    description: The entry fields of the groupalertsconfig resource
                      spec. These fields can be set for creating and updating groupalertsconfigs.
                    properties:
                      enabled:
                        description: Flag that indicates whether someone enabled this
                          alert configuration for the specified project.
                        type: boolean
                      eventTypeName:
                        description: Event type that triggers an alert.
                        example: OUTSIDE_STREAM_PROCESSOR_METRIC_THRESHOLD
                        title: Stream Processor Event Types
                        type: string
                      matchers:
                        description: List of rules that determine whether MongoDB
                          Cloud checks an object for the alert configuration.
                        items:
                          description: Rules to apply when comparing a stream processing
                            instance or stream processor against this alert configuration.
                          properties:
                            fieldName:
                              description: Name of the parameter in the target object
                                that MongoDB Cloud checks. The parameter must match
                                all rules for MongoDB Cloud to check for alert configurations.
                              example: INSTANCE_NAME
                              title: Streams Matcher Fields
                              type: string
                            operator:
                              description: Comparison operator to apply when checking
                                the current metric value against **matcher[n].value**.
                              type: string
                            value:
                              description: Value to match or exceed using the specified
                                **matchers.operator**.
                              example: event-replica-set
                              type: string
                          required:
                          - fieldName
                          - operator
                          - value
                          title: Matchers
                          type: object
                        type: array
                      metricThreshold:
                        description: Threshold for the metric that, when exceeded,
                          triggers an alert. The metric threshold pertains to event
                          types which reflects changes of measurements and metrics
                          about the serverless database.
                        properties:
                          metricName:
                            description: Human-readable label that identifies the
                              metric against which MongoDB Cloud checks the configured
                              **metricThreshold.threshold**.
                            type: string
                          mode:
                            description: MongoDB Cloud computes the current metric
                              value as an average.
                            type: string
                          operator:
                            description: Comparison operator to apply when checking
                              the current metric value.
                            type: string
                          threshold:
                            description: Value of metric that, when exceeded, triggers
                              an alert.
                            type: number
                          units:
                            description: Element used to express the quantity. This
                              can be an element of time, storage capacity, and the
                              like.
                            example: BYTES
                            title: Data Metric Units
                            type: string
                        required:
                        - metricName
                        title: Flex Cluster Metric Threshold
                        type: object
                      notifications:
                        description: List that contains the targets that MongoDB Cloud
                          sends notifications.
                        items:
                          description: One target that MongoDB Cloud sends notifications
                            when an alert triggers.
                          properties:
                            apiTokenSecretRef:
                              description: "SENSITIVE FIELD\n\nReference to a secret
                                containing data for the \"apiToken\" field:\n\nSlack
                                API token or Bot token that MongoDB Cloud needs to
                                send alert notifications via Slack. The resource requires
                                this parameter when `\"notifications.[n].typeName\"
                                : \"SLACK\"`. If the token later becomes invalid,
                                MongoDB Cloud sends an email to the project owners.
                                If the token remains invalid, MongoDB Cloud removes
                                the token. \n\n**NOTE**: After you create a notification
                                which requires an API or integration key, the key
                                appears partially redacted when you:\n\n* View or
                                edit the alert through the Atlas UI.\n\n* Query the
                                alert for the notification through the Atlas Administration
                                API."
                              example: '**********************************************************************abcd'
                              properties:
                                key:
                                  default: .data.apiToken
                                  description: Key of the secret data containing the
                                    sensitive field value, defaults to "apiToken".
                                  type: string
                                name:
                                  description: Name of the secret containing the sensitive
                                    field value.
                                  type: string
                              type: object
                            channelName:
                              description: 'Name of the Slack channel to which MongoDB
                                Cloud sends alert notifications. The resource requires
                                this parameter when `"notifications.[n].typeName"
                                : "SLACK"`.'
                              example: alerts
                              type: string
                            datadogApiKeySecretRef:
                              description: |-
                                SENSITIVE FIELD

                                Reference to a secret containing data for the "datadogApiKey" field:

                                Datadog API Key that MongoDB Cloud needs to send alert notifications to Datadog. You can find this API key in the Datadog dashboard. The resource requires this parameter when `"notifications.[n].typeName" : "DATADOG"`.

                                **NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:

                                * View or edit the alert through the Atlas UI.

                                * Query the alert for the notification through the Atlas Administration API.
                              example: '****************************a23c'
                              properties:
                                key:
                                  default: .data.datadogApiKey
                                  description: Key of the secret data containing the
                                    sensitive field value, defaults to "datadogApiKey".
                                  type: string
                                name:
                                  description: Name of the secret containing the sensitive
                                    field value.
                                  type: string
                              type: object
                            datadogRegion:
                              description: 'Datadog region that indicates which API
                                Uniform Resource Locator (URL) to use. The resource
                                requires this parameter when `"notifications.[n].typeName"
                                : "DATADOG"`.'
                              type: string
                            delayMin:
                              description: Number of minutes that MongoDB Cloud waits
                                after detecting an alert condition before it sends
                                out the first notification.
                              type: integer
                            emailAddress:
                              description: |-
                                Email address to which MongoDB Cloud sends alert notifications. The resource requires this parameter when `"notifications.[n].typeName" : "EMAIL"`. You don't need to set this value to send emails to individual or groups of MongoDB Cloud users including:

                                - specific MongoDB Cloud users (`"notifications.[n].typeName" : "USER"`)
                                - MongoDB Cloud users with specific project roles (`"notifications.[n].typeName" : "GROUP"`)
                                - MongoDB Cloud users with specific organization roles (`"notifications.[n].typeName" : "ORG"`)
                                - MongoDB Cloud teams (`"notifications.[n].typeName" : "TEAM"`)

                                To send emails to one MongoDB Cloud user or grouping of users, set the `notifications.[n].emailEnabled` parameter.
                              type: string
                            emailEnabled:
                              description: |-
                                Flag that indicates whether MongoDB Cloud should send email notifications. The resource requires this parameter when one of the following values have been set:

                                - `"notifications.[n].typeName" : "ORG"`
                                - `"notifications.[n].typeName" : "GROUP"`
                                - `"notifications.[n].typeName" : "USER"`
                              type: boolean
                            integrationId:
                              description: The id of the associated integration, the
                                credentials of which to use for requests.
                              example: 32b6e34b3d91647abb20e7b8
                              type: string
                            intervalMin:
                              description: |-
                                Number of minutes to wait between successive notifications. MongoDB Cloud sends notifications until someone acknowledges the unacknowledged alert.

                                PagerDuty, VictorOps, and OpsGenie notifications don't return this element. Configure and manage the notification interval within each of those services.
                              type: integer
                            microsoftTeamsWebhookUrlSecretRef:
                              description: |-
                                SENSITIVE FIELD

                                Reference to a secret containing data for the "microsoftTeamsWebhookUrl" field:

                                Microsoft Teams Webhook Uniform Resource Locator (URL) that MongoDB Cloud needs to send this notification via Microsoft Teams. The resource requires this parameter when `"notifications.[n].typeName" : "MICROSOFT_TEAMS"`. If the URL later becomes invalid, MongoDB Cloud sends an email to the project owners. If the key remains invalid, MongoDB Cloud removes it.

                                **NOTE**: When you view or edit the alert for a Microsoft Teams notification, the URL appears partially redacted.
                              example: https://webhook.com/****
                              properties:
                                key:
                                  default: .data.microsoftTeamsWebhookUrl
                                  description: Key of the secret data containing the
                                    sensitive field value, defaults to "microsoftTeamsWebhookUrl".
                                  type: string
                                name:
                                  description: Name of the secret containing the sensitive
                                    field value.
                                  type: string
                              type: object
                            mobileNumber:
                              description: 'Mobile phone number to which MongoDB Cloud
                                sends alert notifications. The resource requires this
                                parameter when `"notifications.[n].typeName" : "SMS"`.'
                              example: "1233337892"
                              type: string
                            notificationTokenSecretRef:
                              description: |-
                                SENSITIVE FIELD

                                Reference to a secret containing data for the "notificationToken" field:

                                HipChat API token that MongoDB Cloud needs to send alert notifications to HipChat. The resource requires this parameter when `"notifications.[n].typeName" : "HIP_CHAT"`". If the token later becomes invalid, MongoDB Cloud sends an email to the project owners. If the token remains invalid, MongoDB Cloud removes it.

                                **NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:

                                * View or edit the alert through the Atlas UI.

                                * Query the alert for the notification through the Atlas Administration API.
                              example: '************************************1234'
                              properties:
                                key:
                                  default: .data.notificationToken
                                  description: Key of the secret data containing the
                                    sensitive field value, defaults to "notificationToken".
                                  type: string
                                name:
                                  description: Name of the secret containing the sensitive
                                    field value.
                                  type: string
                              type: object
                            notifierId:
                              description: The notifierId is a system-generated unique
                                identifier assigned to each notification method. This
                                is needed when updating third-party notifications
                                without requiring explicit authentication credentials.
                              example: 32b6e34b3d91647abb20e7b8
                              type: string
                            opsGenieApiKeySecretRef:
                              description: |-
                                SENSITIVE FIELD

                                Reference to a secret containing data for the "opsGenieApiKey" field:

                                API Key that MongoDB Cloud needs to send this notification via Opsgenie. The resource requires this parameter when `"notifications.[n].typeName" : "OPS_GENIE"`. If the key later becomes invalid, MongoDB Cloud sends an email to the project owners. If the key remains invalid, MongoDB Cloud removes it.

                                **NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:

                                * View or edit the alert through the Atlas UI.

                                * Query the alert for the notification through the Atlas Administration API.
                              example: '********************************a111'
                              properties:
                                key:
                                  default: .data.opsGenieApiKey
                                  description: Key of the secret data containing the
                                    sensitive field value, defaults to "opsGenieApiKey".
                                  type: string
                                name:
                                  description: Name of the secret containing the sensitive
                                    field value.
                                  type: string
                              type: object
                            opsGenieRegion:
                              description: Opsgenie region that indicates which API
                                Uniform Resource Locator (URL) to use.
                              type: string
                            region:
                              description: PagerDuty region that indicates which API
                                Uniform Resource Locator (URL) to use.
                              type: string
                            roles:
                              description: 'List that contains the one or more organization
                                roles that receive the configured alert. This parameter
                                is available when `"notifications.[n].typeName" :
                                "GROUP"` or `"notifications.[n].typeName" : "ORG"`.
                                If you include this parameter, MongoDB Cloud sends
                                alerts only to users assigned the roles you specify
                                in the array. If you omit this parameter, MongoDB
                                Cloud sends alerts to users assigned any role.'
                              items:
                                description: One or more organization roles that receive
                                  the configured alert.
                                type: string
                              type: array
                            roomName:
                              description: 'HipChat API room name to which MongoDB
                                Cloud sends alert notifications. The resource requires
                                this parameter when `"notifications.[n].typeName"
                                : "HIP_CHAT"`".'
                              example: test room
                              type: string
                            serviceKeySecretRef:
                              description: |-
                                SENSITIVE FIELD

                                Reference to a secret containing data for the "serviceKey" field:

                                PagerDuty service key that MongoDB Cloud needs to send notifications via PagerDuty. The resource requires this parameter when `"notifications.[n].typeName" : "PAGER_DUTY"`. If the key later becomes invalid, MongoDB Cloud sends an email to the project owners. If the key remains invalid, MongoDB Cloud removes it.

                                **NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:

                                * View or edit the alert through the Atlas UI.

                                * Query the alert for the notification through the Atlas Administration API.
                              example: '****************************7890'
                              properties:
                                key:
                                  default: .data.serviceKey
                                  description: Key of the secret data containing the
                                    sensitive field value, defaults to "serviceKey".
                                  type: string
                                name:
                                  description: Name of the secret containing the sensitive
                                    field value.
                                  type: string
                              type: object
                            smsEnabled:
                              description: |-
                                Flag that indicates whether MongoDB Cloud should send text message notifications. The resource requires this parameter when one of the following values have been set:

                                - `"notifications.[n].typeName" : "ORG"`
                                - `"notifications.[n].typeName" : "GROUP"`
                                - `"notifications.[n].typeName" : "USER"`
                              type: boolean
                            teamId:
                              description: 'Unique 24-hexadecimal digit string that
                                identifies one MongoDB Cloud team. The resource requires
                                this parameter when `"notifications.[n].typeName"
                                : "TEAM"`.'
                              example: 32b6e34b3d91647abb20e7b8
                              type: string
                            teamName:
                              description: 'Name of the MongoDB Cloud team that receives
                                this notification. The resource requires this parameter
                                when `"notifications.[n].typeName" : "TEAM"`.'
                              example: Atlas
                              type: string
                            typeName:
                              description: Human-readable label that displays the
                                alert notification type.
                              type: string
                            username:
                              description: 'MongoDB Cloud username of the person to
                                whom MongoDB Cloud sends notifications. Specify only
                                MongoDB Cloud users who belong to the project that
                                owns the alert configuration. The resource requires
                                this parameter when `"notifications.[n].typeName"
                                : "USER"`.'
                              type: string
                            victorOpsApiKeySecretRef:
                              description: |-
                                SENSITIVE FIELD

                                Reference to a secret containing data for the "victorOpsApiKey" field:

                                API key that MongoDB Cloud needs to send alert notifications to Splunk On-Call. The resource requires this parameter when `"notifications.[n].typeName" : "VICTOR_OPS"`. If the key later becomes invalid, MongoDB Cloud sends an email to the project owners. If the key remains invalid, MongoDB Cloud removes it.

                                **NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:

                                * View or edit the alert through the Atlas UI.

                                * Query the alert for the notification through the Atlas Administration API.
                              example: '********************************9abc'
                              properties:
                                key:
                                  default: .data.victorOpsApiKey
                                  description: Key of the secret data containing the
                                    sensitive field value, defaults to "victorOpsApiKey".
                                  type: string
                                name:
                                  description: Name of the secret containing the sensitive
                                    field value.
                                  type: string
                              type: object
                            victorOpsRoutingKeySecretRef:
                              description: |-
                                SENSITIVE FIELD

                                Reference to a secret containing data for the "victorOpsRoutingKey" field:

                                Routing key that MongoDB Cloud needs to send alert notifications to Splunk On-Call. The resource requires this parameter when `"notifications.[n].typeName" : "VICTOR_OPS"`. If the key later becomes invalid, MongoDB Cloud sends an email to the project owners. If the key remains invalid, MongoDB Cloud removes it.
                              example: test routing
                              properties:
                                key:
                                  default: .data.victorOpsRoutingKey
                                  description: Key of the secret data containing the
                                    sensitive field value, defaults to "victorOpsRoutingKey".
                                  type: string
                                name:
                                  description: Name of the secret containing the sensitive
                                    field value.
                                  type: string
                              type: object
                            webhookSecretSecretRef:
                              description: |-
                                SENSITIVE FIELD

                                Reference to a secret containing data for the "webhookSecret" field:

                                Authentication secret for a webhook-based alert.

                                Atlas returns this value if you set `"notifications.[n].typeName" :"WEBHOOK"` and either:
                                * You set `notification.[n].webhookSecret` to a non-empty string
                                * You set a default webhookSecret either on the Integrations page, or with the [Integrations API](#tag/Third-Party-Service-Integrations/operation/createIntegration)

                                **NOTE**: When you view or edit the alert for a webhook notification, the secret appears completely redacted.
                              properties:
                                key:
                                  default: .data.webhookSecret
                                  description: Key of the secret data containing the
                                    sensitive field value, defaults to "webhookSecret".
                                  type: string
                                name:
                                  description: Name of the secret containing the sensitive
                                    field value.
                                  type: string
                              type: object
                            webhookUrlSecretRef:
                              description: |-
                                SENSITIVE FIELD

                                Reference to a secret containing data for the "webhookUrl" field:

                                Target URL for a webhook-based alert.

                                Atlas returns this value if you set `"notifications.[n].typeName" :"WEBHOOK"` and either:
                                * You set `notification.[n].webhookURL` to a non-empty string
                                * You set a default webhookUrl either on the [Integrations](https://www.mongodb.com/docs/atlas/tutorial/third-party-service-integrations/#std-label-third-party-integrations) page, or with the [Integrations API](#tag/Third-Party-Service-Integrations/operation/createIntegration)

                                **NOTE**: When you view or edit the alert for a Webhook URL notification, the URL appears partially redacted.
                              example: https://webhook.com/****
                              properties:
                                key:
                                  default: .data.webhookUrl
                                  description: Key of the secret data containing the
                                    sensitive field value, defaults to "webhookUrl".
                                  type: string
                                name:
                                  description: Name of the secret containing the sensitive
                                    field value.
                                  type: string
                              type: object
                          type: object
                        type: array
                      severityOverride:
                        description: Severity of the event.
                        type: string
                      threshold:
                        description: Threshold for the metric that, when exceeded,
                          triggers an alert. The metric threshold pertains to event
                          types which reflects changes of measurements and metrics
                          in stream processors.
                        properties:
                          metricName:
                            description: Human-readable label that identifies the
                              metric against which MongoDB Cloud checks the configured
                              **metricThreshold.threshold**.
                            type: string
                          mode:
                            description: MongoDB Cloud computes the current metric
                              value as an average.
                            type: string
                          operator:
                            description: Comparison operator to apply when checking
                              the current metric value.
                            type: string
                          threshold:
                            description: Value of metric that, when exceeded, triggers
                              an alert.
                            type: number
                          units:
                            description: Element used to express the quantity. This
                              can be an element of time, storage capacity, and the
                              like.
                            title: Raw Metric Units
                            type: string
                        title: Stream Processor Metric Threshold
                        type: object
                    type: object
                  groupId:
                    description: |-
                      Unique 24-hexadecimal digit string that identifies your project. Use the [/groups](#tag/Projects/operation/listProjects) endpoint to retrieve all projects to which the authenticated user has access.

                      **NOTE**: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.
                    example: 32b6e34b3d91647abb20e7b8
                    type: string
                    x-kubernetes-validations:
                    - message: groupId cannot be modified after creation
                      rule: self == oldSelf
                  groupRef:
                    description: |-
                      A reference to a "Group" resource.
                      The value of "$.status.v20250312.groupId" will be used to set "groupId".
                      Mutually exclusive with the "groupId" property.
                    properties:
                      name:
                        description: Name of the "Group" resource.
                        type: string
                    type: object
                type: object
            type: object
          status:
            description: 'Most recently observed read-only status of the groupalertsconfig
              for the specified resource version. This data may not be up to date
              and is populated by the system. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
            properties:
              conditions:
                description: Represents the latest available observations of a resource's
                  current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon.
                      type: integer
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - type
                  - status
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              v20250312:
                description: The last observed Atlas state of the groupalertsconfig
                  resource for version v20250312.
                properties:
                  created:
                    description: Date and time when MongoDB Cloud created the alert
                      configuration. This parameter expresses its value in the ISO
                      8601 timestamp format in UTC.
                    type: string
                  groupId:
                    description: Unique 24-hexadecimal digit string that identifies
                      the project that owns this alert configuration.
                    example: 32b6e34b3d91647abb20e7b8
                    type: string
                  id:
                    description: Unique 24-hexadecimal digit string that identifies
                      this alert configuration.
                    example: 32b6e34b3d91647abb20e7b8
                    type: string
                  updated:
                    description: Date and time when someone last updated this alert
                      configuration. This parameter expresses its value in the ISO
                      8601 timestamp format in UTC.
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-mappings: |
      properties:
        spec:
          properties:
            v20250312:
              properties:
                entry:
                  properties:
                    apiKeySecretRef:
                      x-kubernetes-mapping:
                        nameSelector: .name
                        propertySelectors:
                        - $.data.#
                        type:
                          kind: Secret
                          resource: secrets
                          version: v1
                      x-openapi-mapping:
                        property: .apiKey
                        type: string
                    apiTokenSecretRef:
                      x-kubernetes-mapping:
                        nameSelector: .name
                        propertySelectors:
                        - $.data.#
                        type:
                          kind: Secret
                          resource: secrets
                          version: v1
                      x-openapi-mapping:
                        property: .apiToken
                        type: string
                    licenseKeySecretRef:
                      x-kubernetes-mapping:
                        nameSelector: .name
                        propertySelectors:
                        - $.data.#
                        type:
                          kind: Secret
                          resource: secrets
                          version: v1
                      x-openapi-mapping:
                        property: .licenseKey
                        type: string
                    microsoftTeamsWebhookUrlSecretRef:
                      x-kubernetes-mapping:
                        nameSelector: .name
                        propertySelectors:
                        - $.data.#
                        type:
                          kind: Secret
                          resource: secrets
                          version: v1
                      x-openapi-mapping:
                        property: .microsoftTeamsWebhookUrl
                        type: string
                    passwordSecretRef:
                      x-kubernetes-mapping:
                        nameSelector: .name
                        propertySelectors:
                        - $.data.#
                        type:
                          kind: Secret
                          resource: secrets
                          version: v1
                      x-openapi-mapping:
                        property: .password
                        type: string
                    readTokenSecretRef:
                      x-kubernetes-mapping:
                        nameSelector: .name
                        propertySelectors:
                        - $.data.#
                        type:
                          kind: Secret
                          resource: secrets
                          version: v1
                      x-openapi-mapping:
                        property: .readToken
                        type: string
                    routingKeySecretRef:
                      x-kubernetes-mapping:
                        nameSelector: .name
                        propertySelectors:
                        - $.data.#
                        type:
                          kind: Secret
                          resource: secrets
                          version: v1
                      x-openapi-mapping:
                        property: .routingKey
                        type: string
                    secretSecretRef:
                      x-kubernetes-mapping:
                        nameSelector: .name
                        propertySelectors:
                        - $.data.#
                        type:
                          kind: Secret
                          resource: secrets
                          version: v1
                      x-openapi-mapping:
                        property: .secret
                        type: string
                    serviceKeySecretRef:
                      x-kubernetes-mapping:
                        nameSelector: .name
                        propertySelectors:
                        - $.data.#
                        type:
                          kind: Secret
                          resource: secrets
                          version: v1
                      x-openapi-mapping:
                        property: .serviceKey
                        type: string
                    urlSecretRef:
                      x-kubernetes-mapping:
                        nameSelector: .name
                        propertySelectors:
                        - $.data.#
                        type:
                          kind: Secret
                          resource: secrets
                          version: v1
                      x-openapi-mapping:
                        property: .url
                        type: string
                    writeTokenSecretRef:
                      x-kubernetes-mapping:
                        nameSelector: .name
                        propertySelectors:
                        - $.data.#
                        type:
                          kind: Secret
                          resource: secrets
                          version: v1
                      x-openapi-mapping:
                        property: .writeToken
                        type: string
                groupRef:
                  x-kubernetes-mapping:
                    nameSelector: .name
                    properties:
                    - $.status.v20250312.groupId
                    type:
                      group: atlas.generated.mongodb.com
                      kind: Group
                      resource: groups
                      version: v1
                  x-openapi-mapping:
                    property: $.groupId
              x-atlas-sdk-version: go.mongodb.org/atlas-sdk/v20250312005/admin
  creationTimestamp: null
  name: thirdpartyintegrations.atlas.generated.mongodb.com
spec:
  group: atlas.generated.mongodb.com
  names:
    categories:
    - atlas
    kind: ThirdPartyIntegration
    listKind: ThirdPartyIntegrationList
    plural: thirdpartyintegrations
    shortNames:
    - atpi
    singular: thirdpartyintegration
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: A thirdpartyintegration, managed by the MongoDB Kubernetes Atlas
          Operator.
        properties:
          spec:
            description: |-
              Specification of the thirdpartyintegration supporting the following versions:

              - v20250312

              At most one versioned spec can be specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
            properties:
              v20250312:
                description: The spec of the thirdpartyintegration resource for version
                  v20250312.
                properties:
                  entry:
                    description: The entry fields of the thirdpartyintegration resource
                      spec. These fields can be set for creating and updating thirdpartyintegrations.
                    properties:
                      accountId:
                        description: Unique 40-hexadecimal digit string that identifies
                          your New Relic account.
                        example: bcc3c81b344a6030a3935c2527e2216535af7718
                        type: string
                      apiKeySecretRef:
                        description: |-
                          SENSITIVE FIELD

                          Reference to a secret containing data for the "apiKey" field:

                          Key that allows MongoDB Cloud to access your VictorOps account.

                          **NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:

                          * View or edit the alert through the Atlas UI.

                          * Query the alert for the notification through the Atlas Administration API.
                        example: '********************************9abc'
                        properties:
                          key:
                            default: .data.apiKey
                            description: Key of the secret data containing the sensitive
                              field value, defaults to "apiKey".
                            type: string
                          name:
                            description: Name of the secret containing the sensitive
                              field value.
                            type: string
                        type: object
                      apiTokenSecretRef:
                        description: |-
                          SENSITIVE FIELD

                          Reference to a secret containing data for the "apiToken" field:

                          Key that allows MongoDB Cloud to access your Slack account.

                          **NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:

                          * View or edit the alert through the Atlas UI.

                          * Query the alert for the notification through the Atlas Administration API.

                          **IMPORTANT**: Slack integrations now use the OAuth2 verification method and must  be initially configured, or updated from a legacy integration, through the Atlas  third-party service integrations page. Legacy tokens will soon no longer be  supported.
                        example: '**********************************************************************abcd'
                        properties:
                          key:
                            default: .data.apiToken
                            description: Key of the secret data containing the sensitive
                              field value, defaults to "apiToken".
                            type: string
                          name:
                            description: Name of the secret containing the sensitive
                              field value.
                            type: string
                        type: object
                      channelName:
                        description: Name of the Slack channel to which MongoDB Cloud
                          sends alert notifications.
                        example: alerts
                        type: string
                      enabled:
                        description: Flag that indicates whether someone has activated
                          the Prometheus integration.
                        type: boolean
                      licenseKeySecretRef:
                        description: |-
                          SENSITIVE FIELD

                          Reference to a secret containing data for the "licenseKey" field:

                          Unique 40-hexadecimal digit string that identifies your New Relic license.

                          **IMPORTANT**: Effective Wednesday, June 16th, 2021, New Relic no longer supports the plugin-based integration with MongoDB. We do not recommend that you sign up for the plugin-based integration.
                          Consider configuring an alternative monitoring integration before June 16th to maintain visibility into your MongoDB deployments.
                        example: bc3768f44193c282b2688ab39e00f8e4fc8d75ea
                        properties:
                          key:
                            default: .data.licenseKey
                            description: Key of the secret data containing the sensitive
                              field value, defaults to "licenseKey".
                            type: string
                          name:
                            description: Name of the secret containing the sensitive
                              field value.
                            type: string
                        type: object
                      microsoftTeamsWebhookUrlSecretRef:
                        description: |-
                          SENSITIVE FIELD

                          Reference to a secret containing data for the "microsoftTeamsWebhookUrl" field:

                          Endpoint web address of the Microsoft Teams webhook to which MongoDB Cloud sends notifications.

                          **NOTE**: When you view or edit the alert for a Microsoft Teams notification, the URL appears partially redacted.
                        example: https://webhook.com/****
                        properties:
                          key:
                            default: .data.microsoftTeamsWebhookUrl
                            description: Key of the secret data containing the sensitive
                              field value, defaults to "microsoftTeamsWebhookUrl".
                            type: string
                          name:
                            description: Name of the secret containing the sensitive
                              field value.
                            type: string
                        type: object
                      passwordSecretRef:
                        description: |-
                          SENSITIVE FIELD

                          Reference to a secret containing data for the "password" field:

                          Password needed to allow MongoDB Cloud to access your Prometheus account.
                        properties:
                          key:
                            default: .data.password
                            description: Key of the secret data containing the sensitive
                              field value, defaults to "password".
                            type: string
                          name:
                            description: Name of the secret containing the sensitive
                              field value.
                            type: string
                        type: object
                      readTokenSecretRef:
                        description: |-
                          SENSITIVE FIELD

                          Reference to a secret containing data for the "readToken" field:

                          Query key used to access your New Relic account.
                        example: 193c96aee4a3ac640b98634562e2631f17ae0a69
                        properties:
                          key:
                            default: .data.readToken
                            description: Key of the secret data containing the sensitive
                              field value, defaults to "readToken".
                            type: string
                          name:
                            description: Name of the secret containing the sensitive
                              field value.
                            type: string
                        type: object
                      region:
                        description: PagerDuty region that indicates the API Uniform
                          Resource Locator (URL) to use.
                        type: string
                      routingKeySecretRef:
                        description: |-
                          SENSITIVE FIELD

                          Reference to a secret containing data for the "routingKey" field:

                          Routing key associated with your Splunk On-Call account.
                        example: test routing
                        properties:
                          key:
                            default: .data.routingKey
                            description: Key of the secret data containing the sensitive
                              field value, defaults to "routingKey".
                            type: string
                          name:
                            description: Name of the secret containing the sensitive
                              field value.
                            type: string
                        type: object
                      secretSecretRef:
                        description: |-
                          SENSITIVE FIELD

                          Reference to a secret containing data for the "secret" field:

                          An optional field returned if your webhook is configured with a secret.

                          **NOTE**: When you view or edit the alert for a webhook notification, the secret appears completely redacted.
                        properties:
                          key:
                            default: .data.secret
                            description: Key of the secret data containing the sensitive
                              field value, defaults to "secret".
                            type: string
                          name:
                            description: Name of the secret containing the sensitive
                              field value.
                            type: string
                        type: object
                      sendCollectionLatencyMetrics:
                        description: Toggle sending collection latency metrics that
                          includes database names and collection namesand latency
                          metrics on reads, writes, commands, and transactions.
                        type: boolean
                      sendDatabaseMetrics:
                        description: Toggle sending database metrics that includes
                          database names and metrics on the number of collections,
                          storage size, and index size.
                        type: boolean
                      sendUserProvidedResourceTags:
                        description: Toggle sending user provided group and cluster
                          resource tags with the datadog metrics.
                        type: boolean
                      serviceDiscovery:
                        description: Desired method to discover the Prometheus service.
                        type: string
                      serviceKeySecretRef:
                        description: |-
                          SENSITIVE FIELD

                          Reference to a secret containing data for the "serviceKey" field:

                          Service key associated with your PagerDuty account.

                          **NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:

                          * View or edit the alert through the Atlas UI.

                          * Query the alert for the notification through the Atlas Administration API.
                        example: '****************************7890'
                        properties:
                          key:
                            default: .data.serviceKey
                            description: Key of the secret data containing the sensitive
                              field value, defaults to "serviceKey".
                            type: string
                          name:
                            description: Name of the secret containing the sensitive
                              field value.
                            type: string
                        type: object
                      teamName:
                        description: Human-readable label that identifies your Slack
                          team. Set this parameter when you configure a legacy Slack
                          integration.
                        example: MongoDB
                        type: string
                      type:
                        description: Human-readable label that identifies the service
                          to which you want to integrate with MongoDB Cloud. The value
                          must match the third-party service integration type.
                        type: string
                      urlSecretRef:
                        description: |-
                          SENSITIVE FIELD

                          Reference to a secret containing data for the "url" field:

                          Endpoint web address to which MongoDB Cloud sends notifications.

                          **NOTE**: When you view or edit the alert for a webhook notification, the URL appears partially redacted.
                        example: https://webhook.com/****
                        properties:
                          key:
                            default: .data.url
                            description: Key of the secret data containing the sensitive
                              field value, defaults to "url".
                            type: string
                          name:
                            description: Name of the secret containing the sensitive
                              field value.
                            type: string
                        type: object
                      username:
                        description: Human-readable label that identifies your Prometheus
                          incoming webhook.
                        example: prom_user_618d48e05277a606ed2496fe
                        type: string
                      writeTokenSecretRef:
                        description: |-
                          SENSITIVE FIELD

                          Reference to a secret containing data for the "writeToken" field:

                          Insert key associated with your New Relic account.
                        example: a67b10e5cd7f8fb6a34b501136c409f373edc218
                        properties:
                          key:
                            default: .data.writeToken
                            description: Key of the secret data containing the sensitive
                              field value, defaults to "writeToken".
                            type: string
                          name:
                            description: Name of the secret containing the sensitive
                              field value.
                            type: string
                        type: object
                    title: Third-Party Integration
                    type: object
                  groupId:
                    description: |-
                      Unique 24-hexadecimal digit string that identifies your project. Use the [/groups](#tag/Projects/operation/listProjects) endpoint to retrieve all projects to which the authenticated user has access.

                      **NOTE**: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.
                    example: 32b6e34b3d91647abb20e7b8
                    type: string
                    x-kubernetes-validations:
                    - message: groupId cannot be modified after creation
                      rule: self == oldSelf
                  groupRef:
                    description: |-
                      A reference to a "Group" resource.
                      The value of "$.status.v20250312.groupId" will be used to set "groupId".
                      Mutually exclusive with the "groupId" property.
                    properties:
                      name:
                        description: Name of the "Group" resource.
                        type: string
                    type: object
                  integrationType:
                    description: Human-readable label that identifies the service
                      which you want to integrate with MongoDB Cloud.
                    title: Integration Type
                    type: string
                    x-kubernetes-validations:
                    - message: integrationType cannot be modified after creation
                      rule: self == oldSelf
                required:
                - integrationType
                type: object
            type: object
          status:
            description: 'Most recently observed read-only status of the thirdpartyintegration
              for the specified resource version. This data may not be up to date
              and is populated by the system. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
            properties:
              conditions:
                description: Represents the latest available observations of a resource's
                  current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon.
                      type: integer
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - type
                  - status
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              v20250312:
                description: The last observed Atlas state of the thirdpartyintegration
                  resource for version v20250312.
                properties:
                  id:
                    description: Integration id.
                    type: string
                  sendCollectionLatencyMetrics:
                    description: Toggle sending collection latency metrics that includes
                      database names and collection namesand latency metrics on reads,
                      writes, commands, and transactions.
                    type: boolean
                  sendDatabaseMetrics:
                    description: Toggle sending database metrics that includes database
                      names and metrics on the number of collections, storage size,
                      and index size.
                    type: boolean
                  sendUserProvidedResourceTags:
                    description: Toggle sending user provided group and cluster resource
                      tags with the datadog metrics.
                    type: boolean
                  type:
                    description: Human-readable label that identifies the service
                      to which you want to integrate with MongoDB Cloud. The value
                      must match the third-party service integration type.
                    type: string
                title: Third-Party Integration
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1
