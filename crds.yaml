# The file is generated by openapi2crd
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: groups.atlas.generated.mongodb.com
spec:
  group: atlas.generated.mongodb.com
  names:
    categories:
    - atlas
    kind: Group
    listKind: GroupList
    plural: groups
    singular: group
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: A group, managed by the MongoDB Kubernetes Atlas Operator.
        properties:
          spec:
            description: |-
              Specification of the group supporting the following versions:

              - v20231115

              At most one versioned spec can be specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
            properties:
              v20231115:
                description: The spec of the group resource for version v20231115.
                properties:
                  entry:
                    description: The entry fields of the group resource spec. These
                      fields can be set for creating and updating groups.
                    properties:
                      name:
                        description: Human-readable label that identifies the project
                          included in the MongoDB Cloud organization.
                        type: string
                      orgId:
                        description: Unique 24-hexadecimal digit string that identifies
                          the MongoDB Cloud organization to which the project belongs.
                        type: string
                      regionUsageRestrictions:
                        description: |-
                          Applies to Atlas for Government only.

                          In Commercial Atlas, this field will be rejected in requests and missing in responses.

                          This field sets restrictions on available regions in the project.

                          | Value                             | Available Regions |
                          |-----------------------------------|------------|
                          | `COMMERCIAL_FEDRAMP_REGIONS_ONLY` | Only allows deployments in FedRAMP Moderate regions.|
                          | `GOV_REGIONS_ONLY`                | Only allows deployments in GovCloud regions.|
                        type: string
                      tags:
                        description: List that contains key-value pairs between 1
                          to 255 characters in length for tagging and categorizing
                          the project.
                        items:
                          description: 'Key-value pair that tags and categorizes a
                            MongoDB Cloud organization, project, or cluster. For example,
                            `environment : production`.'
                          properties:
                            key:
                              description: 'Constant that defines the set of the tag.
                                For example, `environment` in the `environment : production`
                                tag.'
                              type: string
                            value:
                              description: 'Variable that belongs to the set of the
                                tag. For example, `production` in the `environment
                                : production` tag.'
                              type: string
                          required:
                          - key
                          - value
                          title: Resource Tag
                          type: object
                        type: array
                      withDefaultAlertsSettings:
                        description: Flag that indicates whether to create the project
                          with default alert settings.
                        type: boolean
                    required:
                    - name
                    - orgId
                    type: object
                  parameters:
                    description: The parameter fields of the group resource spec.
                      These fields are used when creating groups only.
                    properties:
                      projectOwnerId:
                        description: Unique 24-hexadecimal digit string that identifies
                          the MongoDB Cloud user to whom to grant the Project Owner
                          role on the specified project. If you set this parameter,
                          it overrides the default value of the oldest Organization
                          Owner.
                        type: string
                    type: object
                type: object
            type: object
          status:
            description: 'Most recently observed read-only status of the group for
              the specified resource version. This data may not be up to date and
              is populated by the system. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
            properties:
              conditions:
                description: Represents the latest available observations of a resource's
                  current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon.
                      type: integer
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - type
                  - status
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              v20231115:
                description: The last observed Atlas state of the group resource for
                  version v20231115.
                properties:
                  clusterCount:
                    description: Quantity of MongoDB Cloud clusters deployed in this
                      project.
                    type: integer
                  created:
                    description: Date and time when MongoDB Cloud created this project.
                      This parameter expresses its value in the ISO 8601 timestamp
                      format in UTC.
                    type: string
                  id:
                    description: Unique 24-hexadecimal digit string that identifies
                      the MongoDB Cloud project.
                    type: string
                required:
                - clusterCount
                - created
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: networkpermissionentrieses.atlas.generated.mongodb.com
spec:
  group: atlas.generated.mongodb.com
  names:
    categories:
    - atlas
    kind: NetworkPermissionEntries
    listKind: NetworkPermissionEntriesList
    plural: networkpermissionentrieses
    singular: networkpermissionentries
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: A networkpermissionentries, managed by the MongoDB Kubernetes
          Atlas Operator.
        properties:
          spec:
            description: |-
              Specification of the networkpermissionentries supporting the following versions:

              - v20250312

              At most one versioned spec can be specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
            properties:
              v20250312:
                description: The spec of the networkpermissionentries resource for
                  version v20250312.
                properties:
                  entry:
                    description: The entry fields of the networkpermissionentries
                      resource spec. These fields can be set for creating and updating
                      networkpermissionentrieses.
                    items:
                      properties:
                        awsSecurityGroup:
                          description: Unique string of the Amazon Web Services (AWS)
                            security group that you want to add to the project's IP
                            access list. Your IP access list entry can be one **awsSecurityGroup**,
                            one **cidrBlock**, or one **ipAddress**. You must configure
                            Virtual Private Connection (VPC) peering for your project
                            before you can add an AWS security group to an IP access
                            list. You cannot set AWS security groups as temporary
                            access list entries. Don't set this parameter if you set
                            **cidrBlock** or **ipAddress**.
                          type: string
                        cidrBlock:
                          description: Range of IP addresses in Classless Inter-Domain
                            Routing (CIDR) notation that you want to add to the project's
                            IP access list. Your IP access list entry can be one **awsSecurityGroup**,
                            one **cidrBlock**, or one **ipAddress**. Don't set this
                            parameter if you set **awsSecurityGroup** or **ipAddress**.
                          type: string
                        comment:
                          description: Remark that explains the purpose or scope of
                            this IP access list entry.
                          type: string
                        deleteAfterDate:
                          description: Date and time after which MongoDB Cloud deletes
                            the temporary access list entry. This parameter expresses
                            its value in the ISO 8601 timestamp format in UTC and
                            can include the time zone designation. The date must be
                            later than the current date but no later than one week
                            after you submit this request. The resource returns this
                            parameter if you specified an expiration date when creating
                            this IP access list entry.
                          type: string
                        ipAddress:
                          description: IP address that you want to add to the project's
                            IP access list. Your IP access list entry can be one **awsSecurityGroup**,
                            one **cidrBlock**, or one **ipAddress**. Don't set this
                            parameter if you set **awsSecurityGroup** or **cidrBlock**.
                          type: string
                      type: object
                    type: array
                  parameters:
                    description: The parameter fields of the networkpermissionentries
                      resource spec. These fields are used when creating networkpermissionentrieses
                      only.
                    properties:
                      groupId:
                        description: |-
                          Unique 24-hexadecimal digit string that identifies your project. Use the [/groups](#tag/Projects/operation/listProjects) endpoint to retrieve all projects to which the authenticated user has access.

                          **NOTE**: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.
                        type: string
                    type: object
                type: object
            type: object
          status:
            description: 'Most recently observed read-only status of the networkpermissionentries
              for the specified resource version. This data may not be up to date
              and is populated by the system. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
            properties:
              conditions:
                description: Represents the latest available observations of a resource's
                  current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon.
                      type: integer
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - type
                  - status
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              v20250312:
                description: The last observed Atlas state of the networkpermissionentries
                  resource for version v20250312.
                properties:
                  groupId:
                    description: Unique 24-hexadecimal digit string that identifies
                      the project that contains the IP access list to which you want
                      to add one or more entries.
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: clusters.atlas.generated.mongodb.com
spec:
  group: atlas.generated.mongodb.com
  names:
    categories:
    - atlas
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: A cluster, managed by the MongoDB Kubernetes Atlas Operator.
        properties:
          spec:
            description: |-
              Specification of the cluster supporting the following versions:

              - v20231115

              At most one versioned spec can be specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
            properties:
              v20231115:
                description: The spec of the cluster resource for version v20231115.
                properties:
                  entry:
                    description: The entry fields of the cluster resource spec. These
                      fields can be set for creating and updating clusters.
                    properties:
                      acceptDataRisksAndForceReplicaSetReconfig:
                        description: If reconfiguration is necessary to regain a primary
                          due to a regional outage, submit this field alongside your
                          topology reconfiguration to request a new regional outage
                          resistant topology. Forced reconfigurations during an outage
                          of the majority of electable nodes carry a risk of data
                          loss if replicated writes (even majority committed writes)
                          have not been replicated to the new primary node. MongoDB
                          Atlas docs contain more information. To proceed with an
                          operation which carries that risk, set **acceptDataRisksAndForceReplicaSetReconfig**
                          to the current date.
                        type: string
                      backupEnabled:
                        description: Flag that indicates whether the cluster can perform
                          backups. If set to `true`, the cluster can perform backups.
                          You must set this value to `true` for NVMe clusters. Backup
                          uses [Cloud Backups](https://docs.atlas.mongodb.com/backup/cloud-backup/overview/)
                          for dedicated clusters and [Shared Cluster Backups](https://docs.atlas.mongodb.com/backup/shared-tier/overview/)
                          for tenant clusters. If set to `false`, the cluster doesn't
                          use backups.
                        type: boolean
                      biConnector:
                        description: Settings needed to configure the MongoDB Connector
                          for Business Intelligence for this cluster.
                        properties:
                          enabled:
                            description: Flag that indicates whether MongoDB Connector
                              for Business Intelligence is enabled on the specified
                              cluster.
                            type: boolean
                          readPreference:
                            description: Data source node designated for the MongoDB
                              Connector for Business Intelligence on MongoDB Cloud.
                              The MongoDB Connector for Business Intelligence on MongoDB
                              Cloud reads data from the primary, secondary, or analytics
                              node based on your read preferences. Defaults to `ANALYTICS`
                              node, or `SECONDARY` if there are no `ANALYTICS` nodes.
                            type: string
                        title: MongoDB Connector for Business Intelligence Settings
                        type: object
                      clusterType:
                        description: Configuration of nodes that comprise the cluster.
                        type: string
                      diskSizeGB:
                        description: Storage capacity that the host's root volume
                          possesses expressed in gigabytes. Increase this number to
                          add capacity. MongoDB Cloud requires this parameter if you
                          set **replicationSpecs**. If you specify a disk size below
                          the minimum (10 GB), this parameter defaults to the minimum
                          disk size value. Storage charge calculations depend on whether
                          you choose the default value or a custom value.  The maximum
                          value for disk storage cannot exceed 50 times the maximum
                          RAM for the selected cluster. If you require more storage
                          space, consider upgrading your cluster to a higher tier.
                        type: number
                      diskWarmingMode:
                        description: Disk warming mode selection.
                        type: string
                      encryptionAtRestProvider:
                        description: 'Cloud service provider that manages your customer
                          keys to provide an additional layer of encryption at rest
                          for the cluster. To enable customer key management for encryption
                          at rest, the cluster **replicationSpecs[n].regionConfigs[m].{type}Specs.instanceSize**
                          setting must be `M10` or higher and `"backupEnabled" : false`
                          or omitted entirely.'
                        type: string
                      labels:
                        description: |-
                          Collection of key-value pairs between 1 to 255 characters in length that tag and categorize the cluster. The MongoDB Cloud console doesn't display your labels.

                          Cluster labels are deprecated and will be removed in a future release. We strongly recommend that you use [resource tags](https://dochub.mongodb.org/core/add-cluster-tag-atlas) instead.
                        items:
                          description: Human-readable labels applied to this MongoDB
                            Cloud component.
                          properties:
                            key:
                              description: Key applied to tag and categorize this
                                component.
                              type: string
                            value:
                              description: Value set to the Key applied to tag and
                                categorize this component.
                              type: string
                          title: Component Label
                          type: object
                        type: array
                      mongoDBMajorVersion:
                        description: Major MongoDB version of the cluster. MongoDB
                          Cloud deploys the cluster with the latest stable release
                          of the specified version.
                        type: string
                      name:
                        description: Human-readable label that identifies the advanced
                          cluster.
                        type: string
                      paused:
                        description: Flag that indicates whether the cluster is paused.
                        type: boolean
                      pitEnabled:
                        description: Flag that indicates whether the cluster uses
                          continuous cloud backups.
                        type: boolean
                      replicationSpecs:
                        description: List of settings that configure your cluster
                          regions. For Global Clusters, each object in the array represents
                          a zone where your clusters nodes deploy. For non-Global
                          sharded clusters and replica sets, this array has one object
                          representing where your clusters nodes deploy.
                        items:
                          description: Details that explain how MongoDB Cloud replicates
                            data on the specified MongoDB database.
                          properties:
                            numShards:
                              description: |-
                                Positive integer that specifies the number of shards to deploy in each specified zone. If you set this value to `1` and **clusterType** is `SHARDED`, MongoDB Cloud deploys a single-shard sharded cluster. Don't create a sharded cluster with a single shard for production environments. Single-shard sharded clusters don't provide the same benefits as multi-shard configurations.

                                 If you are upgrading a replica set to a sharded cluster, you cannot increase the number of shards in the same update request.  You should wait until after the cluster has completed upgrading to sharded and you have reconnected all application clients to the MongoDB router before adding additional shards. Otherwise, your data might become inconsistent once MongoDB Cloud begins distributing data across shards.
                              type: integer
                            regionConfigs:
                              description: |-
                                Hardware specifications for nodes set for a given region. Each **regionConfigs** object describes the region's priority in elections and the number and type of MongoDB nodes that MongoDB Cloud deploys to the region. Each **regionConfigs** object must have either an **analyticsSpecs** object, **electableSpecs** object, or **readOnlySpecs** object. Tenant clusters only require **electableSpecs. Dedicated** clusters can specify any of these specifications, but must have at least one **electableSpecs** object within a **replicationSpec**. Every hardware specification must use the same **instanceSize**.

                                **Example:**

                                If you set `"replicationSpecs[n].regionConfigs[m].analyticsSpecs.instanceSize" : "M30"`, set `"replicationSpecs[n].regionConfigs[m].electableSpecs.instanceSize" : `"M30"` if you have electable nodes and `"replicationSpecs[n].regionConfigs[m].readOnlySpecs.instanceSize" : `"M30"` if you have read-only nodes.
                              items:
                                description: Cloud service provider on which MongoDB
                                  Cloud provisions the hosts.
                                properties:
                                  analyticsAutoScaling:
                                    description: Options that determine how this cluster
                                      handles resource scaling.
                                    properties:
                                      compute:
                                        description: Options that determine how this
                                          cluster handles CPU scaling.
                                        properties:
                                          enabled:
                                            description: |-
                                              Flag that indicates whether someone enabled instance size auto-scaling.

                                              - Set to `true` to enable instance size auto-scaling. If enabled, you must specify a value for **replicationSpecs[n].regionConfigs[m].autoScaling.compute.maxInstanceSize**.
                                              - Set to `false` to disable instance size automatic scaling.
                                            type: boolean
                                          maxInstanceSize:
                                            description: 'Minimum instance size to
                                              which your cluster can automatically
                                              scale. MongoDB Cloud requires this parameter
                                              if `"replicationSpecs[n].regionConfigs[m].autoScaling.compute.scaleDownEnabled"
                                              : true`.'
                                            type: string
                                          minInstanceSize:
                                            description: 'Minimum instance size to
                                              which your cluster can automatically
                                              scale. MongoDB Cloud requires this parameter
                                              if `"replicationSpecs[n].regionConfigs[m].autoScaling.compute.scaleDownEnabled"
                                              : true`.'
                                            type: string
                                          scaleDownEnabled:
                                            description: 'Flag that indicates whether
                                              the instance size may scale down. MongoDB
                                              Cloud requires this parameter if `"replicationSpecs[n].regionConfigs[m].autoScaling.compute.enabled"
                                              : true`. If you enable this option,
                                              specify a value for **replicationSpecs[n].regionConfigs[m].autoScaling.compute.minInstanceSize**.'
                                            type: boolean
                                        title: Automatic Compute Scaling Settings
                                        type: object
                                      diskGB:
                                        description: Setting that enables disk auto-scaling.
                                        properties:
                                          enabled:
                                            description: Flag that indicates whether
                                              this cluster enables disk auto-scaling.
                                              The maximum memory allowed for the selected
                                              cluster tier and the oplog size can
                                              limit storage auto-scaling.
                                            type: boolean
                                        type: object
                                    title: Automatic Scaling Settings
                                    type: object
                                  analyticsSpecs:
                                    description: Hardware specifications for read-only
                                      nodes in the region. Read-only nodes can never
                                      become the primary member, but can enable local
                                      reads.If you don't specify this parameter, no
                                      read-only nodes are deployed to the region.
                                    properties:
                                      diskIOPS:
                                        description: |-
                                          Target throughput desired for storage attached to your AWS-provisioned cluster. Change this parameter only if you:

                                          - set `"replicationSpecs[n].regionConfigs[m].providerName" : "AWS"`.
                                          - set `"replicationSpecs[n].regionConfigs[m].electableSpecs.instanceSize" : "M30"` or greater not including `Mxx_NVME` tiers.

                                          The maximum input/output operations per second (IOPS) depend on the selected **.instanceSize** and **.diskSizeGB**.
                                          This parameter defaults to the cluster tier's standard IOPS value.
                                          Changing this value impacts cluster cost.
                                          MongoDB Cloud enforces minimum ratios of storage capacity to system memory for given cluster tiers. This keeps cluster performance consistent with large datasets.

                                          - Instance sizes `M10` to `M40` have a ratio of disk capacity to system memory of 60:1.
                                          - Instance sizes greater than `M40` have a ratio of 120:1.
                                        type: integer
                                      ebsVolumeType:
                                        description: "Type of storage you want to
                                          attach to your AWS-provisioned cluster.\n\n-
                                          `STANDARD` volume types can't exceed the
                                          default input/output operations per second
                                          (IOPS) rate for the selected volume size.
                                          \n\n- `PROVISIONED` volume types must fall
                                          within the allowable IOPS range for the
                                          selected volume size. You must set this
                                          value to (`PROVISIONED`) for NVMe clusters."
                                        type: string
                                      instanceSize:
                                        description: Hardware specification for the
                                          instance sizes in this region. Each instance
                                          size has a default storage and memory capacity.
                                          The instance size you select applies to
                                          all the data-bearing hosts in your instance
                                          size.
                                        title: GCP Instance Sizes
                                        type: string
                                      nodeCount:
                                        description: Number of nodes of the given
                                          type for MongoDB Cloud to deploy to the
                                          region.
                                        type: integer
                                    type: object
                                  autoScaling:
                                    description: Options that determine how this cluster
                                      handles resource scaling.
                                    properties:
                                      compute:
                                        description: Options that determine how this
                                          cluster handles CPU scaling.
                                        properties:
                                          enabled:
                                            description: |-
                                              Flag that indicates whether someone enabled instance size auto-scaling.

                                              - Set to `true` to enable instance size auto-scaling. If enabled, you must specify a value for **replicationSpecs[n].regionConfigs[m].autoScaling.compute.maxInstanceSize**.
                                              - Set to `false` to disable instance size automatic scaling.
                                            type: boolean
                                          maxInstanceSize:
                                            description: 'Minimum instance size to
                                              which your cluster can automatically
                                              scale. MongoDB Cloud requires this parameter
                                              if `"replicationSpecs[n].regionConfigs[m].autoScaling.compute.scaleDownEnabled"
                                              : true`.'
                                            type: string
                                          minInstanceSize:
                                            description: 'Minimum instance size to
                                              which your cluster can automatically
                                              scale. MongoDB Cloud requires this parameter
                                              if `"replicationSpecs[n].regionConfigs[m].autoScaling.compute.scaleDownEnabled"
                                              : true`.'
                                            type: string
                                          scaleDownEnabled:
                                            description: 'Flag that indicates whether
                                              the instance size may scale down. MongoDB
                                              Cloud requires this parameter if `"replicationSpecs[n].regionConfigs[m].autoScaling.compute.enabled"
                                              : true`. If you enable this option,
                                              specify a value for **replicationSpecs[n].regionConfigs[m].autoScaling.compute.minInstanceSize**.'
                                            type: boolean
                                        title: Automatic Compute Scaling Settings
                                        type: object
                                      diskGB:
                                        description: Setting that enables disk auto-scaling.
                                        properties:
                                          enabled:
                                            description: Flag that indicates whether
                                              this cluster enables disk auto-scaling.
                                              The maximum memory allowed for the selected
                                              cluster tier and the oplog size can
                                              limit storage auto-scaling.
                                            type: boolean
                                        type: object
                                    title: Automatic Scaling Settings
                                    type: object
                                  backingProviderName:
                                    description: Cloud service provider on which MongoDB
                                      Cloud provisioned the multi-tenant cluster.
                                      The resource returns this parameter when **providerName**
                                      is `TENANT` and **electableSpecs.instanceSize**
                                      is `M0`, `M2` or `M5`.
                                    type: string
                                  electableSpecs:
                                    description: Hardware specifications for all electable
                                      nodes deployed in the region. Electable nodes
                                      can become the primary and can enable local
                                      reads. If you don't specify this option, MongoDB
                                      Cloud deploys no electable nodes to the region.
                                    properties:
                                      diskIOPS:
                                        description: |-
                                          Target throughput desired for storage attached to your AWS-provisioned cluster. Change this parameter only if you:

                                          - set `"replicationSpecs[n].regionConfigs[m].providerName" : "AWS"`.
                                          - set `"replicationSpecs[n].regionConfigs[m].electableSpecs.instanceSize" : "M30"` or greater not including `Mxx_NVME` tiers.

                                          The maximum input/output operations per second (IOPS) depend on the selected **.instanceSize** and **.diskSizeGB**.
                                          This parameter defaults to the cluster tier's standard IOPS value.
                                          Changing this value impacts cluster cost.
                                          MongoDB Cloud enforces minimum ratios of storage capacity to system memory for given cluster tiers. This keeps cluster performance consistent with large datasets.

                                          - Instance sizes `M10` to `M40` have a ratio of disk capacity to system memory of 60:1.
                                          - Instance sizes greater than `M40` have a ratio of 120:1.
                                        type: integer
                                      ebsVolumeType:
                                        description: "Type of storage you want to
                                          attach to your AWS-provisioned cluster.\n\n-
                                          `STANDARD` volume types can't exceed the
                                          default input/output operations per second
                                          (IOPS) rate for the selected volume size.
                                          \n\n- `PROVISIONED` volume types must fall
                                          within the allowable IOPS range for the
                                          selected volume size. You must set this
                                          value to (`PROVISIONED`) for NVMe clusters."
                                        type: string
                                      instanceSize:
                                        description: Hardware specification for the
                                          instance sizes in this region. Each instance
                                          size has a default storage and memory capacity.
                                          The instance size you select applies to
                                          all the data-bearing hosts in your instance
                                          size.
                                        title: Tenant Instance Sizes
                                        type: string
                                      nodeCount:
                                        description: Number of nodes of the given
                                          type for MongoDB Cloud to deploy to the
                                          region.
                                        type: integer
                                    type: object
                                  priority:
                                    description: |-
                                      Precedence is given to this region when a primary election occurs. If your **regionConfigs** has only **readOnlySpecs**, **analyticsSpecs**, or both, set this value to `0`. If you have multiple **regionConfigs** objects (your cluster is multi-region or multi-cloud), they must have priorities in descending order. The highest priority is `7`.

                                      **Example:** If you have three regions, their priorities would be `7`, `6`, and `5` respectively. If you added two more regions for supporting electable nodes, the priorities of those regions would be `4` and `3` respectively.
                                    type: integer
                                  providerName:
                                    description: Cloud service provider on which MongoDB
                                      Cloud provisions the hosts. Set dedicated clusters
                                      to `AWS`, `GCP`, `AZURE` or `TENANT`.
                                    type: string
                                  readOnlySpecs:
                                    description: Hardware specifications for read-only
                                      nodes in the region. Read-only nodes can never
                                      become the primary member, but can enable local
                                      reads.If you don't specify this parameter, no
                                      read-only nodes are deployed to the region.
                                    properties:
                                      diskIOPS:
                                        description: |-
                                          Target throughput desired for storage attached to your AWS-provisioned cluster. Change this parameter only if you:

                                          - set `"replicationSpecs[n].regionConfigs[m].providerName" : "AWS"`.
                                          - set `"replicationSpecs[n].regionConfigs[m].electableSpecs.instanceSize" : "M30"` or greater not including `Mxx_NVME` tiers.

                                          The maximum input/output operations per second (IOPS) depend on the selected **.instanceSize** and **.diskSizeGB**.
                                          This parameter defaults to the cluster tier's standard IOPS value.
                                          Changing this value impacts cluster cost.
                                          MongoDB Cloud enforces minimum ratios of storage capacity to system memory for given cluster tiers. This keeps cluster performance consistent with large datasets.

                                          - Instance sizes `M10` to `M40` have a ratio of disk capacity to system memory of 60:1.
                                          - Instance sizes greater than `M40` have a ratio of 120:1.
                                        type: integer
                                      ebsVolumeType:
                                        description: "Type of storage you want to
                                          attach to your AWS-provisioned cluster.\n\n-
                                          `STANDARD` volume types can't exceed the
                                          default input/output operations per second
                                          (IOPS) rate for the selected volume size.
                                          \n\n- `PROVISIONED` volume types must fall
                                          within the allowable IOPS range for the
                                          selected volume size. You must set this
                                          value to (`PROVISIONED`) for NVMe clusters."
                                        type: string
                                      instanceSize:
                                        description: Hardware specification for the
                                          instance sizes in this region. Each instance
                                          size has a default storage and memory capacity.
                                          The instance size you select applies to
                                          all the data-bearing hosts in your instance
                                          size.
                                        title: GCP Instance Sizes
                                        type: string
                                      nodeCount:
                                        description: Number of nodes of the given
                                          type for MongoDB Cloud to deploy to the
                                          region.
                                        type: integer
                                    type: object
                                  regionName:
                                    description: Physical location of your MongoDB
                                      cluster nodes. The region you choose can affect
                                      network latency for clients accessing your databases.
                                      The region name is only returned in the response
                                      for single-region clusters. When MongoDB Cloud
                                      deploys a dedicated cluster, it checks if a
                                      VPC or VPC connection exists for that provider
                                      and region. If not, MongoDB Cloud creates them
                                      as part of the deployment. It assigns the VPC
                                      a Classless Inter-Domain Routing (CIDR) block.
                                      To limit a new VPC peering connection to one
                                      Classless Inter-Domain Routing (CIDR) block
                                      and region, create the connection first. Deploy
                                      the cluster after the connection starts. GCP
                                      Clusters and Multi-region clusters require one
                                      VPC peering connection for each region. MongoDB
                                      nodes can use only the peering connection that
                                      resides in the same region as the nodes to communicate
                                      with the peered VPC.
                                    type: string
                                title: Cloud Service Provider Settings for Multi-Cloud
                                  Clusters
                                type: object
                              type: array
                            zoneName:
                              description: 'Human-readable label that identifies the
                                zone in a Global Cluster. Provide this value only
                                if `"clusterType" : "GEOSHARDED"`.'
                              type: string
                          title: Replication Specifications
                          type: object
                        type: array
                      rootCertType:
                        description: Root Certificate Authority that MongoDB Cloud
                          cluster uses. MongoDB Cloud supports Internet Security Research
                          Group.
                        type: string
                      tags:
                        description: List that contains key-value pairs between 1
                          to 255 characters in length for tagging and categorizing
                          the cluster.
                        items:
                          description: 'Key-value pair that tags and categorizes a
                            MongoDB Cloud organization, project, or cluster. For example,
                            `environment : production`.'
                          properties:
                            key:
                              description: 'Constant that defines the set of the tag.
                                For example, `environment` in the `environment : production`
                                tag.'
                              type: string
                            value:
                              description: 'Variable that belongs to the set of the
                                tag. For example, `production` in the `environment
                                : production` tag.'
                              type: string
                          required:
                          - key
                          - value
                          title: Resource Tag
                          type: object
                        type: array
                      terminationProtectionEnabled:
                        description: Flag that indicates whether termination protection
                          is enabled on the cluster. If set to `true`, MongoDB Cloud
                          won't delete the cluster. If set to `false`, MongoDB Cloud
                          will delete the cluster.
                        type: boolean
                      versionReleaseSystem:
                        description: Method by which the cluster maintains the MongoDB
                          versions. If value is `CONTINUOUS`, you must not specify
                          **mongoDBMajorVersion**.
                        type: string
                    type: object
                  parameters:
                    description: The parameter fields of the cluster resource spec.
                      These fields are used when creating clusters only.
                    properties:
                      groupId:
                        description: |-
                          Unique 24-hexadecimal digit string that identifies your project. Use the [/groups](#tag/Projects/operation/listProjects) endpoint to retrieve all projects to which the authenticated user has access.

                          **NOTE**: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.
                        type: string
                    type: object
                type: object
            type: object
          status:
            description: 'Most recently observed read-only status of the cluster for
              the specified resource version. This data may not be up to date and
              is populated by the system. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
            properties:
              conditions:
                description: Represents the latest available observations of a resource's
                  current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon.
                      type: integer
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - type
                  - status
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              v20231115:
                description: The last observed Atlas state of the cluster resource
                  for version v20231115.
                properties:
                  connectionStrings:
                    description: Collection of Uniform Resource Locators that point
                      to the MongoDB database.
                    properties:
                      awsPrivateLink:
                        additionalProperties:
                          description: Private endpoint-aware connection strings that
                            use AWS-hosted clusters with Amazon Web Services (AWS)
                            PrivateLink. Each key identifies an Amazon Web Services
                            (AWS) interface endpoint. Each value identifies the related
                            `mongodb://` connection string that you use to connect
                            to MongoDB Cloud through the interface endpoint that the
                            key names.
                          type: string
                        description: Private endpoint-aware connection strings that
                          use AWS-hosted clusters with Amazon Web Services (AWS) PrivateLink.
                          Each key identifies an Amazon Web Services (AWS) interface
                          endpoint. Each value identifies the related `mongodb://`
                          connection string that you use to connect to MongoDB Cloud
                          through the interface endpoint that the key names.
                        type: object
                      awsPrivateLinkSrv:
                        additionalProperties:
                          description: Private endpoint-aware connection strings that
                            use AWS-hosted clusters with Amazon Web Services (AWS)
                            PrivateLink. Each key identifies an Amazon Web Services
                            (AWS) interface endpoint. Each value identifies the related
                            `mongodb://` connection string that you use to connect
                            to Atlas through the interface endpoint that the key names.
                          type: string
                        description: Private endpoint-aware connection strings that
                          use AWS-hosted clusters with Amazon Web Services (AWS) PrivateLink.
                          Each key identifies an Amazon Web Services (AWS) interface
                          endpoint. Each value identifies the related `mongodb://`
                          connection string that you use to connect to Atlas through
                          the interface endpoint that the key names.
                        type: object
                      private:
                        description: Network peering connection strings for each interface
                          Virtual Private Cloud (VPC) endpoint that you configured
                          to connect to this cluster. This connection string uses
                          the `mongodb+srv://` protocol. The resource returns this
                          parameter once someone creates a network peering connection
                          to this cluster. This protocol tells the application to
                          look up the host seed list in the Domain Name System (DNS).
                          This list synchronizes with the nodes in a cluster. If the
                          connection string uses this Uniform Resource Identifier
                          (URI) format, you don't need to append the seed list or
                          change the URI if the nodes change. Use this URI format
                          if your driver supports it. If it doesn't, use connectionStrings.private.
                          For Amazon Web Services (AWS) clusters, this resource returns
                          this parameter only if you enable custom DNS.
                        type: string
                      privateEndpoint:
                        description: List of private endpoint-aware connection strings
                          that you can use to connect to this cluster through a private
                          endpoint. This parameter returns only if you deployed a
                          private endpoint to all regions to which you deployed this
                          clusters' nodes.
                        items:
                          description: Private endpoint-aware connection string that
                            you can use to connect to this cluster through a private
                            endpoint.
                          properties:
                            connectionString:
                              description: Private endpoint-aware connection string
                                that uses the `mongodb://` protocol to connect to
                                MongoDB Cloud through a private endpoint.
                              type: string
                            endpoints:
                              description: List that contains the private endpoints
                                through which you connect to MongoDB Cloud when you
                                use **connectionStrings.privateEndpoint[n].connectionString**
                                or **connectionStrings.privateEndpoint[n].srvConnectionString**.
                              items:
                                description: Details of a private endpoint deployed
                                  for this cluster.
                                properties:
                                  endpointId:
                                    description: Unique string that the cloud provider
                                      uses to identify the private endpoint.
                                    type: string
                                  providerName:
                                    description: Cloud provider in which MongoDB Cloud
                                      deploys the private endpoint.
                                    type: string
                                  region:
                                    description: Region where the private endpoint
                                      is deployed.
                                    type: string
                                title: Cluster Private Endpoint Connection Strings
                                  Endpoint
                                type: object
                              type: array
                            srvConnectionString:
                              description: Private endpoint-aware connection string
                                that uses the `mongodb+srv://` protocol to connect
                                to MongoDB Cloud through a private endpoint. The `mongodb+srv`
                                protocol tells the driver to look up the seed list
                                of hosts in the Domain Name System (DNS). This list
                                synchronizes with the nodes in a cluster. If the connection
                                string uses this Uniform Resource Identifier (URI)
                                format, you don't need to append the seed list or
                                change the Uniform Resource Identifier (URI) if the
                                nodes change. Use this Uniform Resource Identifier
                                (URI) format if your application supports it. If it
                                doesn't, use connectionStrings.privateEndpoint[n].connectionString.
                              type: string
                            srvShardOptimizedConnectionString:
                              description: Private endpoint-aware connection string
                                optimized for sharded clusters that uses the `mongodb+srv://`
                                protocol to connect to MongoDB Cloud through a private
                                endpoint. If the connection string uses this Uniform
                                Resource Identifier (URI) format, you don't need to
                                change the Uniform Resource Identifier (URI) if the
                                nodes change. Use this Uniform Resource Identifier
                                (URI) format if your application and Atlas cluster
                                supports it. If it doesn't, use and consult the documentation
                                for connectionStrings.privateEndpoint[n].srvConnectionString.
                              type: string
                            type:
                              description: MongoDB process type to which your application
                                connects. Use `MONGOD` for replica sets and `MONGOS`
                                for sharded clusters.
                              type: string
                          title: Cluster Private Endpoint Connection String
                          type: object
                        type: array
                      privateSrv:
                        description: Network peering connection strings for each interface
                          Virtual Private Cloud (VPC) endpoint that you configured
                          to connect to this cluster. This connection string uses
                          the `mongodb+srv://` protocol. The resource returns this
                          parameter when someone creates a network peering connection
                          to this cluster. This protocol tells the application to
                          look up the host seed list in the Domain Name System (DNS).
                          This list synchronizes with the nodes in a cluster. If the
                          connection string uses this Uniform Resource Identifier
                          (URI) format, you don't need to append the seed list or
                          change the Uniform Resource Identifier (URI) if the nodes
                          change. Use this Uniform Resource Identifier (URI) format
                          if your driver supports it. If it doesn't, use `connectionStrings.private`.
                          For Amazon Web Services (AWS) clusters, this parameter returns
                          only if you [enable custom DNS](https://docs.atlas.mongodb.com/reference/api/aws-custom-dns-update/).
                        type: string
                      standard:
                        description: Public connection string that you can use to
                          connect to this cluster. This connection string uses the
                          `mongodb://` protocol.
                        type: string
                      standardSrv:
                        description: Public connection string that you can use to
                          connect to this cluster. This connection string uses the
                          `mongodb+srv://` protocol.
                        type: string
                    title: Cluster Connection Strings
                    type: object
                  createDate:
                    description: Date and time when MongoDB Cloud created this cluster.
                      This parameter expresses its value in ISO 8601 format in UTC.
                    type: string
                  groupId:
                    description: Unique 24-hexadecimal character string that identifies
                      the project.
                    type: string
                  id:
                    description: Unique 24-hexadecimal digit string that identifies
                      the replication object for a zone in a Global Cluster. If you
                      include existing zones in the request, you must specify this
                      parameter. If you add a new zone to an existing Global Cluster,
                      you may specify this parameter. The request deletes any existing
                      zones in a Global Cluster that you exclude from the request.
                    type: string
                  mongoDBVersion:
                    description: Version of MongoDB that the cluster runs.
                    type: string
                  replicationSpecs:
                    description: List of settings that configure your cluster regions.
                      For Global Clusters, each object in the array represents a zone
                      where your clusters nodes deploy. For non-Global sharded clusters
                      and replica sets, this array has one object representing where
                      your clusters nodes deploy.
                    items:
                      description: Details that explain how MongoDB Cloud replicates
                        data on the specified MongoDB database.
                      properties:
                        id:
                          description: Unique 24-hexadecimal digit string that identifies
                            the replication object for a zone in a Multi-Cloud Cluster.
                            If you include existing zones in the request, you must
                            specify this parameter. If you add a new zone to an existing
                            Multi-Cloud Cluster, you may specify this parameter. The
                            request deletes any existing zones in the Multi-Cloud
                            Cluster that you exclude from the request.
                          type: string
                      title: Replication Specifications
                      type: object
                    type: array
                  stateName:
                    description: Human-readable label that indicates the current operating
                      condition of this cluster.
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: searchindexes.atlas.generated.mongodb.com
spec:
  group: atlas.generated.mongodb.com
  names:
    categories:
    - atlas
    kind: SearchIndex
    listKind: SearchIndexList
    plural: searchindexes
    singular: searchindex
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: A searchindex, managed by the MongoDB Kubernetes Atlas Operator.
        properties:
          spec:
            description: |-
              Specification of the searchindex supporting the following versions:

              - v20231115

              At most one versioned spec can be specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
            properties:
              v20231115:
                description: The spec of the searchindex resource for version v20231115.
                properties:
                  entry:
                    description: The entry fields of the searchindex resource spec.
                      These fields can be set for creating and updating searchindexes.
                    properties:
                      analyzer:
                        description: |-
                          Specific pre-defined method chosen to convert database field text into searchable words. This conversion reduces the text of fields into the smallest units of text. These units are called a **term** or **token**. This process, known as tokenization, involves a variety of changes made to the text in fields:

                          - extracting words
                          - removing punctuation
                          - removing accents
                          - changing to lowercase
                          - removing common words
                          - reducing words to their root form (stemming)
                          - changing words to their base form (lemmatization)
                           MongoDB Cloud uses the selected process to build the Atlas Search index.
                        type: string
                      analyzers:
                        description: List of user-defined methods to convert database
                          field text into searchable words.
                        items:
                          description: Settings that describe one Atlas Search custom
                            analyzer.
                          properties:
                            charFilters:
                              description: Filters that examine text one character
                                at a time and perform filtering operations.
                              items:
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              type: array
                            name:
                              description: |-
                                Human-readable name that identifies the custom analyzer. Names must be unique within an index, and must not start with any of the following strings:
                                - `lucene.`
                                - `builtin.`
                                - `mongodb.`
                              type: string
                            tokenFilters:
                              description: |-
                                Filter that performs operations such as:

                                - Stemming, which reduces related words, such as "talking", "talked", and "talks" to their root word "talk".

                                - Redaction, the removal of sensitive information from public documents.
                              items:
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              type: array
                            tokenizer:
                              description: Tokenizer that you want to use to create
                                tokens. Tokens determine how Atlas Search splits up
                                text into discrete chunks for indexing.
                              properties:
                                group:
                                  description: Index of the character group within
                                    the matching expression to extract into tokens.
                                    Use `0` to extract all character groups.
                                  type: integer
                                maxGram:
                                  description: Characters to include in the longest
                                    token that Atlas Search creates.
                                  type: integer
                                maxTokenLength:
                                  description: Maximum number of characters in a single
                                    token. Tokens greater than this length are split
                                    at this length into multiple tokens.
                                  type: integer
                                minGram:
                                  description: Characters to include in the shortest
                                    token that Atlas Search creates.
                                  type: integer
                                pattern:
                                  description: Regular expression to match against.
                                  type: string
                                type:
                                  description: Human-readable label that identifies
                                    this tokenizer type.
                                  type: string
                              type: object
                          required:
                          - name
                          - tokenizer
                          title: analyzers
                          type: object
                        type: array
                      collectionName:
                        description: Human-readable label that identifies the collection
                          that contains one or more Atlas Search indexes.
                        type: string
                      database:
                        description: Human-readable label that identifies the database
                          that contains the collection with one or more Atlas Search
                          indexes.
                        type: string
                      fields:
                        description: Settings that configure the fields, one per object,
                          to index. You must define at least one "vector" type field.
                          You can optionally define "filter" type fields also.
                        items:
                          additionalProperties:
                            description: Fields to index for vector search.
                            title: Field
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          description: Fields to index for vector search.
                          title: Field
                          type: object
                        type: array
                      mappings:
                        description: Index specifications for the collection's fields.
                        properties:
                          dynamic:
                            description: Flag that indicates whether the index uses
                              dynamic or static mappings. Required if **mappings.fields**
                              is omitted.
                            type: boolean
                          fields:
                            additionalProperties:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            description: One or more field specifications for the
                              Atlas Search index. Required if **mappings.dynamic**
                              is omitted or set to **false**.
                            type: object
                        title: mappings
                        type: object
                      name:
                        description: Human-readable label that identifies this index.
                          Within each namespace, names of all indexes in the namespace
                          must be unique.
                        type: string
                      searchAnalyzer:
                        description: Method applied to identify words when searching
                          this index.
                        type: string
                      storedSource:
                        description: Flag that indicates whether to store all fields
                          (true) on Atlas Search. By default, Atlas doesn't store
                          (false) the fields on Atlas Search.  Alternatively, you
                          can specify an object that only contains the list of fields
                          to store (include) or not store (exclude) on Atlas Search.
                          To learn more, see documentation.
                        type: object
                      synonyms:
                        description: Rule sets that map words to their synonyms in
                          this index.
                        items:
                          description: Synonyms used for this full text index.
                          properties:
                            analyzer:
                              description: Specific pre-defined method chosen to apply
                                to the synonyms to be searched.
                              type: string
                            name:
                              description: Human-readable label that identifies the
                                synonym definition. Each **synonym.name** must be
                                unique within the same index definition.
                              type: string
                            source:
                              description: Data set that stores the mapping one or
                                more words map to one or more synonyms of those words.
                              properties:
                                collection:
                                  description: Human-readable label that identifies
                                    the MongoDB collection that stores words and their
                                    applicable synonyms.
                                  type: string
                              required:
                              - collection
                              type: object
                          required:
                          - analyzer
                          - name
                          - source
                          title: Synonym Mapping Definition
                          type: object
                        type: array
                      type:
                        description: Type of the index. Default type is search.
                        type: string
                    required:
                    - collectionName
                    - database
                    - name
                    type: object
                  parameters:
                    description: The parameter fields of the searchindex resource
                      spec. These fields are used when creating searchindexes only.
                    properties:
                      clusterName:
                        description: Name of the cluster that contains the collection
                          on which to create an Atlas Search index.
                        type: string
                      groupId:
                        description: |-
                          Unique 24-hexadecimal digit string that identifies your project. Use the [/groups](#tag/Projects/operation/listProjects) endpoint to retrieve all projects to which the authenticated user has access.

                          **NOTE**: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.
                        type: string
                    type: object
                type: object
            type: object
          status:
            description: 'Most recently observed read-only status of the searchindex
              for the specified resource version. This data may not be up to date
              and is populated by the system. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
            properties:
              conditions:
                description: Represents the latest available observations of a resource's
                  current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon.
                      type: integer
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - type
                  - status
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              v20231115:
                description: The last observed Atlas state of the searchindex resource
                  for version v20231115.
                properties:
                  indexID:
                    description: Unique 24-hexadecimal digit string that identifies
                      this Atlas Search index.
                    type: string
                  status:
                    description: |
                      Condition of the search index when you made this request.

                      | Status | Index Condition |
                       |---|---|
                       | IN_PROGRESS | Atlas is building or re-building the index after an edit. |
                       | STEADY | You can use this search index. |
                       | FAILED | Atlas could not build the index. |
                       | MIGRATING | Atlas is upgrading the underlying cluster tier and migrating indexes. |
                       | PAUSED | The cluster is paused. |
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: usercustomdbroles.atlas.generated.mongodb.com
spec:
  group: atlas.generated.mongodb.com
  names:
    categories:
    - atlas
    kind: UserCustomDBRole
    listKind: UserCustomDBRoleList
    plural: usercustomdbroles
    singular: usercustomdbrole
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: A usercustomdbrole, managed by the MongoDB Kubernetes Atlas Operator.
        properties:
          spec:
            description: |-
              Specification of the usercustomdbrole supporting the following versions:

              - v20231115

              At most one versioned spec can be specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
            properties:
              v20231115:
                description: The spec of the usercustomdbrole resource for version
                  v20231115.
                properties:
                  entry:
                    description: The entry fields of the usercustomdbrole resource
                      spec. These fields can be set for creating and updating usercustomdbroles.
                    properties:
                      actions:
                        description: List of the individual privilege actions that
                          the role grants.
                        items:
                          description: Privilege action that the role grants.
                          properties:
                            action:
                              description: Human-readable label that identifies the
                                privilege action.
                              type: string
                            resources:
                              description: List of resources on which you grant the
                                action.
                              items:
                                description: Namespace to which this database user
                                  has access.
                                properties:
                                  cluster:
                                    description: Flag that indicates whether to grant
                                      the action on the cluster resource. If `true`,
                                      MongoDB Cloud ignores the **actions.resources.collection**
                                      and **actions.resources.db** parameters.
                                    type: boolean
                                  collection:
                                    description: 'Human-readable label that identifies
                                      the collection on which you grant the action
                                      to one MongoDB user. If you don''t set this
                                      parameter, you grant the action to all collections
                                      in the database specified in the **actions.resources.db**
                                      parameter. If you set `"actions.resources.cluster"
                                      : true`, MongoDB Cloud ignores this parameter.'
                                    type: string
                                  db:
                                    description: 'Human-readable label that identifies
                                      the database on which you grant the action to
                                      one MongoDB user. If you set `"actions.resources.cluster"
                                      : true`, MongoDB Cloud ignores this parameter.'
                                    type: string
                                required:
                                - cluster
                                - collection
                                - db
                                title: Permitted Namespace
                                type: object
                              type: array
                          required:
                          - action
                          title: Database Privilege Action
                          type: object
                        type: array
                      inheritedRoles:
                        description: List of the built-in roles that this custom role
                          inherits.
                        items:
                          description: Role inherited from another context for this
                            database user.
                          properties:
                            db:
                              description: Human-readable label that identifies the
                                database on which someone grants the action to one
                                MongoDB user.
                              type: string
                            role:
                              description: Human-readable label that identifies the
                                role inherited. Set this value to `admin` for every
                                role except `read` or `readWrite`.
                              type: string
                          required:
                          - db
                          - role
                          title: Inherited Role
                          type: object
                        type: array
                      roleName:
                        description: Human-readable label that identifies the role
                          for the request. This name must be unique for this custom
                          role in this project.
                        type: string
                    required:
                    - roleName
                    type: object
                  parameters:
                    description: The parameter fields of the usercustomdbrole resource
                      spec. These fields are used when creating usercustomdbroles
                      only.
                    properties:
                      groupId:
                        description: |-
                          Unique 24-hexadecimal digit string that identifies your project. Use the [/groups](#tag/Projects/operation/listProjects) endpoint to retrieve all projects to which the authenticated user has access.

                          **NOTE**: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.
                        type: string
                    type: object
                type: object
            type: object
          status:
            description: 'Most recently observed read-only status of the usercustomdbrole
              for the specified resource version. This data may not be up to date
              and is populated by the system. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
            properties:
              conditions:
                description: Represents the latest available observations of a resource's
                  current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon.
                      type: integer
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - type
                  - status
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: flexclusters.atlas.generated.mongodb.com
spec:
  group: atlas.generated.mongodb.com
  names:
    categories:
    - atlas
    kind: FlexCluster
    listKind: FlexClusterList
    plural: flexclusters
    singular: flexcluster
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: A flexcluster, managed by the MongoDB Kubernetes Atlas Operator.
        properties:
          spec:
            description: |-
              Specification of the flexcluster supporting the following versions:

              - v20241113

              At most one versioned spec can be specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
            properties:
              v20241113:
                description: The spec of the flexcluster resource for version v20241113.
                properties:
                  entry:
                    description: The entry fields of the flexcluster resource spec.
                      These fields can be set for creating and updating flexclusters.
                    properties:
                      name:
                        description: Human-readable label that identifies the instance.
                        type: string
                      providerSettings:
                        description: Group of cloud provider settings that configure
                          the provisioned MongoDB flex cluster.
                        properties:
                          backingProviderName:
                            description: Cloud service provider on which MongoDB Cloud
                              provisioned the flex cluster.
                            type: string
                          regionName:
                            description: Human-readable label that identifies the
                              geographic location of your MongoDB flex cluster. The
                              region you choose can affect network latency for clients
                              accessing your databases. For a complete list of region
                              names, see [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/#std-label-amazon-aws),
                              [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/),
                              and [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
                            type: string
                        required:
                        - backingProviderName
                        - regionName
                        title: Cloud Service Provider Settings for a Flex Cluster
                        type: object
                      tags:
                        description: List that contains key-value pairs between 1
                          to 255 characters in length for tagging and categorizing
                          the instance.
                        items:
                          description: 'Key-value pair that tags and categorizes a
                            MongoDB Cloud organization, project, or cluster. For example,
                            `environment : production`.'
                          properties:
                            key:
                              description: 'Constant that defines the set of the tag.
                                For example, `environment` in the `environment : production`
                                tag.'
                              type: string
                            value:
                              description: 'Variable that belongs to the set of the
                                tag. For example, `production` in the `environment
                                : production` tag.'
                              type: string
                          required:
                          - key
                          - value
                          title: Resource Tag
                          type: object
                        type: array
                      terminationProtectionEnabled:
                        description: Flag that indicates whether termination protection
                          is enabled on the cluster. If set to `true`, MongoDB Cloud
                          won't delete the cluster. If set to `false`, MongoDB Cloud
                          will delete the cluster.
                        type: boolean
                    required:
                    - name
                    - providerSettings
                    title: Flex Cluster Description Create
                    type: object
                  parameters:
                    description: The parameter fields of the flexcluster resource
                      spec. These fields are used when creating flexclusters only.
                    properties:
                      groupId:
                        description: |-
                          Unique 24-hexadecimal digit string that identifies your project. Use the [/groups](#tag/Projects/operation/listProjects) endpoint to retrieve all projects to which the authenticated user has access.

                          **NOTE**: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.
                        type: string
                    type: object
                type: object
            type: object
          status:
            description: 'Most recently observed read-only status of the flexcluster
              for the specified resource version. This data may not be up to date
              and is populated by the system. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
            properties:
              conditions:
                description: Represents the latest available observations of a resource's
                  current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon.
                      type: integer
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - type
                  - status
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              v20241113:
                description: The last observed Atlas state of the flexcluster resource
                  for version v20241113.
                properties:
                  backupSettings:
                    description: Flex backup configuration
                    properties:
                      enabled:
                        description: Flag that indicates whether backups are performed
                          for this flex cluster. Backup uses flex cluster backups.
                        type: boolean
                    title: Flex Backup Configuration
                    type: object
                  clusterType:
                    description: Flex cluster topology.
                    type: string
                  connectionStrings:
                    description: Collection of Uniform Resource Locators that point
                      to the MongoDB database.
                    properties:
                      standard:
                        description: Public connection string that you can use to
                          connect to this cluster. This connection string uses the
                          mongodb:// protocol.
                        type: string
                      standardSrv:
                        description: Public connection string that you can use to
                          connect to this flex cluster. This connection string uses
                          the `mongodb+srv://` protocol.
                        type: string
                    title: Flex Cluster Connection Strings
                    type: object
                  createDate:
                    description: Date and time when MongoDB Cloud created this instance.
                      This parameter expresses its value in ISO 8601 format in UTC.
                    type: string
                  groupId:
                    description: Unique 24-hexadecimal character string that identifies
                      the project.
                    type: string
                  id:
                    description: Unique 24-hexadecimal digit string that identifies
                      the instance.
                    type: string
                  mongoDBVersion:
                    description: Version of MongoDB that the instance runs.
                    type: string
                  name:
                    description: Human-readable label that identifies the instance.
                    type: string
                  providerSettings:
                    description: Group of cloud provider settings that configure the
                      provisioned MongoDB flex cluster.
                    properties:
                      backingProviderName:
                        description: Cloud service provider on which MongoDB Cloud
                          provisioned the flex cluster.
                        type: string
                      diskSizeGB:
                        description: Storage capacity available to the flex cluster
                          expressed in gigabytes.
                        type: number
                      providerName:
                        description: Human-readable label that identifies the provider
                          type.
                        type: string
                      regionName:
                        description: Human-readable label that identifies the geographic
                          location of your MongoDB flex cluster. The region you choose
                          can affect network latency for clients accessing your databases.
                          For a complete list of region names, see [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/#std-label-amazon-aws),
                          [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/),
                          and [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
                        type: string
                    title: Cloud Service Provider Settings for a Flex Cluster
                    type: object
                  stateName:
                    description: Human-readable label that indicates the current operating
                      condition of this instance.
                    type: string
                  versionReleaseSystem:
                    description: Method by which the cluster maintains the MongoDB
                      versions.
                    type: string
                required:
                - providerSettings
                title: Flex Cluster Description
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: groupalertsconfigs.atlas.generated.mongodb.com
spec:
  group: atlas.generated.mongodb.com
  names:
    categories:
    - atlas
    kind: GroupAlertsConfig
    listKind: GroupAlertsConfigList
    plural: groupalertsconfigs
    singular: groupalertsconfig
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: A groupalertsconfig, managed by the MongoDB Kubernetes Atlas
          Operator.
        properties:
          spec:
            description: |-
              Specification of the groupalertsconfig supporting the following versions:

              - v20241113

              At most one versioned spec can be specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
            properties:
              v20241113:
                description: The spec of the groupalertsconfig resource for version
                  v20241113.
                properties:
                  entry:
                    description: The entry fields of the groupalertsconfig resource
                      spec. These fields can be set for creating and updating groupalertsconfigs.
                    properties:
                      enabled:
                        description: Flag that indicates whether someone enabled this
                          alert configuration for the specified project.
                        type: boolean
                      eventTypeName:
                        description: Event type that triggers an alert.
                        title: Stream Processor Event Types
                        type: string
                      matchers:
                        description: List of rules that determine whether MongoDB
                          Cloud checks an object for the alert configuration.
                        items:
                          description: Rules to apply when comparing a stream processing
                            instance or stream processor against this alert configuration.
                          properties:
                            fieldName:
                              description: Name of the parameter in the target object
                                that MongoDB Cloud checks. The parameter must match
                                all rules for MongoDB Cloud to check for alert configurations.
                              title: Streams Matcher Fields
                              type: string
                            operator:
                              description: Comparison operator to apply when checking
                                the current metric value against **matcher[n].value**.
                              type: string
                            value:
                              description: Value to match or exceed using the specified
                                **matchers.operator**.
                              type: string
                          required:
                          - fieldName
                          - operator
                          - value
                          title: Matchers
                          type: object
                        type: array
                      metricThreshold:
                        description: Threshold for the metric that, when exceeded,
                          triggers an alert. The metric threshold pertains to event
                          types which reflects changes of measurements and metrics
                          about the serverless database.
                        properties:
                          metricName:
                            description: Human-readable label that identifies the
                              metric against which MongoDB Cloud checks the configured
                              **metricThreshold.threshold**.
                            type: string
                          mode:
                            description: MongoDB Cloud computes the current metric
                              value as an average.
                            type: string
                          operator:
                            description: Comparison operator to apply when checking
                              the current metric value.
                            type: string
                          threshold:
                            description: Value of metric that, when exceeded, triggers
                              an alert.
                            type: number
                          units:
                            description: Element used to express the quantity. This
                              can be an element of time, storage capacity, and the
                              like.
                            title: Serverless Metric Units
                            type: string
                        required:
                        - metricName
                        title: Serverless Metric Threshold
                        type: object
                      notifications:
                        description: List that contains the targets that MongoDB Cloud
                          sends notifications.
                        items:
                          description: One target that MongoDB Cloud sends notifications
                            when an alert triggers.
                          properties:
                            apiTokenRef:
                              description: "SENSITIVE FIELD\n\nReference to a secret
                                containing data for the \"apiToken\" field:\n\nSlack
                                API token or Bot token that MongoDB Cloud needs to
                                send alert notifications via Slack. The resource requires
                                this parameter when `\"notifications.[n].typeName\"
                                : \"SLACK\"`. If the token later becomes invalid,
                                MongoDB Cloud sends an email to the project owners.
                                If the token remains invalid, MongoDB Cloud removes
                                the token. \n\n**NOTE**: After you create a notification
                                which requires an API or integration key, the key
                                appears partially redacted when you:\n\n* View or
                                edit the alert through the Atlas UI.\n\n* Query the
                                alert for the notification through the Atlas Administration
                                API."
                              properties:
                                key:
                                  default: apiToken
                                  description: Key of the secret data containing the
                                    sensitive field value, defaults to "apiToken".
                                  type: string
                                name:
                                  description: Name of the secret containing the sensitive
                                    field value.
                                  type: string
                              type: object
                            channelName:
                              description: 'Name of the Slack channel to which MongoDB
                                Cloud sends alert notifications. The resource requires
                                this parameter when `"notifications.[n].typeName"
                                : "SLACK"`.'
                              type: string
                            datadogApiKeyRef:
                              description: |-
                                SENSITIVE FIELD

                                Reference to a secret containing data for the "datadogApiKey" field:

                                Datadog API Key that MongoDB Cloud needs to send alert notifications to Datadog. You can find this API key in the Datadog dashboard. The resource requires this parameter when `"notifications.[n].typeName" : "DATADOG"`.

                                **NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:

                                * View or edit the alert through the Atlas UI.

                                * Query the alert for the notification through the Atlas Administration API.
                              properties:
                                key:
                                  default: datadogApiKey
                                  description: Key of the secret data containing the
                                    sensitive field value, defaults to "datadogApiKey".
                                  type: string
                                name:
                                  description: Name of the secret containing the sensitive
                                    field value.
                                  type: string
                              type: object
                            datadogRegion:
                              description: |-
                                Datadog region that indicates which API Uniform Resource Locator (URL) to use. The resource requires this parameter when `"notifications.[n].typeName" : "DATADOG"`.

                                To learn more about Datadog's regions, see <a href="https://docs.datadoghq.com/getting_started/site/" target="_blank" rel="noopener noreferrer">Datadog Sites</a>.
                              type: string
                            delayMin:
                              description: Number of minutes that MongoDB Cloud waits
                                after detecting an alert condition before it sends
                                out the first notification.
                              type: integer
                            emailAddress:
                              description: |-
                                Email address to which MongoDB Cloud sends alert notifications. The resource requires this parameter when `"notifications.[n].typeName" : "EMAIL"`. You don't need to set this value to send emails to individual or groups of MongoDB Cloud users including:

                                - specific MongoDB Cloud users (`"notifications.[n].typeName" : "USER"`)
                                - MongoDB Cloud users with specific project roles (`"notifications.[n].typeName" : "GROUP"`)
                                - MongoDB Cloud users with specific organization roles (`"notifications.[n].typeName" : "ORG"`)
                                - MongoDB Cloud teams (`"notifications.[n].typeName" : "TEAM"`)

                                To send emails to one MongoDB Cloud user or grouping of users, set the `notifications.[n].emailEnabled` parameter.
                              type: string
                            emailEnabled:
                              description: |-
                                Flag that indicates whether MongoDB Cloud should send email notifications. The resource requires this parameter when one of the following values have been set:

                                - `"notifications.[n].typeName" : "ORG"`
                                - `"notifications.[n].typeName" : "GROUP"`
                                - `"notifications.[n].typeName" : "USER"`
                              type: boolean
                            integrationId:
                              description: The id of the associated integration, the
                                credentials of which to use for requests.
                              type: string
                            intervalMin:
                              description: |-
                                Number of minutes to wait between successive notifications. MongoDB Cloud sends notifications until someone acknowledges the unacknowledged alert.

                                PagerDuty, VictorOps, and OpsGenie notifications don't return this element. Configure and manage the notification interval within each of those services.
                              type: integer
                            microsoftTeamsWebhookUrlRef:
                              description: |-
                                SENSITIVE FIELD

                                Reference to a secret containing data for the "microsoftTeamsWebhookUrl" field:

                                Microsoft Teams Webhook Uniform Resource Locator (URL) that MongoDB Cloud needs to send this notification via Microsoft Teams. The resource requires this parameter when `"notifications.[n].typeName" : "MICROSOFT_TEAMS"`. If the URL later becomes invalid, MongoDB Cloud sends an email to the project owners. If the key remains invalid, MongoDB Cloud removes it.

                                **NOTE**: When you view or edit the alert for a Microsoft Teams notification, the URL appears partially redacted.
                              properties:
                                key:
                                  default: microsoftTeamsWebhookUrl
                                  description: Key of the secret data containing the
                                    sensitive field value, defaults to "microsoftTeamsWebhookUrl".
                                  type: string
                                name:
                                  description: Name of the secret containing the sensitive
                                    field value.
                                  type: string
                              type: object
                            mobileNumber:
                              description: 'Mobile phone number to which MongoDB Cloud
                                sends alert notifications. The resource requires this
                                parameter when `"notifications.[n].typeName" : "SMS"`.'
                              type: string
                            notificationTokenRef:
                              description: |-
                                SENSITIVE FIELD

                                Reference to a secret containing data for the "notificationToken" field:

                                HipChat API token that MongoDB Cloud needs to send alert notifications to HipChat. The resource requires this parameter when `"notifications.[n].typeName" : "HIP_CHAT"`". If the token later becomes invalid, MongoDB Cloud sends an email to the project owners. If the token remains invalid, MongoDB Cloud removes it.

                                **NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:

                                * View or edit the alert through the Atlas UI.

                                * Query the alert for the notification through the Atlas Administration API.
                              properties:
                                key:
                                  default: notificationToken
                                  description: Key of the secret data containing the
                                    sensitive field value, defaults to "notificationToken".
                                  type: string
                                name:
                                  description: Name of the secret containing the sensitive
                                    field value.
                                  type: string
                              type: object
                            notifierId:
                              description: The notifierId is a system-generated unique
                                identifier assigned to each notification method. This
                                is needed when updating third-party notifications
                                without requiring explicit authentication credentials.
                              type: string
                            opsGenieApiKeyRef:
                              description: |-
                                SENSITIVE FIELD

                                Reference to a secret containing data for the "opsGenieApiKey" field:

                                API Key that MongoDB Cloud needs to send this notification via Opsgenie. The resource requires this parameter when `"notifications.[n].typeName" : "OPS_GENIE"`. If the key later becomes invalid, MongoDB Cloud sends an email to the project owners. If the key remains invalid, MongoDB Cloud removes it.

                                **NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:

                                * View or edit the alert through the Atlas UI.

                                * Query the alert for the notification through the Atlas Administration API.
                              properties:
                                key:
                                  default: opsGenieApiKey
                                  description: Key of the secret data containing the
                                    sensitive field value, defaults to "opsGenieApiKey".
                                  type: string
                                name:
                                  description: Name of the secret containing the sensitive
                                    field value.
                                  type: string
                              type: object
                            opsGenieRegion:
                              description: Opsgenie region that indicates which API
                                Uniform Resource Locator (URL) to use.
                              type: string
                            region:
                              description: PagerDuty region that indicates which API
                                Uniform Resource Locator (URL) to use.
                              type: string
                            roles:
                              description: 'List that contains the one or more [organization](https://dochub.mongodb.org/core/atlas-org-roles)
                                or [project roles](https://dochub.mongodb.org/core/atlas-proj-roles)
                                that receive the configured alert. The resource requires
                                this parameter when `"notifications.[n].typeName"
                                : "GROUP"` or `"notifications.[n].typeName" : "ORG"`.
                                If you include this parameter, MongoDB Cloud sends
                                alerts only to users assigned the roles you specify
                                in the array. If you omit this parameter, MongoDB
                                Cloud sends alerts to users assigned any role.'
                              items:
                                description: One organization or project role that
                                  receive the configured alert.
                                type: string
                              type: array
                            roomName:
                              description: 'HipChat API room name to which MongoDB
                                Cloud sends alert notifications. The resource requires
                                this parameter when `"notifications.[n].typeName"
                                : "HIP_CHAT"`".'
                              type: string
                            serviceKeyRef:
                              description: |-
                                SENSITIVE FIELD

                                Reference to a secret containing data for the "serviceKey" field:

                                PagerDuty service key that MongoDB Cloud needs to send notifications via PagerDuty. The resource requires this parameter when `"notifications.[n].typeName" : "PAGER_DUTY"`. If the key later becomes invalid, MongoDB Cloud sends an email to the project owners. If the key remains invalid, MongoDB Cloud removes it.

                                **NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:

                                * View or edit the alert through the Atlas UI.

                                * Query the alert for the notification through the Atlas Administration API.
                              properties:
                                key:
                                  default: serviceKey
                                  description: Key of the secret data containing the
                                    sensitive field value, defaults to "serviceKey".
                                  type: string
                                name:
                                  description: Name of the secret containing the sensitive
                                    field value.
                                  type: string
                              type: object
                            smsEnabled:
                              description: |-
                                Flag that indicates whether MongoDB Cloud should send text message notifications. The resource requires this parameter when one of the following values have been set:

                                - `"notifications.[n].typeName" : "ORG"`
                                - `"notifications.[n].typeName" : "GROUP"`
                                - `"notifications.[n].typeName" : "USER"`
                              type: boolean
                            teamId:
                              description: 'Unique 24-hexadecimal digit string that
                                identifies one MongoDB Cloud team. The resource requires
                                this parameter when `"notifications.[n].typeName"
                                : "TEAM"`.'
                              type: string
                            teamName:
                              description: 'Name of the MongoDB Cloud team that receives
                                this notification. The resource requires this parameter
                                when `"notifications.[n].typeName" : "TEAM"`.'
                              type: string
                            typeName:
                              description: Human-readable label that displays the
                                alert notification type.
                              type: string
                            username:
                              description: 'MongoDB Cloud username of the person to
                                whom MongoDB Cloud sends notifications. Specify only
                                MongoDB Cloud users who belong to the project that
                                owns the alert configuration. The resource requires
                                this parameter when `"notifications.[n].typeName"
                                : "USER"`.'
                              type: string
                            victorOpsApiKeyRef:
                              description: |-
                                SENSITIVE FIELD

                                Reference to a secret containing data for the "victorOpsApiKey" field:

                                API key that MongoDB Cloud needs to send alert notifications to Splunk On-Call. The resource requires this parameter when `"notifications.[n].typeName" : "VICTOR_OPS"`. If the key later becomes invalid, MongoDB Cloud sends an email to the project owners. If the key remains invalid, MongoDB Cloud removes it.

                                **NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:

                                * View or edit the alert through the Atlas UI.

                                * Query the alert for the notification through the Atlas Administration API.
                              properties:
                                key:
                                  default: victorOpsApiKey
                                  description: Key of the secret data containing the
                                    sensitive field value, defaults to "victorOpsApiKey".
                                  type: string
                                name:
                                  description: Name of the secret containing the sensitive
                                    field value.
                                  type: string
                              type: object
                            victorOpsRoutingKeyRef:
                              description: |-
                                SENSITIVE FIELD

                                Reference to a secret containing data for the "victorOpsRoutingKey" field:

                                Routing key that MongoDB Cloud needs to send alert notifications to Splunk On-Call. The resource requires this parameter when `"notifications.[n].typeName" : "VICTOR_OPS"`. If the key later becomes invalid, MongoDB Cloud sends an email to the project owners. If the key remains invalid, MongoDB Cloud removes it.
                              properties:
                                key:
                                  default: victorOpsRoutingKey
                                  description: Key of the secret data containing the
                                    sensitive field value, defaults to "victorOpsRoutingKey".
                                  type: string
                                name:
                                  description: Name of the secret containing the sensitive
                                    field value.
                                  type: string
                              type: object
                            webhookSecretRef:
                              description: |-
                                SENSITIVE FIELD

                                Reference to a secret containing data for the "webhookSecret" field:

                                Authentication secret for a webhook-based alert.

                                Atlas returns this value if you set `"notifications.[n].typeName" :"WEBHOOK"` and either:
                                * You set `notification.[n].webhookSecret` to a non-empty string
                                * You set a default webhookSecret either on the [Integrations](https://www.mongodb.com/docs/atlas/tutorial/third-party-service-integrations/#std-label-third-party-integrations) page, or with the [Integrations API](#tag/Third-Party-Service-Integrations/operation/createIntegration)

                                **NOTE**: When you view or edit the alert for a webhook notification, the secret appears completely redacted.
                              properties:
                                key:
                                  default: webhookSecret
                                  description: Key of the secret data containing the
                                    sensitive field value, defaults to "webhookSecret".
                                  type: string
                                name:
                                  description: Name of the secret containing the sensitive
                                    field value.
                                  type: string
                              type: object
                            webhookUrlRef:
                              description: |-
                                SENSITIVE FIELD

                                Reference to a secret containing data for the "webhookUrl" field:

                                Target URL for a webhook-based alert.

                                Atlas returns this value if you set `"notifications.[n].typeName" :"WEBHOOK"` and either:
                                * You set `notification.[n].webhookURL` to a non-empty string
                                * You set a default webhookUrl either on the [Integrations](https://www.mongodb.com/docs/atlas/tutorial/third-party-service-integrations/#std-label-third-party-integrations) page, or with the [Integrations API](#tag/Third-Party-Service-Integrations/operation/createIntegration)

                                **NOTE**: When you view or edit the alert for a Webhook URL notification, the URL appears partially redacted.
                              properties:
                                key:
                                  default: webhookUrl
                                  description: Key of the secret data containing the
                                    sensitive field value, defaults to "webhookUrl".
                                  type: string
                                name:
                                  description: Name of the secret containing the sensitive
                                    field value.
                                  type: string
                              type: object
                          type: object
                        type: array
                      threshold:
                        description: A Limit that triggers an alert when greater than
                          a number.
                        properties:
                          operator:
                            description: Comparison operator to apply when checking
                              the current metric value.
                            type: string
                          threshold:
                            description: Value of metric that, when exceeded, triggers
                              an alert.
                            type: integer
                          units:
                            description: Element used to express the quantity. This
                              can be an element of time, storage capacity, and the
                              like.
                            title: Raw Metric Units
                            type: string
                        title: Greater Than Raw Threshold
                        type: object
                    type: object
                  parameters:
                    description: The parameter fields of the groupalertsconfig resource
                      spec. These fields are used when creating groupalertsconfigs
                      only.
                    properties:
                      groupId:
                        description: |-
                          Unique 24-hexadecimal digit string that identifies your project. Use the [/groups](#tag/Projects/operation/listProjects) endpoint to retrieve all projects to which the authenticated user has access.

                          **NOTE**: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.
                        type: string
                    type: object
                type: object
            type: object
          status:
            description: 'Most recently observed read-only status of the groupalertsconfig
              for the specified resource version. This data may not be up to date
              and is populated by the system. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
            properties:
              conditions:
                description: Represents the latest available observations of a resource's
                  current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon.
                      type: integer
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - type
                  - status
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              v20241113:
                description: The last observed Atlas state of the groupalertsconfig
                  resource for version v20241113.
                properties:
                  created:
                    description: Date and time when MongoDB Cloud created the alert
                      configuration. This parameter expresses its value in the <a
                      href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank"
                      rel="noopener noreferrer">ISO 8601</a> timestamp format in UTC.
                    type: string
                  groupId:
                    description: Unique 24-hexadecimal digit string that identifies
                      the project that owns this alert configuration.
                    type: string
                  id:
                    description: Unique 24-hexadecimal digit string that identifies
                      this alert configuration.
                    type: string
                  updated:
                    description: Date and time when someone last updated this alert
                      configuration. This parameter expresses its value in the <a
                      href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank"
                      rel="noopener noreferrer">ISO 8601</a> timestamp format in UTC.
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: thirdpartyintegrations.atlas.generated.mongodb.com
spec:
  group: atlas.generated.mongodb.com
  names:
    categories:
    - atlas
    kind: ThirdPartyIntegration
    listKind: ThirdPartyIntegrationList
    plural: thirdpartyintegrations
    singular: thirdpartyintegration
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: A thirdpartyintegration, managed by the MongoDB Kubernetes Atlas
          Operator.
        properties:
          spec:
            description: |-
              Specification of the thirdpartyintegration supporting the following versions:

              - v20241113

              At most one versioned spec can be specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
            properties:
              v20241113:
                description: The spec of the thirdpartyintegration resource for version
                  v20241113.
                properties:
                  entry:
                    description: The entry fields of the thirdpartyintegration resource
                      spec. These fields can be set for creating and updating thirdpartyintegrations.
                    properties:
                      accountId:
                        description: Unique 40-hexadecimal digit string that identifies
                          your New Relic account.
                        type: string
                      apiKeyRef:
                        description: |-
                          SENSITIVE FIELD

                          Reference to a secret containing data for the "apiKey" field:

                          Key that allows MongoDB Cloud to access your VictorOps account.

                          **NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:

                          * View or edit the alert through the Atlas UI.

                          * Query the alert for the notification through the Atlas Administration API.
                        properties:
                          key:
                            default: apiKey
                            description: Key of the secret data containing the sensitive
                              field value, defaults to "apiKey".
                            type: string
                          name:
                            description: Name of the secret containing the sensitive
                              field value.
                            type: string
                        type: object
                      apiTokenRef:
                        description: |-
                          SENSITIVE FIELD

                          Reference to a secret containing data for the "apiToken" field:

                          Key that allows MongoDB Cloud to access your Slack account.

                          **NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:

                          * View or edit the alert through the Atlas UI.

                          * Query the alert for the notification through the Atlas Administration API.

                          **IMPORTANT**: Slack integrations now use the OAuth2 verification method and must  be initially configured, or updated from a legacy integration, through the Atlas  third-party service integrations page. Legacy tokens will soon no longer be  supported.
                        properties:
                          key:
                            default: apiToken
                            description: Key of the secret data containing the sensitive
                              field value, defaults to "apiToken".
                            type: string
                          name:
                            description: Name of the secret containing the sensitive
                              field value.
                            type: string
                        type: object
                      channelName:
                        description: Name of the Slack channel to which MongoDB Cloud
                          sends alert notifications.
                        type: string
                      enabled:
                        description: Flag that indicates whether someone has activated
                          the Prometheus integration.
                        type: boolean
                      licenseKeyRef:
                        description: |-
                          SENSITIVE FIELD

                          Reference to a secret containing data for the "licenseKey" field:

                          Unique 40-hexadecimal digit string that identifies your New Relic license.

                          **IMPORTANT**: Effective Wednesday, June 16th, 2021, New Relic no longer supports the plugin-based integration with MongoDB. We do not recommend that you sign up for the plugin-based integration.
                          To learn more, see the <a href="https://discuss.newrelic.com/t/new-relic-plugin-eol-wednesday-june-16th-2021/127267" target="_blank">New Relic Plugin EOL Statement</a> Consider configuring an alternative monitoring integration before June 16th to maintain visibility into your MongoDB deployments.
                        properties:
                          key:
                            default: licenseKey
                            description: Key of the secret data containing the sensitive
                              field value, defaults to "licenseKey".
                            type: string
                          name:
                            description: Name of the secret containing the sensitive
                              field value.
                            type: string
                        type: object
                      microsoftTeamsWebhookUrlRef:
                        description: |-
                          SENSITIVE FIELD

                          Reference to a secret containing data for the "microsoftTeamsWebhookUrl" field:

                          Endpoint web address of the Microsoft Teams webhook to which MongoDB Cloud sends notifications.

                          **NOTE**: When you view or edit the alert for a Microsoft Teams notification, the URL appears partially redacted.
                        properties:
                          key:
                            default: microsoftTeamsWebhookUrl
                            description: Key of the secret data containing the sensitive
                              field value, defaults to "microsoftTeamsWebhookUrl".
                            type: string
                          name:
                            description: Name of the secret containing the sensitive
                              field value.
                            type: string
                        type: object
                      passwordRef:
                        description: |-
                          SENSITIVE FIELD

                          Reference to a secret containing data for the "password" field:

                          Password needed to allow MongoDB Cloud to access your Prometheus account.
                        properties:
                          key:
                            default: password
                            description: Key of the secret data containing the sensitive
                              field value, defaults to "password".
                            type: string
                          name:
                            description: Name of the secret containing the sensitive
                              field value.
                            type: string
                        type: object
                      readTokenRef:
                        description: |-
                          SENSITIVE FIELD

                          Reference to a secret containing data for the "readToken" field:

                          Query key used to access your New Relic account.
                        properties:
                          key:
                            default: readToken
                            description: Key of the secret data containing the sensitive
                              field value, defaults to "readToken".
                            type: string
                          name:
                            description: Name of the secret containing the sensitive
                              field value.
                            type: string
                        type: object
                      region:
                        description: PagerDuty region that indicates the API Uniform
                          Resource Locator (URL) to use.
                        type: string
                      routingKeyRef:
                        description: |-
                          SENSITIVE FIELD

                          Reference to a secret containing data for the "routingKey" field:

                          Routing key associated with your Splunk On-Call account.
                        properties:
                          key:
                            default: routingKey
                            description: Key of the secret data containing the sensitive
                              field value, defaults to "routingKey".
                            type: string
                          name:
                            description: Name of the secret containing the sensitive
                              field value.
                            type: string
                        type: object
                      secretRef:
                        description: |-
                          SENSITIVE FIELD

                          Reference to a secret containing data for the "secret" field:

                          An optional field returned if your webhook is configured with a secret.

                          **NOTE**: When you view or edit the alert for a webhook notification, the secret appears completely redacted.
                        properties:
                          key:
                            default: secret
                            description: Key of the secret data containing the sensitive
                              field value, defaults to "secret".
                            type: string
                          name:
                            description: Name of the secret containing the sensitive
                              field value.
                            type: string
                        type: object
                      serviceDiscovery:
                        description: Desired method to discover the Prometheus service.
                        type: string
                      serviceKeyRef:
                        description: |-
                          SENSITIVE FIELD

                          Reference to a secret containing data for the "serviceKey" field:

                          Service key associated with your PagerDuty account.

                          **NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:

                          * View or edit the alert through the Atlas UI.

                          * Query the alert for the notification through the Atlas Administration API.
                        properties:
                          key:
                            default: serviceKey
                            description: Key of the secret data containing the sensitive
                              field value, defaults to "serviceKey".
                            type: string
                          name:
                            description: Name of the secret containing the sensitive
                              field value.
                            type: string
                        type: object
                      teamName:
                        description: Human-readable label that identifies your Slack
                          team. Set this parameter when you configure a legacy Slack
                          integration.
                        type: string
                      type:
                        description: Human-readable label that identifies the service
                          to which you want to integrate with MongoDB Cloud. The value
                          must match the third-party service integration type.
                        type: string
                      urlRef:
                        description: |-
                          SENSITIVE FIELD

                          Reference to a secret containing data for the "url" field:

                          Endpoint web address to which MongoDB Cloud sends notifications.

                          **NOTE**: When you view or edit the alert for a webhook notification, the URL appears partially redacted.
                        properties:
                          key:
                            default: url
                            description: Key of the secret data containing the sensitive
                              field value, defaults to "url".
                            type: string
                          name:
                            description: Name of the secret containing the sensitive
                              field value.
                            type: string
                        type: object
                      username:
                        description: Human-readable label that identifies your Prometheus
                          incoming webhook.
                        type: string
                      writeTokenRef:
                        description: |-
                          SENSITIVE FIELD

                          Reference to a secret containing data for the "writeToken" field:

                          Insert key associated with your New Relic account.
                        properties:
                          key:
                            default: writeToken
                            description: Key of the secret data containing the sensitive
                              field value, defaults to "writeToken".
                            type: string
                          name:
                            description: Name of the secret containing the sensitive
                              field value.
                            type: string
                        type: object
                    title: Third-Party Integration
                    type: object
                  parameters:
                    description: The parameter fields of the thirdpartyintegration
                      resource spec. These fields are used when creating thirdpartyintegrations
                      only.
                    properties:
                      groupId:
                        description: |-
                          Unique 24-hexadecimal digit string that identifies your project. Use the [/groups](#tag/Projects/operation/listProjects) endpoint to retrieve all projects to which the authenticated user has access.

                          **NOTE**: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.
                        type: string
                      integrationType:
                        description: Human-readable label that identifies the service
                          which you want to integrate with MongoDB Cloud.
                        title: Integration Type
                        type: string
                    type: object
                type: object
            type: object
          status:
            description: 'Most recently observed read-only status of the thirdpartyintegration
              for the specified resource version. This data may not be up to date
              and is populated by the system. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
            properties:
              conditions:
                description: Represents the latest available observations of a resource's
                  current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon.
                      type: integer
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - type
                  - status
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              v20241113:
                description: The last observed Atlas state of the thirdpartyintegration
                  resource for version v20241113.
                properties:
                  id:
                    description: Integration id.
                    type: string
                  type:
                    description: Human-readable label that identifies the service
                      to which you want to integrate with MongoDB Cloud. The value
                      must match the third-party service integration type.
                    type: string
                title: Third-Party Integration
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1
