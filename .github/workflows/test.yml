name: Test

on:
  push:
    branches:
  workflow_dispatch:

jobs:
  unit-test:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4

      - name: Cache multiple paths
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-build-${{ hashFiles('**/go.sum') }}

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.15.6'
      - run: go version
      - name: Run testing
        run: CGO_ENABLED=0 go test -v $(go list ./pkg/...)

  int-test-project:
    name: Integration tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test: [ "AtlasProject", "AtlasCluster", "AtlasDatabaseUser" ]
    steps:
      - uses: actions/checkout@v2.3.4

      - name: Cache multiple paths
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-build-${{ hashFiles('**/go.sum') }}
      - name: Run testing
        uses: ./.github/actions/int-test
        with:
          ATLAS_ORG_ID: ${{ secrets.ATLAS_ORG_ID }}
          ATLAS_PUBLIC_KEY: ${{ secrets.ATLAS_PUBLIC_KEY }}
          ATLAS_PRIVATE_KEY: ${{ secrets.ATLAS_PRIVATE_KEY }}
          TEST_NAME: ${{ matrix.test }}

  prepare-e2e:
    name: Prepare E2E configuration and image
    needs: [unit-test]
    runs-on: ubuntu-latest
    env:
      # uncomment the below for local testing
      # DOCKER_REPO: ${{ env.DOCKER_REGISTRY }}/mongodb-atlas-kubernetes-operator
      DOCKER_REPO: mongodb/mongodb-atlas-kubernetes-operator-prerelease
    steps:

    - name: Check out code
      uses: actions/checkout@v2.3.1

    - name: Prepare tag
      id: prepare
      uses: ./.github/actions/set-tag

    - name: Push Atlas Operator to Registry
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: ${{ env.DOCKER_REPO }}
        registry: ${{ env.DOCKER_REGISTRY }}
        tags: ${{ steps.prepare.outputs.tag }}

  e2e:
    name: E2E tests
    needs: prepare-e2e
    runs-on: ubuntu-latest
    env:
      # uncomment the below for local testing
      # DOCKER_REPO: ${{ env.DOCKER_REGISTRY }}/mongodb-atlas-kubernetes-operator
      DOCKER_REGISTRY: docker.io
      DOCKER_BUNDLES_REPO: mongodbinternal/mongodb-atlas-kubernetes-bundles-prerelease
      DOCKER_REPO: mongodb/mongodb-atlas-kubernetes-operator-prerelease
    strategy:
      fail-fast: false
      matrix:
        # k8s: ["1.17-kind", "1.19-kind", "1.17-opeshift"] # <supported platform version>-<platform>
        k8s: ["v1.18.15-kind"] # <K8sGitVersion>-<Platform>
        test: ["cluster-ns", "cluster-wide", "bundle-test", "helm-ns", "helm-wide"]
    steps:

      - name: Check out code
        uses: actions/checkout@v2.3.1

      - name: Prepare tag
        id: prepare
        uses: ./.github/actions/set-tag

      - name: Generate configuration for the tests
        uses: ./.github/actions/gen-install-scripts
        with:
          IMAGE_URL: ${{ env.DOCKER_REPO }}:${{ steps.prepare.outputs.tag }}
          VERSION: ${{ steps.prepare.outputs.tag }}
          ENV: dev

      - name: Change path for the test
        run: |
          sed -i -e 's/cloud.mongodb.com/cloud-qa.mongodb.com/' bundle/manifests/mongodb-atlas-kubernetes.clusterserviceversion.yaml

      - name: Push bundle-image for the test
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ env.DOCKER_BUNDLES_REPO }}
          registry: ${{ env.DOCKER_REGISTRY }}
          tags: ${{ steps.prepare.outputs.tag }}
          dockerfile: bundle.Dockerfile

      - name: Set properties
        id: properties
        run: |
          version=$(echo ${{ matrix.k8s }} | awk -F "-" '{print $1}')
          platform=$(echo ${{ matrix.k8s }} | awk -F "-" '{print $2}')
          echo "::set-output name=k8s_version::$version"
          echo "::set-output name=k8s_platform::$platform"

      # run if platform = kind #TODO
      - name: Create k8s Kind Cluster
        if: ${{ steps.properties.outputs.k8s_platform == 'kind' && !env.ACT }}
        uses: helm/kind-action@v1.1.0
        with:
          version: v0.10.0
          config: test/e2e/config/kind.yaml
          node_image: kindest/node:${{ steps.properties.outputs.k8s_version }}
          cluster_name: ${{ matrix.test }}

      - name: Setup Go
        if: ${{ steps.properties.outputs.k8s_platform == 'kind' && !env.ACT }}
        uses: actions/setup-go@v2
        with:
          go-version: '1.15.6'

      - name: Install MongoCLI
        run: |
          wget https://github.com/mongodb/mongocli/releases/download/v1.14.0/mongocli_1.14.0_linux_x86_64.deb -O mongocli.deb
          sudo dpkg -i mongocli.deb
          mongocli --version

      - name: Install operator-sdk-v1.4.2
        run: |
          wget https://github.com/operator-framework/operator-sdk/releases/download/v1.4.2/operator-sdk_linux_amd64
          chmod +x operator-sdk_linux_amd64 && sudo mv operator-sdk_linux_amd64 /usr/local/bin/operator-sdk
          operator-sdk version

      - name: Run e2e test
        if: ${{ steps.properties.outputs.k8s_platform == 'kind' && !env.ACT }}
        env:
          MCLI_PUBLIC_API_KEY: ${{ secrets.ATLAS_PUBLIC_KEY }}
          MCLI_PRIVATE_API_KEY: ${{ secrets.ATLAS_PRIVATE_KEY }}
          MCLI_ORG_ID: ${{ secrets.ATLAS_ORG_ID}}
          MCLI_OPS_MANAGER_URL: "https://cloud-qa.mongodb.com/"
          IMAGE_URL: ${{ env.DOCKER_REPO }}:${{ steps.prepare.outputs.tag }}
          BUNDLE_IMAGE: "${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_BUNDLES_REPO}}:${{ steps.prepare.outputs.tag }}"
          K8S_PLATFORM: "${{ steps.properties.outputs.k8s_platform }}"
          K8S_VERSION: "${{ steps.properties.outputs.k8s_version }}"
          TEST_NAME: "${{ matrix.test }}"
        run: |
          kubectl version
          helm version

          go version
          go get github.com/onsi/ginkgo/ginkgo && \
          go get github.com/onsi/gomega/...
          ginkgo -focus "${TEST_NAME}" -nodes=10 -stream -v test/e2e/

      - name: Upload operator logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: logs
          path: test/e2e/output/**

  cleanup:
    name: Cleanup atlas projects
    needs: e2e
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2.3.4

      - name: CleanUp empty AtlasProjects older than one day
        uses: ./.github/actions/cleanup
        with:
          ATLAS_PUBLIC_KEY: ${{ secrets.ATLAS_PUBLIC_KEY }}
          ATLAS_PRIVATE_KEY: ${{ secrets.ATLAS_PRIVATE_KEY }}
