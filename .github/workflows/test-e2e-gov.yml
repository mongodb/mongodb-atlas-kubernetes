name: E2E Gov tests

on:
  workflow_call:
  workflow_dispatch:

jobs:
  e2e-gov:
    name: E2E Gov tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Create k8s Kind Cluster
        if: ${{ !env.ACT }}
        uses: helm/kind-action@v1.10.0
        with:
          version: v0.20.0
          config: test/helper/e2e/config/kind.yaml
          cluster_name: "atlas-gov-e2e-test"
          wait: 180s
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v13
      - name: Install Nix cache
        uses: DeterminateSystems/magic-nix-cache-action@v7
      - name: Install CRDs
        run: nix-shell --run 'make install'
      - name: Run e2e test
        env:
          MCLI_PUBLIC_API_KEY: ${{ secrets.ATLAS_GOV_PUBLIC_KEY }}
          MCLI_PRIVATE_API_KEY: ${{ secrets.ATLAS_GOV_PRIVATE_KEY }}
          MCLI_ORG_ID: ${{ secrets.ATLAS_GOV_ORG_ID}}
          MCLI_OPS_MANAGER_URL: "https://cloud-qa.mongodbgov.com/"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ACCOUNT_ARN_LIST: ${{ secrets.AWS_ACCOUNT_ARN_LIST }}
          PAGER_DUTY_SERVICE_KEY: ${{ secrets.PAGER_DUTY_SERVICE_KEY }}
        run: |
          nix-shell --run '
          GOWORK=off &&
          cd test/e2e &&
          ginkgo labels &&
          echo "Running: AKO_E2E_TEST=1 ginkgo --label-filter=\"atlas-gov\" --timeout 120m --nodes=10 --flake-attempts=1 --randomize-all --race --cover --v --trace --show-nodes-events --output-interceptor-mode=none" &&
          AKO_E2E_TEST=1 ginkgo --label-filter="atlas-gov" --timeout 120m --nodes=10 --flake-attempts=1 --randomize-all --race --cover --v --trace --show-node-events --output-interceptor-mode=none --coverpkg=github.com/mongodb/mongodb-atlas-kubernetes/v2/pkg/...'
      - name: Upload operator logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: output/**
      - name: Upload test results to codecov.io
        if: ${{ success() }}
        uses: codecov/codecov-action@v4
        with:
          files: test/e2e/coverprofile.out
          name: ${{ matrix.test }}
          verbose: true
