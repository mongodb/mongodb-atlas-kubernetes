name: Post merge helm

on:
  push:
    branches:
      - post-release-helm

jobs:
  create-release-branch:
    permissions:
      contents: write
    name: Create Release branch
    runs-on: ubuntu-latest
    steps:
      - name: clone repositories
        run: |
          mkdir operator
          cd operator
          git clone https://github.com/mongodb/mongodb-atlas-kubernetes.git
          cd ..
          mkdir helm
          cd helm
          git clone https://github.com/mongodb/helm-charts.git
          cd ..
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: copy files
        run: |
          cp -a operator/mongodb-atlas-kubernetes/bundle/manifests/atlas.mongodb.com_atlasbackuppolicies.yaml helm/helm-charts/charts/atlas-operator-crds/templates
          cp -a operator/mongodb-atlas-kubernetes/bundle/manifests/atlas.mongodb.com_atlasbackupschedules.yaml helm/helm-charts/charts/atlas-operator-crds/templates
          cp -a operator/mongodb-atlas-kubernetes/bundle/manifests/atlas.mongodb.com_atlasdatabaseusers.yaml helm/helm-charts/charts/atlas-operator-crds/templates
          cp -a operator/mongodb-atlas-kubernetes/bundle/manifests/atlas.mongodb.com_atlasdeployments.yaml helm/helm-charts/charts/atlas-operator-crds/templates
          cp -a operator/mongodb-atlas-kubernetes/bundle/manifests/atlas.mongodb.com_atlasprojects.yaml helm/helm-charts/charts/atlas-operator-crds/templates
          cp -a operator/mongodb-atlas-kubernetes/bundle/manifests/atlas.mongodb.com_atlasteams.yaml helm/helm-charts/charts/atlas-operator-crds/templates
      - name: edit versions
        run: |
          VERSION="test2"
          cd helm/helm-charts/charts/atlas-operator-crds
          sed -i -r 's/version:....../version: '"$VERSION"'/g' Chart.yaml
          sed -i -r 's/appVersion:....../appVersion: '"$VERSION"'/g' Chart.yaml
          cd ..
          cd atlas-operator
          sed -i -r 's/version:.\x22.....\x22/version: \x22'"$VERSION"'\x22/g' Chart.yaml
          sed -i -r 's/version:......$/version: '"$VERSION"'/g' Chart.yaml
          sed -i -r 's/appVersion:....../appVersion: '"$VERSION"'/g' Chart.yaml
          cd ..
      - name: checkout
        run: |
          cd operator/mongodb-atlas-kubernetes
          git fetch
          git branch -v -a
          git checkout post-release-helm
          cd ../..
      - name: git config
        id: git-config
        run: |
          VERSION="test3"
          branch="atlas-operator-release-$VERSION"
          echo "branch=$branch" >> "$GITHUB_OUTPUT"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: test
        run: |
          cp operator/mongodb-atlas-kubernetes/.github/actions/push-files/entrypoint.sh helm/helm-charts
          cd helm/helm-charts
          chmod +x entrypoint.sh
          git checkout -b ${{ steps.git-config.outputs.branch }}
          gh auth setup-git
          git push origin ${{ steps.git-config.outputs.branch }}
        env:
          GITHUB_TOKEN: ${{ secrets.FORK_HELM_SECRET }}
      - name: Commit and push crds chart
        run: |
          cd helm/helm-charts
          git add .
          git fetch origin atlas-operator-release-test3
          git init
          message="test msg"
          ./entrypoint.sh
#          FILE_TO_COMMIT="charts/atlas-operator-crds/Chart.yaml"
#          DESTINATION_BRANCH="atlas-operator-release-test3"
#          MESSAGE="auto commit $FILE_TO_COMMIT"
#          SHA=$(git rev-parse "$DESTINATION_BRANCH:$FILE_TO_COMMIT") || true
#          gh api --method PUT /repos/:owner/:repo/contents/$FILE_TO_COMMIT \
#            --field message="$MESSAGE" \
#            --field content=@<( base64 -i $FILE_TO_COMMIT ) \
#            --field branch="$DESTINATION_BRANCH" \
#            --field sha="$SHA"
        env:
          GITHUB_TOKEN: ${{ secrets.FORK_HELM_SECRET }}
          DESTINATION_BRANCH: ${{ steps.git-config.outputs.branch }}
          PATH_TO_COMMIT: "charts/atlas-operator-crds/Chart.yaml"
      - name: create pull request
        run: |
          cd helm/helm-charts
          gh pr create --title "update atlas operator version to $VERSION" --body "update atlas operator version to $VERSION" --base branch-for-pr --head ${{ steps.git-config.outputs.branch }} --repo Sugar-pack/helm-charts
        env:
          GITHUB_TOKEN: ${{ secrets.FORK_HELM_SECRET }}

