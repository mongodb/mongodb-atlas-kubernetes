# DEPRECATED: Create Release Branch
# TODO after GitHub add permission for action-bot to commit to the protected branches - please merge release-* workflow into one

name: "[Deprecated] Create Release Branch"

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version:"
        required: true
      authors:
        description: "Comma separated list of the release authors' emails"
        required: true

jobs:
  create-release-branch:
    name: Create Release
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ github.event.inputs.version }}
      TAG: v${{ github.event.inputs.version }}
      AUTHORS: ${{ github.event.inputs.authors }}
      DOCKER_RELEASE_REPO: mongodb/mongodb-atlas-kubernetes-operator
    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 #required for tags

    - name: Create deploy configurations
      uses: ./.github/actions/gen-install-scripts
      with:
        IMAGE_URL: ${{ env.DOCKER_RELEASE_REPO }}:${{ env.VERSION }}
        VERSION: ${{ env.VERSION }}
        ENV: prod

    - name: Install devbox
      uses: jetify-com/devbox-install-action@v0.13.0
      with:
        enable-cache: 'true'

    - name: Download dependencies
      run: devbox run -- 'go mod download'

    - name: Generate SDLC checklist files for released version
      run: |
         devbox run -- 'make gen-sdlc-checklist VERSION=${{ env.VERSION }} AUTHORS=${{ env.AUTHORS }}'

    - name: Configure Git
      run: |
        git remote set-url origin https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

    - name: Bump helm chart version
      run: |
        devbox run -- 'VERSION=${{ env.VERSION }} ./scripts/bump-helm-chart-version.sh'

    - name: Create branch and push it
      id: generate_branch
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        devbox run -- 'make check-major-version'
        export BRANCH="release/${VERSION}"
        export COMMIT_MESSAGE="Release ${VERSION}"
        git checkout -b $BRANCH
        git add -f ./deploy ./bundle bundle.Dockerfile docs/releases
        scripts/create-signed-commit.sh
        echo "BRANCH=$BRANCH" >> $GITHUB_OUTPUT  # Export branch name
        echo "COMMIT_MESSAGE=$COMMIT_MESSAGE" >> $GITHUB_OUTPUT  # Export commit message

    - name: Create PR
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BRANCH: ${{ steps.generate_branch.outputs.BRANCH }}
        COMMIT_MESSAGE: ${{ steps.generate_branch.outputs.COMMIT_MESSAGE }}
      run: |
        gh pr create --head="${BRANCH}" \
        --title "${COMMIT_MESSAGE}" \
        --body "This is an autogenerated PR to prepare for the release" \
        && echo "Pull request created"
