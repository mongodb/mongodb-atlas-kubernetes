name: Helm update

on:
  workflow_call:
  workflow_dispatch:

jobs:
  verify-helm-changes:
    name: Verify if AKO helm charts needs updates
    runs-on: ubuntu-latest
    environment: release
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout AKO repo
        uses: actions/checkout@v4

      - name: Install devbox
        uses: jetify-com/devbox-install-action@v0.11.0
        with:
          enable-cache: 'true'

      - name: Generate GitHub App Token
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.AKO_RELEASER_APP_ID }}
          private-key: ${{ secrets.AKO_RELEASER_RSA_KEY }}
          owner: ${{ github.repository_owner }}
          repositories: |
            mongodb-atlas-kubernetes
            helm-charts

      - name: Checkout Helm charts repo
        uses: actions/checkout@v4
        with:
            repository: mongodb/helm-charts
            token: ${{ steps.generate_token.outputs.token }}
            path: helm-charts-cloned
            persist-credentials: true

      - name: Verify if CRDs were changed
        id: crd-check
        env:
          HELM_CRDS_PATH: "./helm-charts-cloned/charts/atlas-operator-crds/templates"
        run: |
          devbox run -- "make helm-upd-crds"

      - name: Verify if RBAC were changed
        id: rbac-check
        env:
          HELM_RBAC_FILE: "./helm-charts-cloned/charts/atlas-operator/rbac.yaml"
        run: |
          devbox run -- "make helm-upd-rbac"

      - name: Create PR for helm-charts repo
        env:
            GH_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          cd ./helm-charts-cloned

          if [[ -n $(git status --porcelain) ]]; then
            jobname=${{ github.run_id }}
            if [[ -n "${{ github.event.pull_request.title }}" ]]; then
              jobname="${{ github.event.pull_request.title }}"
            fi
            
            BRANCH_NAME=CRD-RBAC-changes-"${jobname}"
            COMMIT_MSG="[autogenerated] update CRDs and RBAC ${jobname}"
            echo "Changes detected. Creating PR"
          
            git config --local user.email "akobot@ako-team-fake.mongodb.com"
            git config --local user.name "ako-releaser"
          
            git checkout -b "${BRANCH_NAME}"
            git add .
            git commit -m "${COMMIT_MSG}"
          
            git push origin "${BRANCH_NAME}"

            gh pr create --base main --head "${BRANCH_NAME}" --title "${COMMIT_MSG}" --body "${COMMIT_MSG}"
          fi
          echo "Nothing to commit"
