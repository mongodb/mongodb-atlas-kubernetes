name: Upgrade test on Openshift
on:
  workflow_call:
    inputs:
      previousVersion:
        description: "Previous operator release"
        default: "1.0.0"
        type: string
        required: false
      previousReleaseRegistry:
        description: "Previous operator registry"
        default: "quay.io/mongodb"
        type: string
        required: false
      registryForNewRelease:
        description: "Registry to push images of current build"
        default: "quay.io/mongodb"
        type: string
        required: false
      forked:
        description: "PR from forked repo"
        default: false
        type: boolean
        required: false
  workflow_dispatch:
concurrency:
  group: test-openshift-operator-upgrade
  cancel-in-progress: true
jobs:
  e2e-tests:
    name: Upgrade test on Openshift
    runs-on: ubuntu-latest
    if: ${{ vars.SKIP_OPENSHIFT != 'true' }}
    steps:
      - if: ${{ inputs.forked == false }}
        name: Check out code
        uses: actions/checkout@v4
        with:
          ref: ${{github.event.pull_request.head.sha}}
          fetch-depth: 0 # required for tags
      - if: ${{ inputs.forked == true }}
        name: Check out code
        uses: actions/checkout@v4
        with:
          ref: ${{github.event.pull_request.head.sha}}
          repository: ${{github.event.pull_request.head.repo.full_name}}
          fetch-depth: 0 # required for tags
      - name: Prepare tag
        id: prepare
        uses: ./.github/actions/set-tag
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v13
      - name: Install Nix cache
        uses: DeterminateSystems/magic-nix-cache-action@v7
      - name: Install Go dependencies
        run: nix-shell --run 'go install golang.org/x/tools/cmd/goimports@latest'
      - name: Login to registry
        run: docker login -u="${{ secrets.OPENSHIFT_UPGRADE_BOT_USERNAME }}" -p="${{ secrets.OPENSHIFT_UPGRADE_BOT_PASSWORD }}" quay.io
      - name: Run openshift upgrade test
        run: nix-shell --run 'cd scripts && ./openshift-upgrade-test.sh'
        env:
          OC_TOKEN: ${{ secrets.OPENSHIFT_UPGRADE_TOKEN }}
          CLUSTER_API_URL: ${{ secrets.OPENSHIFT_UPGRADE_SERVER_API }}
          LATEST_RELEASE_REGISTRY: ${{ github.event.inputs.previousReleaseRegistry }}
          REGISTRY: ${{ github.event.inputs.registryForNewRelease }}
