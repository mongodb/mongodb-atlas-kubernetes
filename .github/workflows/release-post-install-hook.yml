name: Release Post Install Hook
on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version:"
        required: true

jobs:
  release-post-install-hook:
    name: Release Post Install Hook
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ github.event.inputs.version }}
      QUAY_RELEASE_REPO: mongodb/atlas-operator-post-install-hook
      QUAY_ROBOT_NAME: mongodb+mongodb_atlas_kubernetes
      QUAY_RELEASE_REGISTRY: quay.io
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3.5.3
        with:
          submodules: true
          fetch-depth: 0

      - name: Install axios
        run: npm install axios

      - name: Verify release version already exists
        id: verify-release-version
        uses: actions/github-script@v6
        env:
          image: atlas-operator-post-install-hook
          version: ${{ github.event.inputs.version }}
        with:
          result-encoding: string
          script: |
            const axios = require("axios");
            const {image, version} = process.env;
            const resp = await axios.get(`https://quay.io/api/v1/repository/mongodb/${image}`);
            return resp.data.tags[version] !== undefined;

      - name: Fail if release exists
        if: steps.verify-release-version.result == 'true'
        env:
          version: ${{ github.event.inputs.version }}
        run: |
          echo "Release ${version} already exists"
          exit 1

      - name: Login to Quay registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.QUAY_RELEASE_REGISTRY }}
          username: ${{ env.QUAY_ROBOT_NAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: Prepare docker image tag
        id: prepare-quay-image-tag
        run: |
          REPOSITORY=${{ env.QUAY_RELEASE_REPO }}
          TAG=${{ github.event.inputs.version }}
          TAGS="${REPOSITORY}:${TAG}"
          echo "tags=$TAGS" >> $GITHUB_OUTPUT
      - name: Push Post Install Hook To Registry
        uses: docker/build-push-action@v3
        with:
          push: true
          context: .
          tags: ${{ steps.prepare-quay-image-tag.outputs.tags }}
          file: Dockerfile.post-install
