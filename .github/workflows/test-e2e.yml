name: E2E tests

on:
  workflow_call:
  workflow_dispatch:

env:
  MCLI_OPS_MANAGER_URL: "https://cloud-qa.mongodb.com/"
  MCLI_PUBLIC_API_KEY: ${{ secrets.ATLAS_PUBLIC_KEY }}
  MCLI_PRIVATE_API_KEY: ${{ secrets.ATLAS_PRIVATE_KEY }}
  MCLI_ORG_ID: ${{ secrets.ATLAS_ORG_ID }}

jobs:
  compute:
    runs-on: ubuntu-latest
    outputs:
      test_matrix: ${{ steps.test.outputs.matrix }}
    steps:
      - id: test
        name: Compute k8s matrix
        run: |
          matrix='["v1.30.10-kind"]'
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            matrix='["v1.30.10-kind", "v1.32.2-kind"]'
          fi
          echo "matrix=${matrix}" >> "${GITHUB_OUTPUT}"

  e2e:
    needs: compute
    runs-on: ubuntu-latest
    environment: test
    strategy:
      fail-fast: false
      matrix:
        k8s: ${{ fromJson(needs.compute.outputs.test_matrix) }}
        test: ["free-tier"]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          submodules: true
          fetch-depth: 0

      - uses: jetify-com/devbox-install-action@v0.13.0
        with:
          enable-cache: 'true'

      - id: properties
        run: |
          version=$(echo ${{ matrix.k8s }} | awk -F "-" '{print $1}')
          platform=$(echo ${{ matrix.k8s }} | awk -F "-" '{print $2}')
          echo "k8s_version=$version" >> $GITHUB_OUTPUT
          echo "k8s_platform=$platform" >> $GITHUB_OUTPUT

      - uses: ./.github/actions/gen-install-scripts
        with:
          VERSION: dev
          ENV: dev

      - if: ${{ steps.properties.outputs.k8s_platform == 'kind' }}
        uses: helm/kind-action@v1.12.0
        with:
          version: v0.26.0
          config: test/helper/e2e/config/kind.yaml
          node_image: kindest/node:${{ steps.properties.outputs.k8s_version }}
          cluster_name: ${{ matrix.test }}-${{ matrix.k8s }}
          wait: 180s

      - run: devbox run -- kubectl version
      - run: devbox run -- kubectl apply -f deploy/crds
      - run: devbox run -- ./scripts/launch-ci-e2e.sh
        env:
          TEST_NAME: ${{ matrix.test }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_ACCOUNT_ARN_LIST: ${{ secrets.AWS_ACCOUNT_ARN_LIST }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          GCP_SA_CRED: ${{ secrets.GCP_SA_CRED }}
          DATADOG_KEY: ${{ secrets.DATADOG_KEY }}
          PAGER_DUTY_SERVICE_KEY: ${{ secrets.PAGER_DUTY_SERVICE_KEY }}

      - if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: output/**

  prepare-e2e-image:
    runs-on: ubuntu-latest
    needs: compute
    outputs:
      tag: ${{ steps.set_tag.outputs.tag }}
      image_url: ${{ steps.set_vars.outputs.image_url }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          submodules: true
          fetch-depth: 0

      - id: set_tag
        uses: ./.github/actions/set-tag

      - id: set_vars
        run: |
          TAG=${{ steps.set_tag.outputs.tag }}
          echo "image_url=$(printf '%s' \
            "ghcr.io/${{ github.repository_owner }}/" \
            "mongodb-atlas-kubernetes-operator-prerelease:" \
            "${TAG}" \
          )" >> $GITHUB_OUTPUT

      - run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - uses: ./.github/actions/build-push-image
        with:
          file: fast.Dockerfile
          repository: ghcr.io/${{ github.repository_owner }}/mongodb-atlas-kubernetes-operator-prerelease
          version: ${{ steps.set_tag.outputs.tag }}
          tags: ${{ steps.set_vars.outputs.image_url }}
          platforms: linux/amd64
          push_to_docker: false

  helm-e2e:
    needs: [compute, prepare-e2e-image]
    runs-on: ubuntu-latest
    environment: test
    strategy:
      fail-fast: false
      matrix:
        k8s: ${{ fromJson(needs.compute.outputs.test_matrix) }}
        test: ["helm-ns", "helm-update", "helm-wide"]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          submodules: true
          fetch-depth: 0

      - uses: jetify-com/devbox-install-action@v0.13.0
        with:
          enable-cache: 'true'

      - id: properties
        run: |
          version=$(echo ${{ matrix.k8s }} | awk -F "-" '{print $1}')
          platform=$(echo ${{ matrix.k8s }} | awk -F "-" '{print $2}')
          echo "k8s_version=$version" >> $GITHUB_OUTPUT
          echo "k8s_platform=$platform" >> $GITHUB_OUTPUT

      - uses: ./.github/actions/gen-install-scripts
        with:
          IMAGE_URL: ${{ needs.prepare-e2e-image.outputs.image_url }}
          VERSION: ${{ needs.prepare-e2e-image.outputs.tag }}
          ENV: dev

      - if: ${{ steps.properties.outputs.k8s_platform == 'kind' }}
        uses: helm/kind-action@v1.12.0
        with:
          version: v0.26.0
          config: test/helper/e2e/config/kind.yaml
          node_image: kindest/node:${{ steps.properties.outputs.k8s_version }}
          cluster_name: ${{ matrix.test }}-${{ matrix.k8s }}
          wait: 180s

      - run: devbox run -- kubectl version
      - run: devbox run -- ./scripts/launch-ci-e2e.sh
        env:
          TEST_NAME: ${{ matrix.test }}
          IMAGE_PULL_SECRET_REGISTRY: ghcr.io
          IMAGE_URL: ${{ needs.prepare-e2e-image.outputs.image_url }}
          IMAGE_PULL_SECRET_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          IMAGE_PULL_SECRET_PASSWORD: "${{ secrets.GITHUB_TOKEN }}"

      - if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: output/**
