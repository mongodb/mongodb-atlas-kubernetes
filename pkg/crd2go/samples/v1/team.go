// Code generated by crd2go. DO NOT EDIT.

package v1

import metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"

func init() {
	SchemeBuilder.Register(&Team{})
	SchemeBuilder.Register(&TeamList{})
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

type Team struct {
	metav1.TypeMeta `json:",inline"`

	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec TeamSpec `json:"spec,omitempty"`

	Status TeamStatus `json:"status,omitempty"`
}

type TeamSpec struct {
	// V20250312 The spec of the team resource for version v20250312.
	V20250312 *TeamSpecV20250312 `json:"v20250312,omitempty"`
}

type TeamSpecV20250312 struct {
	// Entry The entry fields of the team resource spec. These fields can be set for
	// creating and updating teams.
	Entry *TeamSpecV20250312Entry `json:"entry,omitempty"`

	// OrgId Unique 24-hexadecimal digit string that identifies the organization that
	// contains your projects. Use the
	// [/orgs](#tag/Organizations/operation/listOrganizations) endpoint to retrieve all
	// organizations to which the authenticated user has access.
	OrgId string `json:"orgId"`
}

type TeamSpecV20250312Entry struct {
	// Name Human-readable label that identifies the team.
	Name string `json:"name"`

	// Usernames List that contains the MongoDB Cloud users in this team.
	Usernames []string `json:"usernames"`
}

type TeamStatus struct {
	// Conditions Represents the latest available observations of a resource's current
	// state.
	Conditions *[]metav1.Condition `json:"conditions,omitempty"`

	// V20250312 The last observed Atlas state of the team resource for version
	// v20250312.
	V20250312 *TeamStatusV20250312 `json:"v20250312,omitempty"`
}

type TeamStatusV20250312 struct {
	// Id Unique 24-hexadecimal digit string that identifies this team.
	Id *string `json:"id,omitempty"`
}

// +kubebuilder:object:root=true
type TeamList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Team `json:"items"`
}
