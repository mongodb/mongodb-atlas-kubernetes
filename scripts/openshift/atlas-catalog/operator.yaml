---
defaultChannel: beta
name: mongodb-atlas-kubernetes
schema: olm.package
---
image: docker.io/ikarpukhin/mongodb-atlas-controller-bundle:0.5.0
name: mongodb-atlas-kubernetes.v0.5.0
package: mongodb-atlas-kubernetes
properties:
- type: olm.gvk
  value:
    group: atlas.mongodb.com
    kind: AtlasDeployment
    version: v1
- type: olm.gvk
  value:
    group: atlas.mongodb.com
    kind: AtlasDatabaseUser
    version: v1
- type: olm.gvk
  value:
    group: atlas.mongodb.com
    kind: AtlasProject
    version: v1
- type: olm.package
  value:
    packageName: mongodb-atlas-kubernetes
    version: 0.5.0
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50IjoiY29udHJvbGxlciIsImFwcC5rdWJlcm5ldGVzLmlvL2luc3RhbmNlIjoibW9uZ29kYi1hdGxhcy1rdWJlcm5ldGVzLW9wZXJhdG9yIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6Im1vbmdvZGItYXRsYXMta3ViZXJuZXRlcy1vcGVyYXRvciJ9LCJuYW1lIjoibW9uZ29kYi1hdGxhcy1jb250cm9sbGVyLW1hbmFnZXItbWV0cmljcy1zZXJ2aWNlIn0sInNwZWMiOnsicG9ydHMiOlt7Im5hbWUiOiJodHRwcyIsInBvcnQiOjg0NDMsInRhcmdldFBvcnQiOiJodHRwcyJ9XSwic2VsZWN0b3IiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50IjoiY29udHJvbGxlciIsImFwcC5rdWJlcm5ldGVzLmlvL2luc3RhbmNlIjoibW9uZ29kYi1hdGxhcy1rdWJlcm5ldGVzLW9wZXJhdG9yIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6Im1vbmdvZGItYXRsYXMta3ViZXJuZXRlcy1vcGVyYXRvciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ==
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibW9uZ29kYi1hdGxhcy1tZXRyaWNzLXJlYWRlciJ9LCJydWxlcyI6W3sibm9uUmVzb3VyY2VVUkxzIjpbIi9tZXRyaWNzIl0sInZlcmJzIjpbImdldCJdfV19
relatedImages:
- image: docker.io/ikarpukhin/mongodb-atlas-controller-bundle:0.5.0
  name: ""
- image: docker.io/ikarpukhin/mongodb-atlas-operator:0.5.0
  name: ""
schema: olm.bundle
