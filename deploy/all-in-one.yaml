apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: mongodb-atlas-kubernetes-operator
    app.kubernetes.io/name: mongodb-atlas-kubernetes-operator
  name: mongodb-atlas-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: mongodb-atlas-kubernetes-operator
    app.kubernetes.io/name: mongodb-atlas-kubernetes-operator
  name: atlasbackuppolicies.atlas.mongodb.com
spec:
  group: atlas.mongodb.com
  names:
    kind: AtlasBackupPolicy
    listKind: AtlasBackupPolicyList
    plural: atlasbackuppolicies
    singular: atlasbackuppolicy
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: AtlasBackupPolicy is the Schema for the atlasbackuppolicies API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AtlasBackupPolicySpec defines the desired state of AtlasBackupPolicy
            properties:
              items:
                description: A list of BackupPolicy items
                items:
                  properties:
                    frequencyInterval:
                      description: Desired frequency of the new backup policy item
                        specified by FrequencyType. A value of 1 specifies the first
                        instance of the corresponding FrequencyType. The only accepted
                        value you can set for frequency interval with NVMe clusters
                        is 12.
                      enum:
                      - 1
                      - 2
                      - 3
                      - 4
                      - 5
                      - 6
                      - 7
                      - 8
                      - 9
                      - 10
                      - 11
                      - 12
                      - 13
                      - 14
                      - 15
                      - 16
                      - 17
                      - 18
                      - 19
                      - 20
                      - 21
                      - 22
                      - 23
                      - 24
                      - 25
                      - 26
                      - 27
                      - 28
                      - 40
                      type: integer
                    frequencyType:
                      description: 'Frequency associated with the backup policy item.
                        One of the following values: hourly, daily, weekly or monthly.
                        You cannot specify multiple hourly and daily backup policy
                        items.'
                      enum:
                      - hourly
                      - daily
                      - weekly
                      - monthly
                      type: string
                    retentionUnit:
                      description: 'Scope of the backup policy item: days, weeks,
                        or months'
                      enum:
                      - days
                      - weeks
                      - months
                      type: string
                    retentionValue:
                      description: Value to associate with RetentionUnit
                      type: integer
                  required:
                  - frequencyInterval
                  - frequencyType
                  - retentionUnit
                  - retentionValue
                  type: object
                type: array
            required:
            - items
            type: object
          status:
            properties:
              backupScheduleIDs:
                description: DeploymentID of the deployment using the backup policy
                items:
                  type: string
                type: array
              conditions:
                description: Conditions is the list of statuses showing the current
                  state of the Atlas Custom Resource
                items:
                  description: Condition describes the state of an Atlas Custom Resource
                    at a certain point.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of Atlas Custom Resource condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration indicates the generation of the resource
                  specification that the Atlas Operator is aware of. The Atlas Operator
                  updates this field to the 'metadata.generation' as soon as it starts
                  reconciliation of the resource.
                format: int64
                type: integer
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: mongodb-atlas-kubernetes-operator
    app.kubernetes.io/name: mongodb-atlas-kubernetes-operator
  name: atlasbackupschedules.atlas.mongodb.com
spec:
  group: atlas.mongodb.com
  names:
    kind: AtlasBackupSchedule
    listKind: AtlasBackupScheduleList
    plural: atlasbackupschedules
    singular: atlasbackupschedule
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: AtlasBackupSchedule is the Schema for the atlasbackupschedules
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AtlasBackupScheduleSpec defines the desired state of AtlasBackupSchedule
            properties:
              autoExportEnabled:
                default: false
                description: Specify true to enable automatic export of cloud backup
                  snapshots to the AWS bucket. You must also define the export policy
                  using export. If omitted, defaults to false.
                type: boolean
              copySettings:
                description: Copy backups to other regions for increased resiliency
                  and faster restores.
                items:
                  properties:
                    cloudProvider:
                      default: AWS
                      description: Identifies the cloud provider that stores the snapshot
                        copy.
                      enum:
                      - AWS
                      - GCP
                      - AZURE
                      type: string
                    frequencies:
                      description: List that describes which types of snapshots to
                        copy.
                      items:
                        type: string
                      minItems: 1
                      type: array
                    regionName:
                      description: Target region to copy snapshots belonging to replicationSpecId
                        to.
                      type: string
                    replicationSpecId:
                      description: Unique identifier that identifies the replication
                        object for a zone in a cluster.
                      type: string
                    shouldCopyOplogs:
                      description: Flag that indicates whether to copy the oplogs
                        to the target region.
                      type: boolean
                  type: object
                type: array
              export:
                description: Export policy for automatically exporting cloud backup
                  snapshots to AWS bucket.
                properties:
                  exportBucketId:
                    description: Unique identifier of the AWS bucket to export the
                      cloud backup snapshot to.
                    type: string
                  frequencyType:
                    default: MONTHLY
                    enum:
                    - MONTHLY
                    type: string
                required:
                - exportBucketId
                - frequencyType
                type: object
              policy:
                description: A reference (name & namespace) for backup policy in the
                  desired updated backup policy.
                properties:
                  name:
                    description: Name is the name of the Kubernetes Resource
                    type: string
                  namespace:
                    description: Namespace is the namespace of the Kubernetes Resource
                    type: string
                required:
                - name
                type: object
              referenceHourOfDay:
                description: UTC Hour of day between 0 and 23, inclusive, representing
                  which hour of the day that Atlas takes snapshots for backup policy
                  items
                format: int64
                maximum: 23
                minimum: 0
                type: integer
              referenceMinuteOfHour:
                description: UTC Minutes after ReferenceHourOfDay that Atlas takes
                  snapshots for backup policy items. Must be between 0 and 59, inclusive.
                format: int64
                maximum: 59
                minimum: 0
                type: integer
              restoreWindowDays:
                default: 1
                description: Number of days back in time you can restore to with Continuous
                  Cloud Backup accuracy. Must be a positive, non-zero integer. Applies
                  to continuous cloud backups only.
                format: int64
                type: integer
              updateSnapshots:
                description: Specify true to apply the retention changes in the updated
                  backup policy to snapshots that Atlas took previously.
                type: boolean
              useOrgAndGroupNamesInExportPrefix:
                description: Specify true to use organization and project names instead
                  of organization and project UUIDs in the path for the metadata files
                  that Atlas uploads to your S3 bucket after it finishes exporting
                  the snapshots
                type: boolean
            required:
            - policy
            type: object
          status:
            properties:
              conditions:
                description: Conditions is the list of statuses showing the current
                  state of the Atlas Custom Resource
                items:
                  description: Condition describes the state of an Atlas Custom Resource
                    at a certain point.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of Atlas Custom Resource condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              deploymentID:
                items:
                  type: string
                type: array
              observedGeneration:
                description: ObservedGeneration indicates the generation of the resource
                  specification that the Atlas Operator is aware of. The Atlas Operator
                  updates this field to the 'metadata.generation' as soon as it starts
                  reconciliation of the resource.
                format: int64
                type: integer
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: mongodb-atlas-kubernetes-operator
    app.kubernetes.io/name: mongodb-atlas-kubernetes-operator
  name: atlasdatabaseusers.atlas.mongodb.com
spec:
  group: atlas.mongodb.com
  names:
    kind: AtlasDatabaseUser
    listKind: AtlasDatabaseUserList
    plural: atlasdatabaseusers
    singular: atlasdatabaseuser
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.name
      name: Name
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: AtlasDatabaseUser is the Schema for the Atlas Database User API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AtlasDatabaseUserSpec defines the desired state of Database
              User in Atlas
            properties:
              databaseName:
                default: admin
                description: DatabaseName is a Database against which Atlas authenticates
                  the user. Default value is 'admin'.
                type: string
              deleteAfterDate:
                description: DeleteAfterDate is a timestamp in ISO 8601 date and time
                  format in UTC after which Atlas deletes the user. The specified
                  date must be in the future and within one week.
                type: string
              labels:
                description: Labels is an array containing key-value pairs that tag
                  and categorize the database user. Each key and value has a maximum
                  length of 255 characters.
                items:
                  description: LabelSpec contains key-value pairs that tag and categorize
                    the Cluster/DBUser
                  properties:
                    key:
                      maxLength: 255
                      type: string
                    value:
                      type: string
                  required:
                  - key
                  - value
                  type: object
                type: array
              passwordSecretRef:
                description: PasswordSecret is a reference to the Secret keeping the
                  user password.
                properties:
                  name:
                    description: Name is the name of the Kubernetes Resource
                    type: string
                required:
                - name
                type: object
              projectRef:
                description: Project is a reference to AtlasProject resource the user
                  belongs to
                properties:
                  name:
                    description: Name is the name of the Kubernetes Resource
                    type: string
                  namespace:
                    description: Namespace is the namespace of the Kubernetes Resource
                    type: string
                required:
                - name
                type: object
              roles:
                description: Roles is an array of this user's roles and the databases
                  / collections on which the roles apply. A role allows the user to
                  perform particular actions on the specified database.
                items:
                  description: RoleSpec allows the user to perform particular actions
                    on the specified database. A role on the admin database can include
                    privileges that apply to the other databases as well.
                  properties:
                    collectionName:
                      description: CollectionName is a collection for which the role
                        applies.
                      type: string
                    databaseName:
                      description: DatabaseName is a database on which the user has
                        the specified role. A role on the admin database can include
                        privileges that apply to the other databases.
                      type: string
                    roleName:
                      description: RoleName is a name of the role. This value can
                        either be a built-in role or a custom role.
                      type: string
                  required:
                  - databaseName
                  - roleName
                  type: object
                minItems: 1
                type: array
              scopes:
                description: Scopes is an array of clusters and Atlas Data Lakes that
                  this user has access to.
                items:
                  description: ScopeSpec if present a database user only have access
                    to the indicated resource (Cluster or Atlas Data Lake) if none
                    is given then it has access to all. It's highly recommended to
                    restrict the access of the database users only to a limited set
                    of resources.
                  properties:
                    name:
                      description: Name is a name of the cluster or Atlas Data Lake
                        that the user has access to.
                      type: string
                    type:
                      description: Type is a type of resource that the user has access
                        to.
                      enum:
                      - CLUSTER
                      - DATA_LAKE
                      type: string
                  required:
                  - name
                  - type
                  type: object
                type: array
              username:
                description: Username is a username for authenticating to MongoDB.
                type: string
              x509Type:
                description: X509Type is X.509 method by which the database authenticates
                  the provided username
                type: string
            required:
            - projectRef
            - roles
            - username
            type: object
          status:
            description: AtlasDatabaseUserStatus defines the observed state of AtlasProject
            properties:
              conditions:
                description: Conditions is the list of statuses showing the current
                  state of the Atlas Custom Resource
                items:
                  description: Condition describes the state of an Atlas Custom Resource
                    at a certain point.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of Atlas Custom Resource condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              name:
                description: UserName is the current name of database user.
                type: string
              observedGeneration:
                description: ObservedGeneration indicates the generation of the resource
                  specification that the Atlas Operator is aware of. The Atlas Operator
                  updates this field to the 'metadata.generation' as soon as it starts
                  reconciliation of the resource.
                format: int64
                type: integer
              passwordVersion:
                description: PasswordVersion is the 'ResourceVersion' of the password
                  Secret that the Atlas Operator is aware of
                type: string
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: mongodb-atlas-kubernetes-operator
    app.kubernetes.io/name: mongodb-atlas-kubernetes-operator
  name: atlasdeployments.atlas.mongodb.com
spec:
  group: atlas.mongodb.com
  names:
    kind: AtlasDeployment
    listKind: AtlasDeploymentList
    plural: atlasdeployments
    singular: atlasdeployment
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: AtlasDeployment is the Schema for the atlasdeployments API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AtlasDeploymentSpec defines the desired state of AtlasDeployment
              Only one of DeploymentSpec, AdvancedDeploymentSpec and ServerlessSpec
              should be defined
            properties:
              advancedDeploymentSpec:
                description: Configuration for the advanced (v1.5) deployment API
                  https://www.mongodb.com/docs/atlas/reference/api/clusters-advanced/
                properties:
                  backupEnabled:
                    type: boolean
                  biConnector:
                    description: BiConnectorSpec specifies BI Connector for Atlas
                      configuration on this deployment
                    properties:
                      enabled:
                        description: Flag that indicates whether or not BI Connector
                          for Atlas is enabled on the deployment.
                        type: boolean
                      readPreference:
                        description: Source from which the BI Connector for Atlas
                          reads data. Each BI Connector for Atlas read preference
                          contains a distinct combination of readPreference and readPreferenceTags
                          options.
                        type: string
                    type: object
                  clusterType:
                    type: string
                  customZoneMapping:
                    items:
                      properties:
                        location:
                          type: string
                        zone:
                          type: string
                      required:
                      - location
                      - zone
                      type: object
                    type: array
                  diskSizeGB:
                    type: integer
                  encryptionAtRestProvider:
                    type: string
                  labels:
                    items:
                      description: LabelSpec contains key-value pairs that tag and
                        categorize the Cluster/DBUser
                      properties:
                        key:
                          maxLength: 255
                          type: string
                        value:
                          type: string
                      required:
                      - key
                      - value
                      type: object
                    type: array
                  managedNamespaces:
                    items:
                      description: ManagedNamespace represents the information about
                        managed namespace configuration.
                      properties:
                        collection:
                          type: string
                        customShardKey:
                          type: string
                        db:
                          type: string
                        isCustomShardKeyHashed:
                          type: boolean
                        isShardKeyUnique:
                          type: boolean
                        numInitialChunks:
                          type: integer
                        presplitHashedZones:
                          type: boolean
                      required:
                      - collection
                      - db
                      type: object
                    type: array
                  mongoDBMajorVersion:
                    type: string
                  mongoDBVersion:
                    type: string
                  name:
                    description: Name of the advanced deployment as it appears in
                      Atlas. After Atlas creates the deployment, you can't change
                      its name. Can only contain ASCII letters, numbers, and hyphens.
                    pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
                    type: string
                  paused:
                    type: boolean
                  pitEnabled:
                    type: boolean
                  replicationSpecs:
                    items:
                      properties:
                        numShards:
                          type: integer
                        regionConfigs:
                          items:
                            properties:
                              analyticsSpecs:
                                properties:
                                  diskIOPS:
                                    format: int64
                                    type: integer
                                  ebsVolumeType:
                                    type: string
                                  instanceSize:
                                    type: string
                                  nodeCount:
                                    type: integer
                                type: object
                              autoScaling:
                                description: AdvancedAutoScalingSpec configures your
                                  deployment to automatically scale its storage
                                properties:
                                  compute:
                                    description: Collection of settings that configure
                                      how a deployment might scale its deployment
                                      tier and whether the deployment can scale down.
                                    properties:
                                      enabled:
                                        description: Flag that indicates whether deployment
                                          tier auto-scaling is enabled. The default
                                          is false.
                                        type: boolean
                                      maxInstanceSize:
                                        description: 'Maximum instance size to which
                                          your deployment can automatically scale
                                          (such as M40). Atlas requires this parameter
                                          if "autoScaling.compute.enabled" : true.'
                                        type: string
                                      minInstanceSize:
                                        description: 'Minimum instance size to which
                                          your deployment can automatically scale
                                          (such as M10). Atlas requires this parameter
                                          if "autoScaling.compute.scaleDownEnabled"
                                          : true.'
                                        type: string
                                      scaleDownEnabled:
                                        description: 'Flag that indicates whether
                                          the deployment tier may scale down. Atlas
                                          requires this parameter if "autoScaling.compute.enabled"
                                          : true.'
                                        type: boolean
                                    type: object
                                  diskGB:
                                    description: Flag that indicates whether disk
                                      auto-scaling is enabled. The default is true.
                                    properties:
                                      enabled:
                                        type: boolean
                                    type: object
                                type: object
                              backingProviderName:
                                type: string
                              electableSpecs:
                                properties:
                                  diskIOPS:
                                    format: int64
                                    type: integer
                                  ebsVolumeType:
                                    type: string
                                  instanceSize:
                                    type: string
                                  nodeCount:
                                    type: integer
                                type: object
                              priority:
                                type: integer
                              providerName:
                                type: string
                              readOnlySpecs:
                                properties:
                                  diskIOPS:
                                    format: int64
                                    type: integer
                                  ebsVolumeType:
                                    type: string
                                  instanceSize:
                                    type: string
                                  nodeCount:
                                    type: integer
                                type: object
                              regionName:
                                type: string
                            type: object
                          type: array
                        zoneName:
                          type: string
                      type: object
                    type: array
                  rootCertType:
                    type: string
                  versionReleaseSystem:
                    type: string
                type: object
              backupRef:
                description: Backup schedule for the AtlasDeployment
                properties:
                  name:
                    description: Name is the name of the Kubernetes Resource
                    type: string
                  namespace:
                    description: Namespace is the namespace of the Kubernetes Resource
                    type: string
                required:
                - name
                type: object
              deploymentSpec:
                description: Configuration for the normal (v1) deployment API https://www.mongodb.com/docs/atlas/reference/api/clusters/
                properties:
                  autoScaling:
                    description: Collection of settings that configures auto-scaling
                      information for the deployment. If you specify the autoScaling
                      object, you must also specify the providerSettings.autoScaling
                      object.
                    properties:
                      autoIndexingEnabled:
                        description: 'Deprecated: This flag is not supported anymore.
                          Flag that indicates whether autopilot mode for Performance
                          Advisor is enabled. The default is false.'
                        type: boolean
                      compute:
                        description: Collection of settings that configure how a deployment
                          might scale its deployment tier and whether the deployment
                          can scale down.
                        properties:
                          enabled:
                            description: Flag that indicates whether deployment tier
                              auto-scaling is enabled. The default is false.
                            type: boolean
                          maxInstanceSize:
                            description: 'Maximum instance size to which your deployment
                              can automatically scale (such as M40). Atlas requires
                              this parameter if "autoScaling.compute.enabled" : true.'
                            type: string
                          minInstanceSize:
                            description: 'Minimum instance size to which your deployment
                              can automatically scale (such as M10). Atlas requires
                              this parameter if "autoScaling.compute.scaleDownEnabled"
                              : true.'
                            type: string
                          scaleDownEnabled:
                            description: 'Flag that indicates whether the deployment
                              tier may scale down. Atlas requires this parameter if
                              "autoScaling.compute.enabled" : true.'
                            type: boolean
                        type: object
                      diskGBEnabled:
                        description: Flag that indicates whether disk auto-scaling
                          is enabled. The default is true.
                        type: boolean
                    type: object
                  biConnector:
                    description: Configuration of BI Connector for Atlas on this deployment.
                      The MongoDB Connector for Business Intelligence for Atlas (BI
                      Connector) is only available for M10 and larger deployments.
                    properties:
                      enabled:
                        description: Flag that indicates whether or not BI Connector
                          for Atlas is enabled on the deployment.
                        type: boolean
                      readPreference:
                        description: Source from which the BI Connector for Atlas
                          reads data. Each BI Connector for Atlas read preference
                          contains a distinct combination of readPreference and readPreferenceTags
                          options.
                        type: string
                    type: object
                  clusterType:
                    description: Type of the deployment that you want to create. The
                      parameter is required if replicationSpecs are set or if Global
                      Deployments are deployed.
                    enum:
                    - REPLICASET
                    - SHARDED
                    - GEOSHARDED
                    type: string
                  customZoneMapping:
                    items:
                      properties:
                        location:
                          type: string
                        zone:
                          type: string
                      required:
                      - location
                      - zone
                      type: object
                    type: array
                  diskSizeGB:
                    description: Capacity, in gigabytes, of the host's root volume.
                      Increase this number to add capacity, up to a maximum possible
                      value of 4096 (i.e., 4 TB). This value must be a positive integer.
                      The parameter is required if replicationSpecs are configured.
                    maximum: 4096
                    minimum: 0
                    type: integer
                  encryptionAtRestProvider:
                    description: Cloud service provider that offers Encryption at
                      Rest.
                    enum:
                    - AWS
                    - GCP
                    - AZURE
                    - NONE
                    type: string
                  labels:
                    description: Collection of key-value pairs that tag and categorize
                      the deployment. Each key and value has a maximum length of 255
                      characters.
                    items:
                      description: LabelSpec contains key-value pairs that tag and
                        categorize the Cluster/DBUser
                      properties:
                        key:
                          maxLength: 255
                          type: string
                        value:
                          type: string
                      required:
                      - key
                      - value
                      type: object
                    type: array
                  managedNamespaces:
                    items:
                      description: ManagedNamespace represents the information about
                        managed namespace configuration.
                      properties:
                        collection:
                          type: string
                        customShardKey:
                          type: string
                        db:
                          type: string
                        isCustomShardKeyHashed:
                          type: boolean
                        isShardKeyUnique:
                          type: boolean
                        numInitialChunks:
                          type: integer
                        presplitHashedZones:
                          type: boolean
                      required:
                      - collection
                      - db
                      type: object
                    type: array
                  mongoDBMajorVersion:
                    description: Version of the deployment to deploy.
                    type: string
                  name:
                    description: Name of the deployment as it appears in Atlas. After
                      Atlas creates the deployment, you can't change its name. Can
                      only contain ASCII letters, numbers, and hyphens.
                    pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
                    type: string
                  numShards:
                    description: Positive integer that specifies the number of shards
                      to deploy for a sharded deployment. The parameter is required
                      if replicationSpecs are configured
                    maximum: 50
                    minimum: 1
                    type: integer
                  paused:
                    description: Flag that indicates whether the deployment should
                      be paused.
                    type: boolean
                  pitEnabled:
                    description: Flag that indicates the deployment uses continuous
                      cloud backups.
                    type: boolean
                  providerBackupEnabled:
                    description: Applicable only for M10+ deployments. Flag that indicates
                      if the deployment uses Cloud Backups for backups.
                    type: boolean
                  providerSettings:
                    description: Configuration for the provisioned hosts on which
                      MongoDB runs. The available options are specific to the cloud
                      service provider.
                    properties:
                      autoScaling:
                        description: Range of instance sizes to which your deployment
                          can scale.
                        properties:
                          autoIndexingEnabled:
                            description: 'Deprecated: This flag is not supported anymore.
                              Flag that indicates whether autopilot mode for Performance
                              Advisor is enabled. The default is false.'
                            type: boolean
                          compute:
                            description: Collection of settings that configure how
                              a deployment might scale its deployment tier and whether
                              the deployment can scale down.
                            properties:
                              enabled:
                                description: Flag that indicates whether deployment
                                  tier auto-scaling is enabled. The default is false.
                                type: boolean
                              maxInstanceSize:
                                description: 'Maximum instance size to which your
                                  deployment can automatically scale (such as M40).
                                  Atlas requires this parameter if "autoScaling.compute.enabled"
                                  : true.'
                                type: string
                              minInstanceSize:
                                description: 'Minimum instance size to which your
                                  deployment can automatically scale (such as M10).
                                  Atlas requires this parameter if "autoScaling.compute.scaleDownEnabled"
                                  : true.'
                                type: string
                              scaleDownEnabled:
                                description: 'Flag that indicates whether the deployment
                                  tier may scale down. Atlas requires this parameter
                                  if "autoScaling.compute.enabled" : true.'
                                type: boolean
                            type: object
                          diskGBEnabled:
                            description: Flag that indicates whether disk auto-scaling
                              is enabled. The default is true.
                            type: boolean
                        type: object
                      backingProviderName:
                        description: 'Cloud service provider on which the host for
                          a multi-tenant deployment is provisioned. This setting only
                          works when "providerSetting.providerName" : "TENANT" and
                          "providerSetting.instanceSizeName" : M2 or M5.'
                        enum:
                        - AWS
                        - GCP
                        - AZURE
                        type: string
                      diskIOPS:
                        description: Disk IOPS setting for AWS storage. Set only if
                          you selected AWS as your cloud service provider.
                        format: int64
                        type: integer
                      diskTypeName:
                        description: Type of disk if you selected Azure as your cloud
                          service provider.
                        type: string
                      encryptEBSVolume:
                        description: Flag that indicates whether the Amazon EBS encryption
                          feature encrypts the host's root volume for both data at
                          rest within the volume and for data moving between the volume
                          and the deployment.
                        type: boolean
                      instanceSizeName:
                        description: Atlas provides different deployment tiers, each
                          with a default storage capacity and RAM size. The deployment
                          you select is used for all the data-bearing hosts in your
                          deployment tier.
                        type: string
                      providerName:
                        description: Cloud service provider on which Atlas provisions
                          the hosts.
                        enum:
                        - AWS
                        - GCP
                        - AZURE
                        - TENANT
                        - SERVERLESS
                        type: string
                      regionName:
                        description: Physical location of your MongoDB deployment.
                          The region you choose can affect network latency for clients
                          accessing your databases.
                        type: string
                      volumeType:
                        description: Disk IOPS setting for AWS storage. Set only if
                          you selected AWS as your cloud service provider.
                        enum:
                        - STANDARD
                        - PROVISIONED
                        type: string
                    required:
                    - providerName
                    type: object
                  replicationSpecs:
                    description: Configuration for deployment regions.
                    items:
                      description: ReplicationSpec represents a configuration for
                        deployment regions
                      properties:
                        numShards:
                          description: Number of shards to deploy in each specified
                            zone. The default value is 1.
                          format: int64
                          type: integer
                        regionsConfig:
                          additionalProperties:
                            description: RegionsConfig describes the region’s priority
                              in elections and the number and type of MongoDB nodes
                              Atlas deploys to the region.
                            properties:
                              analyticsNodes:
                                description: The number of analytics nodes for Atlas
                                  to deploy to the region. Analytics nodes are useful
                                  for handling analytic data such as reporting queries
                                  from BI Connector for Atlas. Analytics nodes are
                                  read-only, and can never become the primary. If
                                  you do not specify this option, no analytics nodes
                                  are deployed to the region.
                                format: int64
                                type: integer
                              electableNodes:
                                description: Number of electable nodes for Atlas to
                                  deploy to the region. Electable nodes can become
                                  the primary and can facilitate local reads.
                                format: int64
                                type: integer
                              priority:
                                description: Election priority of the region. For
                                  regions with only replicationSpecs[n].regionsConfig.<region>.readOnlyNodes,
                                  set this value to 0.
                                format: int64
                                type: integer
                              readOnlyNodes:
                                description: Number of read-only nodes for Atlas to
                                  deploy to the region. Read-only nodes can never
                                  become the primary, but can facilitate local-reads.
                                format: int64
                                type: integer
                            type: object
                          description: Configuration for a region. Each regionsConfig
                            object describes the region's priority in elections and
                            the number and type of MongoDB nodes that Atlas deploys
                            to the region.
                          type: object
                        zoneName:
                          description: Name for the zone in a Global Deployment. Don't
                            provide this value if deploymentType is not GEOSHARDED.
                          type: string
                      type: object
                    type: array
                required:
                - name
                - providerSettings
                type: object
              processArgs:
                description: ProcessArgs allows to modify Advanced Configuration Options
                properties:
                  defaultReadConcern:
                    type: string
                  defaultWriteConcern:
                    type: string
                  failIndexKeyTooLong:
                    type: boolean
                  javascriptEnabled:
                    type: boolean
                  minimumEnabledTlsProtocol:
                    type: string
                  noTableScan:
                    type: boolean
                  oplogMinRetentionHours:
                    type: string
                  oplogSizeMB:
                    format: int64
                    type: integer
                  sampleRefreshIntervalBIConnector:
                    format: int64
                    type: integer
                  sampleSizeBIConnector:
                    format: int64
                    type: integer
                type: object
              projectRef:
                description: Project is a reference to AtlasProject resource the deployment
                  belongs to
                properties:
                  name:
                    description: Name is the name of the Kubernetes Resource
                    type: string
                  namespace:
                    description: Namespace is the namespace of the Kubernetes Resource
                    type: string
                required:
                - name
                type: object
              serverlessSpec:
                description: Configuration for the serverless deployment API. https://www.mongodb.com/docs/atlas/reference/api/serverless-instances/
                properties:
                  name:
                    description: Name of the serverless deployment as it appears in
                      Atlas. After Atlas creates the deployment, you can't change
                      its name. Can only contain ASCII letters, numbers, and hyphens.
                    pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
                    type: string
                  privateEndpoints:
                    items:
                      properties:
                        cloudProviderEndpointID:
                          description: CloudProviderEndpointID is the identifier of
                            the cloud provider endpoint.
                          type: string
                        name:
                          description: Name is the name of the Serverless PrivateLink
                            Service. Should be unique.
                          type: string
                        privateEndpointIpAddress:
                          description: PrivateEndpointIPAddress is the IPv4 address
                            of the private endpoint in your Azure VNet that someone
                            added to this private endpoint service.
                          type: string
                      type: object
                    type: array
                  providerSettings:
                    description: Configuration for the provisioned hosts on which
                      MongoDB runs. The available options are specific to the cloud
                      service provider.
                    properties:
                      autoScaling:
                        description: Range of instance sizes to which your deployment
                          can scale.
                        properties:
                          autoIndexingEnabled:
                            description: 'Deprecated: This flag is not supported anymore.
                              Flag that indicates whether autopilot mode for Performance
                              Advisor is enabled. The default is false.'
                            type: boolean
                          compute:
                            description: Collection of settings that configure how
                              a deployment might scale its deployment tier and whether
                              the deployment can scale down.
                            properties:
                              enabled:
                                description: Flag that indicates whether deployment
                                  tier auto-scaling is enabled. The default is false.
                                type: boolean
                              maxInstanceSize:
                                description: 'Maximum instance size to which your
                                  deployment can automatically scale (such as M40).
                                  Atlas requires this parameter if "autoScaling.compute.enabled"
                                  : true.'
                                type: string
                              minInstanceSize:
                                description: 'Minimum instance size to which your
                                  deployment can automatically scale (such as M10).
                                  Atlas requires this parameter if "autoScaling.compute.scaleDownEnabled"
                                  : true.'
                                type: string
                              scaleDownEnabled:
                                description: 'Flag that indicates whether the deployment
                                  tier may scale down. Atlas requires this parameter
                                  if "autoScaling.compute.enabled" : true.'
                                type: boolean
                            type: object
                          diskGBEnabled:
                            description: Flag that indicates whether disk auto-scaling
                              is enabled. The default is true.
                            type: boolean
                        type: object
                      backingProviderName:
                        description: 'Cloud service provider on which the host for
                          a multi-tenant deployment is provisioned. This setting only
                          works when "providerSetting.providerName" : "TENANT" and
                          "providerSetting.instanceSizeName" : M2 or M5.'
                        enum:
                        - AWS
                        - GCP
                        - AZURE
                        type: string
                      diskIOPS:
                        description: Disk IOPS setting for AWS storage. Set only if
                          you selected AWS as your cloud service provider.
                        format: int64
                        type: integer
                      diskTypeName:
                        description: Type of disk if you selected Azure as your cloud
                          service provider.
                        type: string
                      encryptEBSVolume:
                        description: Flag that indicates whether the Amazon EBS encryption
                          feature encrypts the host's root volume for both data at
                          rest within the volume and for data moving between the volume
                          and the deployment.
                        type: boolean
                      instanceSizeName:
                        description: Atlas provides different deployment tiers, each
                          with a default storage capacity and RAM size. The deployment
                          you select is used for all the data-bearing hosts in your
                          deployment tier.
                        type: string
                      providerName:
                        description: Cloud service provider on which Atlas provisions
                          the hosts.
                        enum:
                        - AWS
                        - GCP
                        - AZURE
                        - TENANT
                        - SERVERLESS
                        type: string
                      regionName:
                        description: Physical location of your MongoDB deployment.
                          The region you choose can affect network latency for clients
                          accessing your databases.
                        type: string
                      volumeType:
                        description: Disk IOPS setting for AWS storage. Set only if
                          you selected AWS as your cloud service provider.
                        enum:
                        - STANDARD
                        - PROVISIONED
                        type: string
                    required:
                    - providerName
                    type: object
                required:
                - name
                - providerSettings
                type: object
            required:
            - projectRef
            type: object
          status:
            description: AtlasDeploymentStatus defines the observed state of AtlasDeployment.
            properties:
              conditions:
                description: Conditions is the list of statuses showing the current
                  state of the Atlas Custom Resource
                items:
                  description: Condition describes the state of an Atlas Custom Resource
                    at a certain point.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of Atlas Custom Resource condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              connectionStrings:
                description: ConnectionStrings is a set of connection strings that
                  your applications use to connect to this cluster.
                properties:
                  private:
                    description: Network-peering-endpoint-aware mongodb:// connection
                      strings for each interface VPC endpoint you configured to connect
                      to this cluster. Atlas returns this parameter only if you created
                      a network peering connection to this cluster.
                    type: string
                  privateEndpoint:
                    description: Private endpoint connection strings. Each object
                      describes the connection strings you can use to connect to this
                      cluster through a private endpoint. Atlas returns this parameter
                      only if you deployed a private endpoint to all regions to which
                      you deployed this cluster's nodes.
                    items:
                      description: PrivateEndpoint connection strings. Each object
                        describes the connection strings you can use to connect to
                        this cluster through a private endpoint. Atlas returns this
                        parameter only if you deployed a private endpoint to all regions
                        to which you deployed this cluster's nodes.
                      properties:
                        connectionString:
                          description: Private-endpoint-aware mongodb:// connection
                            string for this private endpoint.
                          type: string
                        endpoints:
                          description: Private endpoint through which you connect
                            to Atlas when you use connectionStrings.privateEndpoint[n].connectionString
                            or connectionStrings.privateEndpoint[n].srvConnectionString.
                          items:
                            description: Endpoint through which you connect to Atlas
                            properties:
                              endpointId:
                                description: Unique identifier of the private endpoint.
                                type: string
                              ip:
                                description: Private IP address of the private endpoint
                                  network interface you created in your Azure VNet.
                                type: string
                              providerName:
                                description: Cloud provider to which you deployed
                                  the private endpoint. Atlas returns AWS or AZURE.
                                type: string
                              region:
                                description: Region to which you deployed the private
                                  endpoint.
                                type: string
                            type: object
                          type: array
                        srvConnectionString:
                          description: Private-endpoint-aware mongodb+srv:// connection
                            string for this private endpoint.
                          type: string
                        type:
                          description: "Type of MongoDB process that you connect to
                            with the connection strings \n Atlas returns: \n • MONGOD
                            for replica sets, or \n • MONGOS for sharded clusters"
                          type: string
                      type: object
                    type: array
                  privateSrv:
                    description: Network-peering-endpoint-aware mongodb+srv:// connection
                      strings for each interface VPC endpoint you configured to connect
                      to this cluster. Atlas returns this parameter only if you created
                      a network peering connection to this cluster. Use this URI format
                      if your driver supports it. If it doesn't, use connectionStrings.private.
                    type: string
                  standard:
                    description: Public mongodb:// connection string for this cluster.
                    type: string
                  standardSrv:
                    description: Public mongodb+srv:// connection string for this
                      cluster.
                    type: string
                type: object
              customZoneMapping:
                properties:
                  customZoneMapping:
                    additionalProperties:
                      type: string
                    type: object
                  zoneMappingErrMessage:
                    type: string
                  zoneMappingState:
                    type: string
                type: object
              managedNamespaces:
                items:
                  properties:
                    collection:
                      type: string
                    customShardKey:
                      type: string
                    db:
                      type: string
                    errMessage:
                      type: string
                    isCustomShardKeyHashed:
                      type: boolean
                    isShardKeyUnique:
                      type: boolean
                    numInitialChunks:
                      type: integer
                    presplitHashedZones:
                      type: boolean
                    status:
                      type: string
                  required:
                  - collection
                  - db
                  type: object
                type: array
              mongoDBVersion:
                description: MongoDBVersion is the version of MongoDB the cluster
                  runs, in <major version>.<minor version> format.
                type: string
              mongoURIUpdated:
                description: MongoURIUpdated is a timestamp in ISO 8601 date and time
                  format in UTC when the connection string was last updated. The connection
                  string changes if you update any of the other values.
                type: string
              observedGeneration:
                description: ObservedGeneration indicates the generation of the resource
                  specification that the Atlas Operator is aware of. The Atlas Operator
                  updates this field to the 'metadata.generation' as soon as it starts
                  reconciliation of the resource.
                format: int64
                type: integer
              replicaSets:
                items:
                  properties:
                    id:
                      type: string
                    zoneName:
                      type: string
                  required:
                  - id
                  type: object
                type: array
              serverlessPrivateEndpoints:
                items:
                  properties:
                    _id:
                      description: ID is the identifier of the Serverless PrivateLink
                        Service.
                      type: string
                    cloudProviderEndpointId:
                      description: CloudProviderEndpointID is the identifier of the
                        cloud provider endpoint.
                      type: string
                    endpointServiceName:
                      description: EndpointServiceName is the name of the PrivateLink
                        endpoint service in AWS. Returns null while the endpoint service
                        is being created.
                      type: string
                    errorMessage:
                      description: ErrorMessage is the error message if the Serverless
                        PrivateLink Service failed to create or connect.
                      type: string
                    name:
                      description: Name is the name of the Serverless PrivateLink
                        Service. Should be unique.
                      type: string
                    privateEndpointIpAddress:
                      description: PrivateEndpointIPAddress is the IPv4 address of
                        the private endpoint in your Azure VNet that someone added
                        to this private endpoint service.
                      type: string
                    privateLinkServiceResourceId:
                      description: PrivateLinkServiceResourceID is the root-relative
                        path that identifies the Azure Private Link Service that MongoDB
                        Cloud manages. MongoDB Cloud returns null while it creates
                        the endpoint service.
                      type: string
                    providerName:
                      description: ProviderName is human-readable label that identifies
                        the cloud provider. Values include AWS or AZURE.
                      type: string
                    status:
                      description: Status of the AWS Serverless PrivateLink connection.
                      type: string
                  type: object
                type: array
              stateName:
                description: 'StateName is the current state of the cluster. The possible
                  states are: IDLE, CREATING, UPDATING, DELETING, DELETED, REPAIRING'
                type: string
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: mongodb-atlas-kubernetes-operator
    app.kubernetes.io/name: mongodb-atlas-kubernetes-operator
  name: atlasprojects.atlas.mongodb.com
spec:
  group: atlas.mongodb.com
  names:
    kind: AtlasProject
    listKind: AtlasProjectList
    plural: atlasprojects
    singular: atlasproject
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.name
      name: Name
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: AtlasProject is the Schema for the atlasprojects API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AtlasProjectSpec defines the desired state of Project in
              Atlas
            properties:
              alertConfigurationSyncEnabled:
                description: AlertConfigurationSyncEnabled is a flag that enables/disables
                  Alert Configurations sync for the current Project. If true - project
                  alert configurations will be synced according to AlertConfigurations.
                  If not - alert configurations will not be modified by the operator.
                  They can be managed through API, cli, UI.
                type: boolean
              alertConfigurations:
                description: AlertConfiguration is a list of Alert Configurations
                  configured for the current Project.
                items:
                  properties:
                    enabled:
                      description: If omitted, the configuration is disabled.
                      type: boolean
                    eventTypeName:
                      description: The type of event that will trigger an alert.
                      type: string
                    matchers:
                      description: You can filter using the matchers array only when
                        the EventTypeName specifies an event for a host, replica set,
                        or sharded cluster.
                      items:
                        properties:
                          fieldName:
                            description: Name of the field in the target object to
                              match on.
                            type: string
                          operator:
                            description: The operator to test the field’s value.
                            type: string
                          value:
                            description: Value to test with the specified operator.
                            type: string
                        type: object
                      type: array
                    metricThreshold:
                      description: MetricThreshold  causes an alert to be triggered.
                      properties:
                        metricName:
                          description: Name of the metric to check.
                          type: string
                        mode:
                          description: This must be set to AVERAGE. Atlas computes
                            the current metric value as an average.
                          type: string
                        operator:
                          description: Operator to apply when checking the current
                            metric value against the threshold value.
                          type: string
                        threshold:
                          description: Threshold value outside which an alert will
                            be triggered.
                          type: string
                        units:
                          description: The units for the threshold value.
                          type: string
                      required:
                      - threshold
                      type: object
                    notifications:
                      description: Notifications are sending when an alert condition
                        is detected.
                      items:
                        properties:
                          apiToken:
                            description: Slack API token or Bot token. Populated for
                              the SLACK notifications type. If the token later becomes
                              invalid, Atlas sends an email to the project owner and
                              eventually removes the token.
                            type: string
                          channelName:
                            description: Slack channel name. Populated for the SLACK
                              notifications type.
                            type: string
                          datadogApiKey:
                            description: Datadog API Key. Found in the Datadog dashboard.
                              Populated for the DATADOG notifications type.
                            type: string
                          datadogRegion:
                            description: Region that indicates which API URL to use
                            type: string
                          delayMin:
                            description: Number of minutes to wait after an alert
                              condition is detected before sending out the first notification.
                            type: integer
                          emailAddress:
                            description: Email address to which alert notifications
                              are sent. Populated for the EMAIL notifications type.
                            type: string
                          emailEnabled:
                            description: Flag indicating if email notifications should
                              be sent. Populated for ORG, GROUP, and USER notifications
                              types.
                            type: boolean
                          flowName:
                            description: Flowdock flow namse in lower-case letters.
                            type: string
                          flowdockApiToken:
                            description: The Flowdock personal API token. Populated
                              for the FLOWDOCK notifications type. If the token later
                              becomes invalid, Atlas sends an email to the project
                              owner and eventually removes the token.
                            type: string
                          intervalMin:
                            description: Number of minutes to wait between successive
                              notifications for unacknowledged alerts that are not
                              resolved.
                            type: integer
                          mobileNumber:
                            description: Mobile number to which alert notifications
                              are sent. Populated for the SMS notifications type.
                            type: string
                          opsGenieApiKey:
                            description: Opsgenie API Key. Populated for the OPS_GENIE
                              notifications type. If the key later becomes invalid,
                              Atlas sends an email to the project owner and eventually
                              removes the token.
                            type: string
                          opsGenieRegion:
                            description: Region that indicates which API URL to use.
                            type: string
                          orgName:
                            description: Flowdock organization name in lower-case
                              letters. This is the name that appears after www.flowdock.com/app/
                              in the URL string. Populated for the FLOWDOCK notifications
                              type.
                            type: string
                          roles:
                            description: The following roles grant privileges within
                              a project.
                            items:
                              type: string
                            type: array
                          serviceKey:
                            description: PagerDuty service key. Populated for the
                              PAGER_DUTY notifications type. If the key later becomes
                              invalid, Atlas sends an email to the project owner and
                              eventually removes the key.
                            type: string
                          smsEnabled:
                            description: Flag indicating if text message notifications
                              should be sent. Populated for ORG, GROUP, and USER notifications
                              types.
                            type: boolean
                          teamId:
                            description: Unique identifier of a team.
                            type: string
                          teamName:
                            description: Label for the team that receives this notification.
                            type: string
                          typeName:
                            description: Type of alert notification.
                            type: string
                          username:
                            description: Name of the Atlas user to which to send notifications.
                              Only a user in the project that owns the alert configuration
                              is allowed here. Populated for the USER notifications
                              type.
                            type: string
                          victorOpsApiKey:
                            description: VictorOps API key. Populated for the VICTOR_OPS
                              notifications type. If the key later becomes invalid,
                              Atlas sends an email to the project owner and eventually
                              removes the key.
                            type: string
                          victorOpsRoutingKey:
                            description: VictorOps routing key. Populated for the
                              VICTOR_OPS notifications type. If the key later becomes
                              invalid, Atlas sends an email to the project owner and
                              eventually removes the key.
                            type: string
                        type: object
                      type: array
                    threshold:
                      description: Threshold  causes an alert to be triggered.
                      properties:
                        operator:
                          description: 'Operator to apply when checking the current
                            metric value against the threshold value. it accepts the
                            following values: GREATER_THAN, LESS_THAN'
                          type: string
                        threshold:
                          description: Threshold value outside which an alert will
                            be triggered.
                          type: string
                        units:
                          description: The units for the threshold value
                          type: string
                      type: object
                  type: object
                type: array
              auditing:
                description: Auditing represents MongoDB Maintenance Windows
                properties:
                  auditAuthorizationSuccess:
                    description: 'Indicates whether the auditing system captures successful
                      authentication attempts for audit filters using the "atype"
                      : "authCheck" auditing event. For more information, see auditAuthorizationSuccess'
                    type: boolean
                  auditFilter:
                    description: JSON-formatted audit filter used by the project
                    type: string
                  enabled:
                    description: Denotes whether or not the project associated with
                      the {GROUP-ID} has database auditing enabled.
                    type: boolean
                type: object
              cloudProviderAccessRoles:
                description: CloudProviderAccessRoles is a list of Cloud Provider
                  Access Roles configured for the current Project.
                items:
                  properties:
                    iamAssumedRoleArn:
                      description: IamAssumedRoleArn is the ARN of the IAM role that
                        is assumed by the Atlas cluster.
                      type: string
                    providerName:
                      description: ProviderName is the name of the cloud provider.
                        Currently only AWS is supported.
                      type: string
                  required:
                  - providerName
                  type: object
                type: array
              connectionSecretRef:
                description: ConnectionSecret is the name of the Kubernetes Secret
                  which contains the information about the way to connect to Atlas
                  (organization ID, API keys). The default Operator connection configuration
                  will be used if not provided.
                properties:
                  name:
                    description: Name is the name of the Kubernetes Resource
                    type: string
                  namespace:
                    description: Namespace is the namespace of the Kubernetes Resource
                    type: string
                required:
                - name
                type: object
              customRoles:
                description: The customRoles lets you create, and change custom roles
                  in your cluster. Use custom roles to specify custom sets of actions
                  that the Atlas built-in roles can't describe.
                items:
                  properties:
                    actions:
                      description: List of the individual privilege actions that the
                        role grants.
                      items:
                        properties:
                          name:
                            description: Human-readable label that identifies the
                              privilege action.
                            type: string
                          resources:
                            description: List of resources on which you grant the
                              action.
                            items:
                              properties:
                                cluster:
                                  description: Flag that indicates whether to grant
                                    the action on the cluster resource. If true, MongoDB
                                    Cloud ignores Database and Collection parameters.
                                  type: boolean
                                collection:
                                  description: Human-readable label that identifies
                                    the collection on which you grant the action to
                                    one MongoDB user.
                                  type: string
                                database:
                                  description: Human-readable label that identifies
                                    the database on which you grant the action to
                                    one MongoDB user.
                                  type: string
                              type: object
                            type: array
                        required:
                        - name
                        - resources
                        type: object
                      type: array
                    inheritedRoles:
                      description: List of the built-in roles that this custom role
                        inherits.
                      items:
                        properties:
                          database:
                            description: Human-readable label that identifies the
                              database on which someone grants the action to one MongoDB
                              user.
                            type: string
                          name:
                            description: Human-readable label that identifies the
                              role inherited.
                            type: string
                        required:
                        - database
                        - name
                        type: object
                      type: array
                    name:
                      description: Human-readable label that identifies the role.
                        This name must be unique for this custom role in this project.
                      type: string
                  required:
                  - name
                  type: object
                type: array
              encryptionAtRest:
                description: EncryptionAtRest allows to set encryption for AWS, Azure
                  and GCP providers
                properties:
                  awsKms:
                    description: AwsKms specifies AWS KMS configuration details and
                      whether Encryption at Rest is enabled for an Atlas project.
                    properties:
                      accessKeyID:
                        type: string
                      customerMasterKeyID:
                        type: string
                      enabled:
                        type: boolean
                      region:
                        type: string
                      roleId:
                        type: string
                      secretAccessKey:
                        type: string
                      valid:
                        type: boolean
                    type: object
                  azureKeyVault:
                    description: AzureKeyVault specifies Azure Key Vault configuration
                      details and whether Encryption at Rest is enabled for an Atlas
                      project.
                    properties:
                      azureEnvironment:
                        type: string
                      clientID:
                        type: string
                      enabled:
                        type: boolean
                      keyIdentifier:
                        type: string
                      keyVaultName:
                        type: string
                      resourceGroupName:
                        type: string
                      secret:
                        type: string
                      subscriptionID:
                        type: string
                      tenantID:
                        type: string
                    type: object
                  googleCloudKms:
                    description: GoogleCloudKms specifies GCP KMS configuration details
                      and whether Encryption at Rest is enabled for an Atlas project.
                    properties:
                      enabled:
                        type: boolean
                      keyVersionResourceID:
                        type: string
                      serviceAccountKey:
                        type: string
                    type: object
                type: object
              integrations:
                description: Integrations is a list of MongoDB Atlas integrations
                  for the project
                items:
                  properties:
                    accountId:
                      type: string
                    apiKeyRef:
                      description: ResourceRefNamespaced is a reference to a Kubernetes
                        Resource that allows to configure the namespace
                      properties:
                        name:
                          description: Name is the name of the Kubernetes Resource
                          type: string
                        namespace:
                          description: Namespace is the namespace of the Kubernetes
                            Resource
                          type: string
                      required:
                      - name
                      type: object
                    apiTokenRef:
                      description: ResourceRefNamespaced is a reference to a Kubernetes
                        Resource that allows to configure the namespace
                      properties:
                        name:
                          description: Name is the name of the Kubernetes Resource
                          type: string
                        namespace:
                          description: Namespace is the namespace of the Kubernetes
                            Resource
                          type: string
                      required:
                      - name
                      type: object
                    channelName:
                      type: string
                    enabled:
                      type: boolean
                    flowName:
                      type: string
                    licenseKeyRef:
                      description: ResourceRefNamespaced is a reference to a Kubernetes
                        Resource that allows to configure the namespace
                      properties:
                        name:
                          description: Name is the name of the Kubernetes Resource
                          type: string
                        namespace:
                          description: Namespace is the namespace of the Kubernetes
                            Resource
                          type: string
                      required:
                      - name
                      type: object
                    microsoftTeamsWebhookUrl:
                      type: string
                    name:
                      type: string
                    orgName:
                      type: string
                    passwordRef:
                      description: ResourceRefNamespaced is a reference to a Kubernetes
                        Resource that allows to configure the namespace
                      properties:
                        name:
                          description: Name is the name of the Kubernetes Resource
                          type: string
                        namespace:
                          description: Namespace is the namespace of the Kubernetes
                            Resource
                          type: string
                      required:
                      - name
                      type: object
                    readTokenRef:
                      description: ResourceRefNamespaced is a reference to a Kubernetes
                        Resource that allows to configure the namespace
                      properties:
                        name:
                          description: Name is the name of the Kubernetes Resource
                          type: string
                        namespace:
                          description: Namespace is the namespace of the Kubernetes
                            Resource
                          type: string
                      required:
                      - name
                      type: object
                    region:
                      type: string
                    routingKeyRef:
                      description: ResourceRefNamespaced is a reference to a Kubernetes
                        Resource that allows to configure the namespace
                      properties:
                        name:
                          description: Name is the name of the Kubernetes Resource
                          type: string
                        namespace:
                          description: Namespace is the namespace of the Kubernetes
                            Resource
                          type: string
                      required:
                      - name
                      type: object
                    scheme:
                      type: string
                    secretRef:
                      description: ResourceRefNamespaced is a reference to a Kubernetes
                        Resource that allows to configure the namespace
                      properties:
                        name:
                          description: Name is the name of the Kubernetes Resource
                          type: string
                        namespace:
                          description: Namespace is the namespace of the Kubernetes
                            Resource
                          type: string
                      required:
                      - name
                      type: object
                    serviceDiscovery:
                      type: string
                    serviceKeyRef:
                      description: ResourceRefNamespaced is a reference to a Kubernetes
                        Resource that allows to configure the namespace
                      properties:
                        name:
                          description: Name is the name of the Kubernetes Resource
                          type: string
                        namespace:
                          description: Namespace is the namespace of the Kubernetes
                            Resource
                          type: string
                      required:
                      - name
                      type: object
                    teamName:
                      type: string
                    type:
                      description: Third Party Integration type such as Slack, New
                        Relic, etc
                      enum:
                      - PAGER_DUTY
                      - SLACK
                      - DATADOG
                      - NEW_RELIC
                      - OPS_GENIE
                      - VICTOR_OPS
                      - FLOWDOCK
                      - WEBHOOK
                      - MICROSOFT_TEAMS
                      - PROMETHEUS
                      type: string
                    url:
                      type: string
                    username:
                      type: string
                    writeTokenRef:
                      description: ResourceRefNamespaced is a reference to a Kubernetes
                        Resource that allows to configure the namespace
                      properties:
                        name:
                          description: Name is the name of the Kubernetes Resource
                          type: string
                        namespace:
                          description: Namespace is the namespace of the Kubernetes
                            Resource
                          type: string
                      required:
                      - name
                      type: object
                  type: object
                type: array
              maintenanceWindow:
                description: MaintenanceWindow allows to specify a preferred time
                  in the week to run maintenance operations. See more information
                  at https://www.mongodb.com/docs/atlas/reference/api/maintenance-windows/
                properties:
                  autoDefer:
                    description: Flag indicating whether any scheduled project maintenance
                      should be deferred automatically for one week.
                    type: boolean
                  dayOfWeek:
                    description: Day of the week when you would like the maintenance
                      window to start as a 1-based integer. Sunday 1, Monday 2, Tuesday
                      3, Wednesday 4, Thursday 5, Friday 6, Saturday 7
                    maximum: 7
                    minimum: 1
                    type: integer
                  defer:
                    description: Flag indicating whether the next scheduled project
                      maintenance should be deferred for one week. Cannot be specified
                      if startASAP is true
                    type: boolean
                  hourOfDay:
                    description: Hour of the day when you would like the maintenance
                      window to start. This parameter uses the 24-hour clock, where
                      midnight is 0, noon is 12.
                    maximum: 23
                    minimum: 0
                    type: integer
                  startASAP:
                    description: Flag indicating whether project maintenance has been
                      directed to start immediately. Cannot be specified if defer
                      is true
                    type: boolean
                type: object
              name:
                description: Name is the name of the Project that is created in Atlas
                  by the Operator if it doesn't exist yet.
                type: string
              networkPeers:
                description: NetworkPeers is a list of Network Peers configured for
                  the current Project.
                items:
                  properties:
                    accepterRegionName:
                      description: AccepterRegionName is the provider region name
                        of user's vpc.
                      type: string
                    atlasCidrBlock:
                      description: Atlas CIDR. It needs to be set if ContainerID is
                        not set.
                      type: string
                    awsAccountId:
                      description: AccountID of the user's vpc.
                      type: string
                    azureDirectoryId:
                      description: AzureDirectoryID is the unique identifier for an
                        Azure AD directory.
                      type: string
                    azureSubscriptionId:
                      description: AzureSubscriptionID is the unique identifier of
                        the Azure subscription in which the VNet resides.
                      type: string
                    containerId:
                      description: ID of the network peer container. If not set, operator
                        will create a new container with ContainerRegion and AtlasCIDRBlock
                        input.
                      type: string
                    containerRegion:
                      description: ContainerRegion is the provider region name of
                        Atlas network peer container. If not set, AccepterRegionName
                        is used.
                      type: string
                    gcpProjectId:
                      description: User GCP Project ID. Its applicable only for GCP.
                      type: string
                    networkName:
                      description: GCP Network Peer Name. Its applicable only for
                        GCP.
                      type: string
                    providerName:
                      description: ProviderName is the name of the provider. If not
                        set, it will be set to "AWS".
                      type: string
                    resourceGroupName:
                      description: ResourceGroupName is the name of your Azure resource
                        group.
                      type: string
                    routeTableCidrBlock:
                      description: User VPC CIDR.
                      type: string
                    vnetName:
                      description: VNetName is name of your Azure VNet. Its applicable
                        only for Azure.
                      type: string
                    vpcId:
                      description: AWS VPC ID.
                      type: string
                  type: object
                type: array
              privateEndpoints:
                description: PrivateEndpoints is a list of Private Endpoints configured
                  for the current Project.
                items:
                  properties:
                    endpointGroupName:
                      description: Unique identifier of the endpoint group. The endpoint
                        group encompasses all of the endpoints that you created in
                        Google Cloud.
                      type: string
                    endpoints:
                      description: Collection of individual private endpoints that
                        comprise your endpoint group.
                      items:
                        properties:
                          endpointName:
                            description: Forwarding rule that corresponds to the endpoint
                              you created in Google Cloud.
                            type: string
                          ipAddress:
                            description: Private IP address of the endpoint you created
                              in Google Cloud.
                            type: string
                        type: object
                      type: array
                    gcpProjectId:
                      description: Unique identifier of the Google Cloud project in
                        which you created your endpoints.
                      type: string
                    id:
                      description: Unique identifier of the private endpoint you created
                        in your AWS VPC or Azure Vnet.
                      type: string
                    ip:
                      description: Private IP address of the private endpoint network
                        interface you created in your Azure VNet.
                      type: string
                    provider:
                      description: Cloud provider for which you want to retrieve a
                        private endpoint service. Atlas accepts AWS or AZURE.
                      enum:
                      - AWS
                      - GCP
                      - AZURE
                      - TENANT
                      type: string
                    region:
                      description: Cloud provider region for which you want to create
                        the private endpoint service.
                      type: string
                  required:
                  - provider
                  - region
                  type: object
                type: array
              projectIpAccessList:
                description: ProjectIPAccessList allows to enable the IP Access List
                  for the Project. See more information at https://docs.atlas.mongodb.com/reference/api/ip-access-list/add-entries-to-access-list/
                items:
                  properties:
                    awsSecurityGroup:
                      description: Unique identifier of AWS security group in this
                        access list entry.
                      type: string
                    cidrBlock:
                      description: Range of IP addresses in CIDR notation in this
                        access list entry.
                      type: string
                    comment:
                      description: Comment associated with this access list entry.
                      type: string
                    deleteAfterDate:
                      description: Timestamp in ISO 8601 date and time format in UTC
                        after which Atlas deletes the temporary access list entry.
                      type: string
                    ipAddress:
                      description: Entry using an IP address in this access list entry.
                      type: string
                  type: object
                type: array
              settings:
                description: Settings allow to set Project Settings for the project
                properties:
                  isCollectDatabaseSpecificsStatisticsEnabled:
                    type: boolean
                  isDataExplorerEnabled:
                    type: boolean
                  isPerformanceAdvisorEnabled:
                    type: boolean
                  isRealtimePerformancePanelEnabled:
                    type: boolean
                  isSchemaAdvisorEnabled:
                    type: boolean
                type: object
              teams:
                description: Teams enable you to grant project access roles to multiple
                  users.
                items:
                  properties:
                    roles:
                      description: Roles the users of the team has over the project
                      items:
                        enum:
                        - GROUP_OWNER
                        - GROUP_CLUSTER_MANAGER
                        - GROUP_DATA_ACCESS_ADMIN
                        - GROUP_DATA_ACCESS_READ_WRITE
                        - GROUP_DATA_ACCESS_READ_ONLY
                        - GROUP_READ_ONLY
                        type: string
                      minItems: 1
                      type: array
                    teamRef:
                      description: Reference to the team which will assigned to the
                        project
                      properties:
                        name:
                          description: Name is the name of the Kubernetes Resource
                          type: string
                        namespace:
                          description: Namespace is the namespace of the Kubernetes
                            Resource
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - roles
                  - teamRef
                  type: object
                type: array
              withDefaultAlertsSettings:
                default: true
                description: Flag that indicates whether to create the new project
                  with the default alert settings enabled. This parameter defaults
                  to true
                type: boolean
              x509CertRef:
                description: X509CertRef is the name of the Kubernetes Secret which
                  contains PEM-encoded CA certificate
                properties:
                  name:
                    description: Name is the name of the Kubernetes Resource
                    type: string
                  namespace:
                    description: Namespace is the namespace of the Kubernetes Resource
                    type: string
                required:
                - name
                type: object
            required:
            - name
            type: object
          status:
            description: AtlasProjectStatus defines the observed state of AtlasProject
            properties:
              alertConfigurations:
                description: AlertConfigurations contains a list of alert configuration
                  statuses
                items:
                  properties:
                    acknowledgedUntil:
                      description: The date through which the alert has been acknowledged.
                        Will not be present if the alert has never been acknowledged.
                      type: string
                    acknowledgementComment:
                      description: The comment left by the user who acknowledged the
                        alert. Will not be present if the alert has never been acknowledged.
                      type: string
                    acknowledgingUsername:
                      description: The username of the user who acknowledged the alert.
                        Will not be present if the alert has never been acknowledged.
                      type: string
                    alertConfigId:
                      description: ID of the alert configuration that triggered this
                        alert.
                      type: string
                    clusterId:
                      description: The ID of the cluster to which this alert applies.
                        Only present for alerts of type BACKUP, REPLICA_SET, and CLUSTER.
                      type: string
                    clusterName:
                      description: The name the cluster to which this alert applies.
                        Only present for alerts of type BACKUP, REPLICA_SET, and CLUSTER.
                      type: string
                    created:
                      description: Timestamp in ISO 8601 date and time format in UTC
                        when this alert configuration was created.
                      type: string
                    currentValue:
                      description: CurrentValue represents current value of the metric
                        that triggered the alert. Only present for alerts of type
                        HOST_METRIC.
                      properties:
                        number:
                          description: The value of the metric.
                          type: string
                        units:
                          description: The units for the value. Depends on the type
                            of metric.
                          type: string
                      type: object
                    enabled:
                      description: If omitted, the configuration is disabled.
                      type: boolean
                    errorMessage:
                      description: ErrorMessage is massage if the alert configuration
                        is in an incorrect state.
                      type: string
                    eventTypeName:
                      description: The type of event that will trigger an alert.
                      type: string
                    groupId:
                      description: Unique identifier of the project that owns this
                        alert configuration.
                      type: string
                    hostId:
                      description: ID of the host to which the metric pertains. Only
                        present for alerts of type HOST, HOST_METRIC, and REPLICA_SET.
                      type: string
                    hostnameAndPort:
                      description: The hostname and port of each host to which the
                        alert applies. Only present for alerts of type HOST, HOST_METRIC,
                        and REPLICA_SET.
                      type: string
                    id:
                      description: Unique identifier.
                      type: string
                    lastNotified:
                      description: When the last notification was sent for this alert.
                        Only present if notifications have been sent.
                      type: string
                    matchers:
                      description: You can filter using the matchers array only when
                        the EventTypeName specifies an event for a host, replica set,
                        or sharded cluster.
                      items:
                        properties:
                          fieldName:
                            description: Name of the field in the target object to
                              match on.
                            type: string
                          operator:
                            description: The operator to test the field’s value.
                            type: string
                          value:
                            description: Value to test with the specified operator.
                            type: string
                        type: object
                      type: array
                    metricName:
                      description: The name of the measurement whose value went outside
                        the threshold. Only present if eventTypeName is set to OUTSIDE_METRIC_THRESHOLD.
                      type: string
                    metricThreshold:
                      description: MetricThreshold  causes an alert to be triggered.
                      properties:
                        metricName:
                          description: Name of the metric to check.
                          type: string
                        mode:
                          description: This must be set to AVERAGE. Atlas computes
                            the current metric value as an average.
                          type: string
                        operator:
                          description: Operator to apply when checking the current
                            metric value against the threshold value.
                          type: string
                        threshold:
                          description: Threshold value outside which an alert will
                            be triggered.
                          type: string
                        units:
                          description: The units for the threshold value.
                          type: string
                      required:
                      - threshold
                      type: object
                    notifications:
                      description: Notifications are sending when an alert condition
                        is detected.
                      items:
                        properties:
                          apiToken:
                            description: Slack API token or Bot token. Populated for
                              the SLACK notifications type. If the token later becomes
                              invalid, Atlas sends an email to the project owner and
                              eventually removes the token.
                            type: string
                          channelName:
                            description: Slack channel name. Populated for the SLACK
                              notifications type.
                            type: string
                          datadogApiKey:
                            description: Datadog API Key. Found in the Datadog dashboard.
                              Populated for the DATADOG notifications type.
                            type: string
                          datadogRegion:
                            description: Region that indicates which API URL to use
                            type: string
                          delayMin:
                            description: Number of minutes to wait after an alert
                              condition is detected before sending out the first notification.
                            type: integer
                          emailAddress:
                            description: Email address to which alert notifications
                              are sent. Populated for the EMAIL notifications type.
                            type: string
                          emailEnabled:
                            description: Flag indicating if email notifications should
                              be sent. Populated for ORG, GROUP, and USER notifications
                              types.
                            type: boolean
                          flowName:
                            description: Flowdock flow namse in lower-case letters.
                            type: string
                          flowdockApiToken:
                            description: The Flowdock personal API token. Populated
                              for the FLOWDOCK notifications type. If the token later
                              becomes invalid, Atlas sends an email to the project
                              owner and eventually removes the token.
                            type: string
                          intervalMin:
                            description: Number of minutes to wait between successive
                              notifications for unacknowledged alerts that are not
                              resolved.
                            type: integer
                          mobileNumber:
                            description: Mobile number to which alert notifications
                              are sent. Populated for the SMS notifications type.
                            type: string
                          opsGenieApiKey:
                            description: Opsgenie API Key. Populated for the OPS_GENIE
                              notifications type. If the key later becomes invalid,
                              Atlas sends an email to the project owner and eventually
                              removes the token.
                            type: string
                          opsGenieRegion:
                            description: Region that indicates which API URL to use.
                            type: string
                          orgName:
                            description: Flowdock organization name in lower-case
                              letters. This is the name that appears after www.flowdock.com/app/
                              in the URL string. Populated for the FLOWDOCK notifications
                              type.
                            type: string
                          roles:
                            description: The following roles grant privileges within
                              a project.
                            items:
                              type: string
                            type: array
                          serviceKey:
                            description: PagerDuty service key. Populated for the
                              PAGER_DUTY notifications type. If the key later becomes
                              invalid, Atlas sends an email to the project owner and
                              eventually removes the key.
                            type: string
                          smsEnabled:
                            description: Flag indicating if text message notifications
                              should be sent. Populated for ORG, GROUP, and USER notifications
                              types.
                            type: boolean
                          teamId:
                            description: Unique identifier of a team.
                            type: string
                          teamName:
                            description: Label for the team that receives this notification.
                            type: string
                          typeName:
                            description: Type of alert notification.
                            type: string
                          username:
                            description: Name of the Atlas user to which to send notifications.
                              Only a user in the project that owns the alert configuration
                              is allowed here. Populated for the USER notifications
                              type.
                            type: string
                          victorOpsApiKey:
                            description: VictorOps API key. Populated for the VICTOR_OPS
                              notifications type. If the key later becomes invalid,
                              Atlas sends an email to the project owner and eventually
                              removes the key.
                            type: string
                          victorOpsRoutingKey:
                            description: VictorOps routing key. Populated for the
                              VICTOR_OPS notifications type. If the key later becomes
                              invalid, Atlas sends an email to the project owner and
                              eventually removes the key.
                            type: string
                        type: object
                      type: array
                    replicaSetName:
                      description: Name of the replica set. Only present for alerts
                        of type HOST, HOST_METRIC, BACKUP, and REPLICA_SET.
                      type: string
                    resolved:
                      description: When the alert was closed. Only present if the
                        status is CLOSED.
                      type: string
                    sourceTypeName:
                      description: For alerts of the type BACKUP, the type of server
                        being backed up.
                      type: string
                    status:
                      description: 'The current state of the alert. Possible values
                        are: TRACKING, OPEN, CLOSED, CANCELED'
                      type: string
                    threshold:
                      description: Threshold  causes an alert to be triggered.
                      properties:
                        operator:
                          description: 'Operator to apply when checking the current
                            metric value against the threshold value. it accepts the
                            following values: GREATER_THAN, LESS_THAN'
                          type: string
                        threshold:
                          description: Threshold value outside which an alert will
                            be triggered.
                          type: string
                        units:
                          description: The units for the threshold value
                          type: string
                      type: object
                    updated:
                      description: Timestamp in ISO 8601 date and time format in UTC
                        when this alert configuration was last updated.
                      type: string
                  type: object
                type: array
              authModes:
                description: AuthModes contains a list of configured authentication
                  modes "SCRAM" is default authentication method and requires a password
                  for each user "X509" signifies that self-managed X.509 authentication
                  is configured
                items:
                  type: string
                type: array
              cloudProviderAccessRoles:
                description: CloudProviderAccessRoles contains a list of configured
                  cloud provider access roles. AWS support only
                items:
                  properties:
                    atlasAWSAccountArn:
                      type: string
                    atlasAssumedRoleExternalId:
                      type: string
                    authorizedDate:
                      type: string
                    createdDate:
                      type: string
                    errorMessage:
                      type: string
                    featureUsages:
                      items:
                        properties:
                          featureId:
                            type: string
                          featureType:
                            type: string
                        type: object
                      type: array
                    iamAssumedRoleArn:
                      type: string
                    providerName:
                      type: string
                    roleId:
                      type: string
                    status:
                      type: string
                  required:
                  - atlasAssumedRoleExternalId
                  - providerName
                  type: object
                type: array
              conditions:
                description: Conditions is the list of statuses showing the current
                  state of the Atlas Custom Resource
                items:
                  description: Condition describes the state of an Atlas Custom Resource
                    at a certain point.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of Atlas Custom Resource condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              customRoles:
                description: CustomRoles contains a list of custom roles statuses
                items:
                  properties:
                    error:
                      description: The message when the custom role is in the FAILED
                        status
                      type: string
                    name:
                      description: Role name which is unique
                      type: string
                    status:
                      description: The status of the given custom role (OK or FAILED)
                      type: string
                  required:
                  - name
                  - status
                  type: object
                type: array
              expiredIpAccessList:
                description: The list of IP Access List entries that are expired due
                  to 'deleteAfterDate' being less than the current date. Note, that
                  this field is updated by the Atlas Operator only after specification
                  changes
                items:
                  properties:
                    awsSecurityGroup:
                      description: Unique identifier of AWS security group in this
                        access list entry.
                      type: string
                    cidrBlock:
                      description: Range of IP addresses in CIDR notation in this
                        access list entry.
                      type: string
                    comment:
                      description: Comment associated with this access list entry.
                      type: string
                    deleteAfterDate:
                      description: Timestamp in ISO 8601 date and time format in UTC
                        after which Atlas deletes the temporary access list entry.
                      type: string
                    ipAddress:
                      description: Entry using an IP address in this access list entry.
                      type: string
                  type: object
                type: array
              id:
                description: The ID of the Atlas Project
                type: string
              networkPeers:
                description: The list of network peers that are configured for current
                  project
                items:
                  properties:
                    atlasGcpProjectId:
                      description: ProjectID of Atlas container. Applicable only for
                        GCP. It's needed to add network peer connection.
                      type: string
                    atlasNetworkName:
                      description: Atlas Network Name. Applicable only for GCP. It's
                        needed to add network peer connection.
                      type: string
                    connectionId:
                      description: Unique identifier of the network peer connection.
                        Applicable only for AWS.
                      type: string
                    containerId:
                      description: ContainerID of Atlas network peer container.
                      type: string
                    errorMessage:
                      description: Error state of the network peer. Applicable only
                        for GCP.
                      type: string
                    errorState:
                      description: Error state of the network peer. Applicable only
                        for Azure.
                      type: string
                    errorStateName:
                      description: Error state of the network peer. Applicable only
                        for AWS.
                      type: string
                    gcpProjectId:
                      description: ProjectID of the user's vpc. Applicable only for
                        GCP.
                      type: string
                    id:
                      description: Unique identifier for NetworkPeer.
                      type: string
                    providerName:
                      description: Cloud provider for which you want to retrieve a
                        network peer.
                      type: string
                    region:
                      description: Region for which you want to create the network
                        peer. It isn't needed for GCP
                      type: string
                    status:
                      description: Status of the network peer. Applicable only for
                        GCP and Azure.
                      type: string
                    statusName:
                      description: Status of the network peer. Applicable only for
                        AWS.
                      type: string
                    vpc:
                      description: VPC is general purpose field for storing the name
                        of the VPC. VPC is vpcID for AWS, user networkName for GCP,
                        and vnetName for Azure.
                      type: string
                  required:
                  - id
                  - providerName
                  - region
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration indicates the generation of the resource
                  specification that the Atlas Operator is aware of. The Atlas Operator
                  updates this field to the 'metadata.generation' as soon as it starts
                  reconciliation of the resource.
                format: int64
                type: integer
              privateEndpoints:
                description: The list of private endpoints configured for current
                  project
                items:
                  properties:
                    endpoints:
                      description: Collection of individual GCP private endpoints
                        that comprise your network endpoint group.
                      items:
                        properties:
                          endpointName:
                            type: string
                          ipAddress:
                            type: string
                          status:
                            type: string
                        required:
                        - endpointName
                        - ipAddress
                        - status
                        type: object
                      type: array
                    id:
                      description: Unique identifier for AWS or AZURE Private Link
                        Connection.
                      type: string
                    interfaceEndpointId:
                      description: Unique identifier of the AWS or Azure Private Link
                        Interface Endpoint.
                      type: string
                    provider:
                      description: Cloud provider for which you want to retrieve a
                        private endpoint service. Atlas accepts AWS or AZURE.
                      type: string
                    region:
                      description: Cloud provider region for which you want to create
                        the private endpoint service.
                      type: string
                    serviceAttachmentNames:
                      description: Unique alphanumeric and special character strings
                        that identify the service attachments associated with the
                        GCP Private Service Connect endpoint service.
                      items:
                        type: string
                      type: array
                    serviceName:
                      description: Name of the AWS or Azure Private Link Service that
                        Atlas manages.
                      type: string
                    serviceResourceId:
                      description: Unique identifier of the Azure Private Link Service
                        (for AWS the same as ID).
                      type: string
                  required:
                  - provider
                  - region
                  type: object
                type: array
              prometheus:
                description: Prometheus contains the status for Prometheus integration
                  including the prometheusDiscoveryURL
                properties:
                  prometheusDiscoveryURL:
                    type: string
                  scheme:
                    type: string
                type: object
              teams:
                description: Teams contains a list of teams assignment statuses
                items:
                  properties:
                    id:
                      type: string
                    teamRef:
                      description: ResourceRefNamespaced is a reference to a Kubernetes
                        Resource that allows to configure the namespace
                      properties:
                        name:
                          description: Name is the name of the Kubernetes Resource
                          type: string
                        namespace:
                          description: Namespace is the namespace of the Kubernetes
                            Resource
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - teamRef
                  type: object
                type: array
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: mongodb-atlas-kubernetes-operator
    app.kubernetes.io/name: mongodb-atlas-kubernetes-operator
  name: atlasteams.atlas.mongodb.com
spec:
  group: atlas.mongodb.com
  names:
    kind: AtlasTeam
    listKind: AtlasTeamList
    plural: atlasteams
    singular: atlasteam
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.name
      name: Name
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: AtlasTeam is the Schema for the Atlas Teams API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TeamSpec defines the desired state of a Team in Atlas
            properties:
              name:
                description: The name of the team you want to create.
                type: string
              usernames:
                description: Valid email addresses of users to add to the new team
                items:
                  format: email
                  type: string
                type: array
            required:
            - name
            - usernames
            type: object
          status:
            properties:
              conditions:
                description: Conditions is the list of statuses showing the current
                  state of the Atlas Custom Resource
                items:
                  description: Condition describes the state of an Atlas Custom Resource
                    at a certain point.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of Atlas Custom Resource condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              id:
                description: ID of the team
                type: string
              observedGeneration:
                description: ObservedGeneration indicates the generation of the resource
                  specification that the Atlas Operator is aware of. The Atlas Operator
                  updates this field to the 'metadata.generation' as soon as it starts
                  reconciliation of the resource.
                format: int64
                type: integer
              projects:
                description: List of projects which the team is assigned
                items:
                  properties:
                    id:
                      description: Unique identifier of the project inside atlas
                      type: string
                    name:
                      description: Name given to the project
                      type: string
                  required:
                  - id
                  - name
                  type: object
                type: array
            required:
            - conditions
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: mongodb-atlas-kubernetes-operator
    app.kubernetes.io/name: mongodb-atlas-kubernetes-operator
  name: mongodb-atlas-operator
  namespace: mongodb-atlas-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: mongodb-atlas-kubernetes-operator
    app.kubernetes.io/name: mongodb-atlas-kubernetes-operator
  name: mongodb-atlas-leader-election-role
  namespace: mongodb-atlas-system
rules:
- apiGroups:
  - ""
  - coordination.k8s.io
  resources:
  - configmaps
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: mongodb-atlas-kubernetes-operator
    app.kubernetes.io/name: mongodb-atlas-kubernetes-operator
  name: mongodb-atlas-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - atlas.mongodb.com
  resources:
  - atlasbackuppolicies
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - atlas.mongodb.com
  resources:
  - atlasbackuppolicies/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - atlas.mongodb.com
  resources:
  - atlasbackupschedules
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - atlas.mongodb.com
  resources:
  - atlasbackupschedules/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - atlas.mongodb.com
  resources:
  - atlasdatabaseusers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - atlas.mongodb.com
  resources:
  - atlasdatabaseusers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - atlas.mongodb.com
  resources:
  - atlasdeployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - atlas.mongodb.com
  resources:
  - atlasdeployments/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - atlas.mongodb.com
  resources:
  - atlasprojects
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - atlas.mongodb.com
  resources:
  - atlasprojects/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - atlas.mongodb.com
  resources:
  - atlasteams
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - atlas.mongodb.com
  resources:
  - atlasteams/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: mongodb-atlas-kubernetes-operator
    app.kubernetes.io/name: mongodb-atlas-kubernetes-operator
  name: mongodb-atlas-leader-election-rolebinding
  namespace: mongodb-atlas-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: mongodb-atlas-leader-election-role
subjects:
- kind: ServiceAccount
  name: mongodb-atlas-operator
  namespace: mongodb-atlas-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: mongodb-atlas-kubernetes-operator
    app.kubernetes.io/name: mongodb-atlas-kubernetes-operator
  name: mongodb-atlas-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: mongodb-atlas-manager-role
subjects:
- kind: ServiceAccount
  name: mongodb-atlas-operator
  namespace: mongodb-atlas-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: mongodb-atlas-kubernetes-operator
    app.kubernetes.io/name: mongodb-atlas-kubernetes-operator
  name: mongodb-atlas-operator
  namespace: mongodb-atlas-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: mongodb-atlas-kubernetes-operator
      app.kubernetes.io/name: mongodb-atlas-kubernetes-operator
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: mongodb-atlas-kubernetes-operator
        app.kubernetes.io/name: mongodb-atlas-kubernetes-operator
    spec:
      containers:
      - args:
        - --atlas-domain=https://cloud.mongodb.com/
        - --leader-elect
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --log-level=info
        - --log-encoder=json
        command:
        - /manager
        env:
        - name: OPERATOR_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: OPERATOR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: mongodb/mongodb-atlas-kubernetes-operator:1.7.0
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
      serviceAccountName: mongodb-atlas-operator
      terminationGracePeriodSeconds: 10
