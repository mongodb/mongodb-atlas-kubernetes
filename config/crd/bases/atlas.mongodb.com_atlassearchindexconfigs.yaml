---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: atlassearchindexconfigs.atlas.mongodb.com
spec:
  group: atlas.mongodb.com
  names:
    kind: AtlasSearchIndexConfig
    listKind: AtlasSearchIndexConfigList
    plural: atlassearchindexconfigs
    singular: atlassearchindexconfig
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: AtlasSearchIndexConfig is the Schema for the AtlasSearchIndexConfig
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              analyzer:
                description: 'Specific pre-defined method chosen to convert database
                  field text into searchable words. This conversion reduces the text
                  of fields into the smallest units of text. These units are called
                  a term or token. This process, known as tokenization, involves a
                  variety of changes made to the text in fields: - extracting words
                  - removing punctuation - removing accents - hanging to lowercase
                  - removing common words - reducing words to their root form (stemming)
                  - changing words to their base form (lemmatization) MongoDB Cloud
                  uses the selected process to build the Atlas Search index'
                enum:
                - lucene.standard
                - lucene.standard
                - lucene.simple
                - lucene.whitespace
                - lucene.keyword
                - lucene.arabic
                - lucene.armenian
                - lucene.basque
                - lucene.bengali
                - lucene.brazilian
                - lucene.bulgarian
                - lucene.catalan
                - lucene.chinese
                - lucene.cjk
                - lucene.czech
                - lucene.danish
                - lucene.dutch
                - lucene.english
                - lucene.finnish
                - lucene.french
                - lucene.galician
                - lucene.german
                - lucene.greek
                - lucene.hindi
                - lucene.hungarian
                - lucene.indonesian
                - lucene.irish
                - lucene.italian
                - lucene.japanese
                - lucene.korean
                - lucene.kuromoji
                - lucene.latvian
                - lucene.lithuanian
                - lucene.morfologik
                - lucene.nori
                - lucene.norwegian
                - lucene.persian
                - lucene.portuguese
                - lucene.romanian
                - lucene.russian
                - lucene.smartcn
                - lucene.sorani
                - lucene.spanish
                - lucene.swedish
                - lucene.thai
                - lucene.turkish
                - lucene.ukrainian
                type: string
              analyzers:
                description: List of user-defined methods to convert database field
                  text into searchable words
                items:
                  properties:
                    charFilters:
                      description: Filters that examine text one character at a time
                        and perform filtering operations
                      items:
                        properties:
                          ignoreTags:
                            description: Used when type is "htmlStrip". The HTML tags
                              that you want to exclude from filtering.
                            items:
                              type: string
                            type: array
                          mappings:
                            additionalProperties:
                              type: string
                            description: 'Used when type is "mapping". Comma-separated
                              list of mappings. A mapping indicates that one character
                              or group of characters should be substituted for another,
                              using the following format: <original> : <replacement>'
                            type: object
                          type:
                            description: Human-readable label that identifies this
                              character filter type
                            enum:
                            - htmlStrip
                            - icuNormalize
                            - mapping
                            - persian
                            type: string
                        type: object
                      type: array
                    name:
                      description: 'Human-readable name that identifies the custom
                        analyzer. Names must be unique within an index, and must not
                        start with any of the following strings: "lucene.", "builtin.",
                        "mongodb."'
                      type: string
                    tokenFilters:
                      description: 'Filter that performs operations such as: - Stemming,
                        which reduces related words, such as "talking", "talked",
                        and "talks" to their root word "talk". - Redaction, the removal
                        of sensitive information from public documents'
                      items:
                        properties:
                          ignoreCase:
                            description: Flag that indicates whether to ignore the
                              case of stop words when filtering the tokens to remove
                            type: boolean
                          matches:
                            description: Value that indicates whether to replace only
                              the first matching pattern or all matching patterns
                            enum:
                            - all
                            - first
                            type: string
                          max:
                            description: Number that specifies the maximum length
                              of a token. Value must be greater than or equal to min
                              kubebuilder:default:=255
                            type: integer
                          maxGram:
                            description: Value that specifies the maximum length of
                              generated n-grams. This value must be greater than or
                              equal to minGram
                            type: integer
                          maxShingleSize:
                            description: Value that specifies the maximum number of
                              tokens per shingle. This value must be greater than
                              or equal to minShingleSize
                            type: integer
                          min:
                            description: Number that specifies the minimum length
                              of a token. This value must be less than or equal to
                              max kubebuilder:default:=0
                            type: integer
                          minGram:
                            description: Value that specifies the minimum length of
                              generated n-grams. This value must be less than or equal
                              to maxGram
                            type: integer
                          minShingleSize:
                            description: Value that specifies the minimum number of
                              tokens per shingle. This value must be less than or
                              equal to maxShingleSize
                            type: integer
                          normalizationForm:
                            enum:
                            - nfc
                            - nfkd
                            - nfkc
                            type: string
                          originalTokens:
                            description: Value that indicates whether to include or
                              omit the original tokens in the output of the token
                              filter. Choose include if you want to support queries
                              on both the original tokens as well as the converted
                              forms.
                            enum:
                            - omit
                            - include
                            type: string
                          pattern:
                            description: Regular expression pattern to apply to each
                              token
                            type: string
                          replacement:
                            description: Replacement string to substitute wherever
                              a matching pattern occurs
                            type: string
                          stemmerName:
                            description: Snowball-generated stemmer to use
                            enum:
                            - arabic
                            - armenian
                            - basque
                            - catalan
                            - danish
                            - dutch
                            - english
                            - finnish
                            - french
                            - german
                            - german2
                            - hungarian
                            - irish
                            - italian
                            - kp
                            - lithuanian
                            - lovins
                            - norwegian
                            - porter
                            - portuguese
                            - romanian
                            - russian
                            - spanish
                            - swedish
                            - turkish
                            type: string
                          termNotInBounds:
                            description: Value that indicates whether to index tokens
                              shorter than minGram or longer than maxGram
                            enum:
                            - omit
                            - include
                            type: string
                          tokens:
                            description: The stop words that correspond to the tokens
                              to remove. Value must be one or more stop words.
                            items:
                              type: string
                            type: array
                          type:
                            enum:
                            - asciiFolding
                            - daitchMokotoffSoundex
                            - edgeGram
                            - icuFolding
                            - icuNormalizer
                            - length
                            - lowercase
                            - nGram
                            - regex
                            - reverse
                            - shingle
                            - snowballStemming
                            - stopword
                            - trim
                            type: string
                        type: object
                      type: array
                    tokenizer:
                      description: Tokenizer that you want to use to create tokens.
                        Tokens determine how Atlas Search splits up text into discrete
                        chunks for indexing
                      properties:
                        group:
                          description: Index of the character group within the matching
                            expression to extract into tokens. Use `0` to extract
                            all character groups.
                          type: integer
                        maxGram:
                          description: Characters to include in the longest token
                            that Atlas Search creates.
                          type: integer
                        maxTokenLength:
                          description: Maximum number of characters in a single token.
                            Tokens greater than this length are split at this length
                            into multiple tokens.
                          type: integer
                        minGram:
                          description: Characters to include in the shortest token
                            that Atlas Search creates.
                          type: integer
                        pattern:
                          description: Regular expression to match against.
                          type: string
                        type:
                          description: Human-readable label that identifies this tokenizer
                            type.
                          type: string
                      type: object
                  required:
                  - name
                  - tokenizer
                  type: object
                type: array
              searchAnalyzer:
                description: Method applied to identify words when searching this
                  index
                type: string
              storedSource:
                description: 'Flag that indicates whether to store all fields (true)
                  on Atlas Search. By default, Atlas doesn''t store (false) the fields
                  on Atlas Search. Alternatively, you can specify an object that only
                  contains the list of fields to store (include) or not store (exclude)
                  on Atlas Search. To learn more, see documentation: https://www.mongodb.com/docs/atlas/atlas-search/stored-source-definition/'
                type: string
            type: object
          status:
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
