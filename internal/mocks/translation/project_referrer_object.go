// Code generated by mockery. DO NOT EDIT.

package translation

import (
	mock "github.com/stretchr/testify/mock"

	apiv1 "github.com/mongodb/mongodb-atlas-kubernetes/v2/api/v1"

	runtime "k8s.io/apimachinery/pkg/runtime"

	schema "k8s.io/apimachinery/pkg/runtime/schema"

	types "k8s.io/apimachinery/pkg/types"

	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// ProjectReferrerObjectMock is an autogenerated mock type for the ProjectReferrerObject type
type ProjectReferrerObjectMock struct {
	mock.Mock
}

type ProjectReferrerObjectMock_Expecter struct {
	mock *mock.Mock
}

func (_m *ProjectReferrerObjectMock) EXPECT() *ProjectReferrerObjectMock_Expecter {
	return &ProjectReferrerObjectMock_Expecter{mock: &_m.Mock}
}

// DeepCopyObject provides a mock function with no fields
func (_m *ProjectReferrerObjectMock) DeepCopyObject() runtime.Object {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for DeepCopyObject")
	}

	var r0 runtime.Object
	if rf, ok := ret.Get(0).(func() runtime.Object); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(runtime.Object)
		}
	}

	return r0
}

// ProjectReferrerObjectMock_DeepCopyObject_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeepCopyObject'
type ProjectReferrerObjectMock_DeepCopyObject_Call struct {
	*mock.Call
}

// DeepCopyObject is a helper method to define mock.On call
func (_e *ProjectReferrerObjectMock_Expecter) DeepCopyObject() *ProjectReferrerObjectMock_DeepCopyObject_Call {
	return &ProjectReferrerObjectMock_DeepCopyObject_Call{Call: _e.mock.On("DeepCopyObject")}
}

func (_c *ProjectReferrerObjectMock_DeepCopyObject_Call) Run(run func()) *ProjectReferrerObjectMock_DeepCopyObject_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ProjectReferrerObjectMock_DeepCopyObject_Call) Return(_a0 runtime.Object) *ProjectReferrerObjectMock_DeepCopyObject_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProjectReferrerObjectMock_DeepCopyObject_Call) RunAndReturn(run func() runtime.Object) *ProjectReferrerObjectMock_DeepCopyObject_Call {
	_c.Call.Return(run)
	return _c
}

// GetAnnotations provides a mock function with no fields
func (_m *ProjectReferrerObjectMock) GetAnnotations() map[string]string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetAnnotations")
	}

	var r0 map[string]string
	if rf, ok := ret.Get(0).(func() map[string]string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]string)
		}
	}

	return r0
}

// ProjectReferrerObjectMock_GetAnnotations_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetAnnotations'
type ProjectReferrerObjectMock_GetAnnotations_Call struct {
	*mock.Call
}

// GetAnnotations is a helper method to define mock.On call
func (_e *ProjectReferrerObjectMock_Expecter) GetAnnotations() *ProjectReferrerObjectMock_GetAnnotations_Call {
	return &ProjectReferrerObjectMock_GetAnnotations_Call{Call: _e.mock.On("GetAnnotations")}
}

func (_c *ProjectReferrerObjectMock_GetAnnotations_Call) Run(run func()) *ProjectReferrerObjectMock_GetAnnotations_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ProjectReferrerObjectMock_GetAnnotations_Call) Return(_a0 map[string]string) *ProjectReferrerObjectMock_GetAnnotations_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProjectReferrerObjectMock_GetAnnotations_Call) RunAndReturn(run func() map[string]string) *ProjectReferrerObjectMock_GetAnnotations_Call {
	_c.Call.Return(run)
	return _c
}

// GetCreationTimestamp provides a mock function with no fields
func (_m *ProjectReferrerObjectMock) GetCreationTimestamp() v1.Time {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetCreationTimestamp")
	}

	var r0 v1.Time
	if rf, ok := ret.Get(0).(func() v1.Time); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(v1.Time)
	}

	return r0
}

// ProjectReferrerObjectMock_GetCreationTimestamp_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetCreationTimestamp'
type ProjectReferrerObjectMock_GetCreationTimestamp_Call struct {
	*mock.Call
}

// GetCreationTimestamp is a helper method to define mock.On call
func (_e *ProjectReferrerObjectMock_Expecter) GetCreationTimestamp() *ProjectReferrerObjectMock_GetCreationTimestamp_Call {
	return &ProjectReferrerObjectMock_GetCreationTimestamp_Call{Call: _e.mock.On("GetCreationTimestamp")}
}

func (_c *ProjectReferrerObjectMock_GetCreationTimestamp_Call) Run(run func()) *ProjectReferrerObjectMock_GetCreationTimestamp_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ProjectReferrerObjectMock_GetCreationTimestamp_Call) Return(_a0 v1.Time) *ProjectReferrerObjectMock_GetCreationTimestamp_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProjectReferrerObjectMock_GetCreationTimestamp_Call) RunAndReturn(run func() v1.Time) *ProjectReferrerObjectMock_GetCreationTimestamp_Call {
	_c.Call.Return(run)
	return _c
}

// GetDeletionGracePeriodSeconds provides a mock function with no fields
func (_m *ProjectReferrerObjectMock) GetDeletionGracePeriodSeconds() *int64 {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetDeletionGracePeriodSeconds")
	}

	var r0 *int64
	if rf, ok := ret.Get(0).(func() *int64); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*int64)
		}
	}

	return r0
}

// ProjectReferrerObjectMock_GetDeletionGracePeriodSeconds_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetDeletionGracePeriodSeconds'
type ProjectReferrerObjectMock_GetDeletionGracePeriodSeconds_Call struct {
	*mock.Call
}

// GetDeletionGracePeriodSeconds is a helper method to define mock.On call
func (_e *ProjectReferrerObjectMock_Expecter) GetDeletionGracePeriodSeconds() *ProjectReferrerObjectMock_GetDeletionGracePeriodSeconds_Call {
	return &ProjectReferrerObjectMock_GetDeletionGracePeriodSeconds_Call{Call: _e.mock.On("GetDeletionGracePeriodSeconds")}
}

func (_c *ProjectReferrerObjectMock_GetDeletionGracePeriodSeconds_Call) Run(run func()) *ProjectReferrerObjectMock_GetDeletionGracePeriodSeconds_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ProjectReferrerObjectMock_GetDeletionGracePeriodSeconds_Call) Return(_a0 *int64) *ProjectReferrerObjectMock_GetDeletionGracePeriodSeconds_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProjectReferrerObjectMock_GetDeletionGracePeriodSeconds_Call) RunAndReturn(run func() *int64) *ProjectReferrerObjectMock_GetDeletionGracePeriodSeconds_Call {
	_c.Call.Return(run)
	return _c
}

// GetDeletionTimestamp provides a mock function with no fields
func (_m *ProjectReferrerObjectMock) GetDeletionTimestamp() *v1.Time {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetDeletionTimestamp")
	}

	var r0 *v1.Time
	if rf, ok := ret.Get(0).(func() *v1.Time); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*v1.Time)
		}
	}

	return r0
}

// ProjectReferrerObjectMock_GetDeletionTimestamp_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetDeletionTimestamp'
type ProjectReferrerObjectMock_GetDeletionTimestamp_Call struct {
	*mock.Call
}

// GetDeletionTimestamp is a helper method to define mock.On call
func (_e *ProjectReferrerObjectMock_Expecter) GetDeletionTimestamp() *ProjectReferrerObjectMock_GetDeletionTimestamp_Call {
	return &ProjectReferrerObjectMock_GetDeletionTimestamp_Call{Call: _e.mock.On("GetDeletionTimestamp")}
}

func (_c *ProjectReferrerObjectMock_GetDeletionTimestamp_Call) Run(run func()) *ProjectReferrerObjectMock_GetDeletionTimestamp_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ProjectReferrerObjectMock_GetDeletionTimestamp_Call) Return(_a0 *v1.Time) *ProjectReferrerObjectMock_GetDeletionTimestamp_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProjectReferrerObjectMock_GetDeletionTimestamp_Call) RunAndReturn(run func() *v1.Time) *ProjectReferrerObjectMock_GetDeletionTimestamp_Call {
	_c.Call.Return(run)
	return _c
}

// GetFinalizers provides a mock function with no fields
func (_m *ProjectReferrerObjectMock) GetFinalizers() []string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetFinalizers")
	}

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// ProjectReferrerObjectMock_GetFinalizers_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetFinalizers'
type ProjectReferrerObjectMock_GetFinalizers_Call struct {
	*mock.Call
}

// GetFinalizers is a helper method to define mock.On call
func (_e *ProjectReferrerObjectMock_Expecter) GetFinalizers() *ProjectReferrerObjectMock_GetFinalizers_Call {
	return &ProjectReferrerObjectMock_GetFinalizers_Call{Call: _e.mock.On("GetFinalizers")}
}

func (_c *ProjectReferrerObjectMock_GetFinalizers_Call) Run(run func()) *ProjectReferrerObjectMock_GetFinalizers_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ProjectReferrerObjectMock_GetFinalizers_Call) Return(_a0 []string) *ProjectReferrerObjectMock_GetFinalizers_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProjectReferrerObjectMock_GetFinalizers_Call) RunAndReturn(run func() []string) *ProjectReferrerObjectMock_GetFinalizers_Call {
	_c.Call.Return(run)
	return _c
}

// GetGenerateName provides a mock function with no fields
func (_m *ProjectReferrerObjectMock) GetGenerateName() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetGenerateName")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// ProjectReferrerObjectMock_GetGenerateName_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetGenerateName'
type ProjectReferrerObjectMock_GetGenerateName_Call struct {
	*mock.Call
}

// GetGenerateName is a helper method to define mock.On call
func (_e *ProjectReferrerObjectMock_Expecter) GetGenerateName() *ProjectReferrerObjectMock_GetGenerateName_Call {
	return &ProjectReferrerObjectMock_GetGenerateName_Call{Call: _e.mock.On("GetGenerateName")}
}

func (_c *ProjectReferrerObjectMock_GetGenerateName_Call) Run(run func()) *ProjectReferrerObjectMock_GetGenerateName_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ProjectReferrerObjectMock_GetGenerateName_Call) Return(_a0 string) *ProjectReferrerObjectMock_GetGenerateName_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProjectReferrerObjectMock_GetGenerateName_Call) RunAndReturn(run func() string) *ProjectReferrerObjectMock_GetGenerateName_Call {
	_c.Call.Return(run)
	return _c
}

// GetGeneration provides a mock function with no fields
func (_m *ProjectReferrerObjectMock) GetGeneration() int64 {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetGeneration")
	}

	var r0 int64
	if rf, ok := ret.Get(0).(func() int64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int64)
	}

	return r0
}

// ProjectReferrerObjectMock_GetGeneration_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetGeneration'
type ProjectReferrerObjectMock_GetGeneration_Call struct {
	*mock.Call
}

// GetGeneration is a helper method to define mock.On call
func (_e *ProjectReferrerObjectMock_Expecter) GetGeneration() *ProjectReferrerObjectMock_GetGeneration_Call {
	return &ProjectReferrerObjectMock_GetGeneration_Call{Call: _e.mock.On("GetGeneration")}
}

func (_c *ProjectReferrerObjectMock_GetGeneration_Call) Run(run func()) *ProjectReferrerObjectMock_GetGeneration_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ProjectReferrerObjectMock_GetGeneration_Call) Return(_a0 int64) *ProjectReferrerObjectMock_GetGeneration_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProjectReferrerObjectMock_GetGeneration_Call) RunAndReturn(run func() int64) *ProjectReferrerObjectMock_GetGeneration_Call {
	_c.Call.Return(run)
	return _c
}

// GetLabels provides a mock function with no fields
func (_m *ProjectReferrerObjectMock) GetLabels() map[string]string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetLabels")
	}

	var r0 map[string]string
	if rf, ok := ret.Get(0).(func() map[string]string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]string)
		}
	}

	return r0
}

// ProjectReferrerObjectMock_GetLabels_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetLabels'
type ProjectReferrerObjectMock_GetLabels_Call struct {
	*mock.Call
}

// GetLabels is a helper method to define mock.On call
func (_e *ProjectReferrerObjectMock_Expecter) GetLabels() *ProjectReferrerObjectMock_GetLabels_Call {
	return &ProjectReferrerObjectMock_GetLabels_Call{Call: _e.mock.On("GetLabels")}
}

func (_c *ProjectReferrerObjectMock_GetLabels_Call) Run(run func()) *ProjectReferrerObjectMock_GetLabels_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ProjectReferrerObjectMock_GetLabels_Call) Return(_a0 map[string]string) *ProjectReferrerObjectMock_GetLabels_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProjectReferrerObjectMock_GetLabels_Call) RunAndReturn(run func() map[string]string) *ProjectReferrerObjectMock_GetLabels_Call {
	_c.Call.Return(run)
	return _c
}

// GetManagedFields provides a mock function with no fields
func (_m *ProjectReferrerObjectMock) GetManagedFields() []v1.ManagedFieldsEntry {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetManagedFields")
	}

	var r0 []v1.ManagedFieldsEntry
	if rf, ok := ret.Get(0).(func() []v1.ManagedFieldsEntry); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]v1.ManagedFieldsEntry)
		}
	}

	return r0
}

// ProjectReferrerObjectMock_GetManagedFields_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetManagedFields'
type ProjectReferrerObjectMock_GetManagedFields_Call struct {
	*mock.Call
}

// GetManagedFields is a helper method to define mock.On call
func (_e *ProjectReferrerObjectMock_Expecter) GetManagedFields() *ProjectReferrerObjectMock_GetManagedFields_Call {
	return &ProjectReferrerObjectMock_GetManagedFields_Call{Call: _e.mock.On("GetManagedFields")}
}

func (_c *ProjectReferrerObjectMock_GetManagedFields_Call) Run(run func()) *ProjectReferrerObjectMock_GetManagedFields_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ProjectReferrerObjectMock_GetManagedFields_Call) Return(_a0 []v1.ManagedFieldsEntry) *ProjectReferrerObjectMock_GetManagedFields_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProjectReferrerObjectMock_GetManagedFields_Call) RunAndReturn(run func() []v1.ManagedFieldsEntry) *ProjectReferrerObjectMock_GetManagedFields_Call {
	_c.Call.Return(run)
	return _c
}

// GetName provides a mock function with no fields
func (_m *ProjectReferrerObjectMock) GetName() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetName")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// ProjectReferrerObjectMock_GetName_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetName'
type ProjectReferrerObjectMock_GetName_Call struct {
	*mock.Call
}

// GetName is a helper method to define mock.On call
func (_e *ProjectReferrerObjectMock_Expecter) GetName() *ProjectReferrerObjectMock_GetName_Call {
	return &ProjectReferrerObjectMock_GetName_Call{Call: _e.mock.On("GetName")}
}

func (_c *ProjectReferrerObjectMock_GetName_Call) Run(run func()) *ProjectReferrerObjectMock_GetName_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ProjectReferrerObjectMock_GetName_Call) Return(_a0 string) *ProjectReferrerObjectMock_GetName_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProjectReferrerObjectMock_GetName_Call) RunAndReturn(run func() string) *ProjectReferrerObjectMock_GetName_Call {
	_c.Call.Return(run)
	return _c
}

// GetNamespace provides a mock function with no fields
func (_m *ProjectReferrerObjectMock) GetNamespace() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetNamespace")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// ProjectReferrerObjectMock_GetNamespace_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetNamespace'
type ProjectReferrerObjectMock_GetNamespace_Call struct {
	*mock.Call
}

// GetNamespace is a helper method to define mock.On call
func (_e *ProjectReferrerObjectMock_Expecter) GetNamespace() *ProjectReferrerObjectMock_GetNamespace_Call {
	return &ProjectReferrerObjectMock_GetNamespace_Call{Call: _e.mock.On("GetNamespace")}
}

func (_c *ProjectReferrerObjectMock_GetNamespace_Call) Run(run func()) *ProjectReferrerObjectMock_GetNamespace_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ProjectReferrerObjectMock_GetNamespace_Call) Return(_a0 string) *ProjectReferrerObjectMock_GetNamespace_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProjectReferrerObjectMock_GetNamespace_Call) RunAndReturn(run func() string) *ProjectReferrerObjectMock_GetNamespace_Call {
	_c.Call.Return(run)
	return _c
}

// GetObjectKind provides a mock function with no fields
func (_m *ProjectReferrerObjectMock) GetObjectKind() schema.ObjectKind {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetObjectKind")
	}

	var r0 schema.ObjectKind
	if rf, ok := ret.Get(0).(func() schema.ObjectKind); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(schema.ObjectKind)
		}
	}

	return r0
}

// ProjectReferrerObjectMock_GetObjectKind_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetObjectKind'
type ProjectReferrerObjectMock_GetObjectKind_Call struct {
	*mock.Call
}

// GetObjectKind is a helper method to define mock.On call
func (_e *ProjectReferrerObjectMock_Expecter) GetObjectKind() *ProjectReferrerObjectMock_GetObjectKind_Call {
	return &ProjectReferrerObjectMock_GetObjectKind_Call{Call: _e.mock.On("GetObjectKind")}
}

func (_c *ProjectReferrerObjectMock_GetObjectKind_Call) Run(run func()) *ProjectReferrerObjectMock_GetObjectKind_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ProjectReferrerObjectMock_GetObjectKind_Call) Return(_a0 schema.ObjectKind) *ProjectReferrerObjectMock_GetObjectKind_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProjectReferrerObjectMock_GetObjectKind_Call) RunAndReturn(run func() schema.ObjectKind) *ProjectReferrerObjectMock_GetObjectKind_Call {
	_c.Call.Return(run)
	return _c
}

// GetOwnerReferences provides a mock function with no fields
func (_m *ProjectReferrerObjectMock) GetOwnerReferences() []v1.OwnerReference {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetOwnerReferences")
	}

	var r0 []v1.OwnerReference
	if rf, ok := ret.Get(0).(func() []v1.OwnerReference); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]v1.OwnerReference)
		}
	}

	return r0
}

// ProjectReferrerObjectMock_GetOwnerReferences_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetOwnerReferences'
type ProjectReferrerObjectMock_GetOwnerReferences_Call struct {
	*mock.Call
}

// GetOwnerReferences is a helper method to define mock.On call
func (_e *ProjectReferrerObjectMock_Expecter) GetOwnerReferences() *ProjectReferrerObjectMock_GetOwnerReferences_Call {
	return &ProjectReferrerObjectMock_GetOwnerReferences_Call{Call: _e.mock.On("GetOwnerReferences")}
}

func (_c *ProjectReferrerObjectMock_GetOwnerReferences_Call) Run(run func()) *ProjectReferrerObjectMock_GetOwnerReferences_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ProjectReferrerObjectMock_GetOwnerReferences_Call) Return(_a0 []v1.OwnerReference) *ProjectReferrerObjectMock_GetOwnerReferences_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProjectReferrerObjectMock_GetOwnerReferences_Call) RunAndReturn(run func() []v1.OwnerReference) *ProjectReferrerObjectMock_GetOwnerReferences_Call {
	_c.Call.Return(run)
	return _c
}

// GetResourceVersion provides a mock function with no fields
func (_m *ProjectReferrerObjectMock) GetResourceVersion() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetResourceVersion")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// ProjectReferrerObjectMock_GetResourceVersion_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetResourceVersion'
type ProjectReferrerObjectMock_GetResourceVersion_Call struct {
	*mock.Call
}

// GetResourceVersion is a helper method to define mock.On call
func (_e *ProjectReferrerObjectMock_Expecter) GetResourceVersion() *ProjectReferrerObjectMock_GetResourceVersion_Call {
	return &ProjectReferrerObjectMock_GetResourceVersion_Call{Call: _e.mock.On("GetResourceVersion")}
}

func (_c *ProjectReferrerObjectMock_GetResourceVersion_Call) Run(run func()) *ProjectReferrerObjectMock_GetResourceVersion_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ProjectReferrerObjectMock_GetResourceVersion_Call) Return(_a0 string) *ProjectReferrerObjectMock_GetResourceVersion_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProjectReferrerObjectMock_GetResourceVersion_Call) RunAndReturn(run func() string) *ProjectReferrerObjectMock_GetResourceVersion_Call {
	_c.Call.Return(run)
	return _c
}

// GetSelfLink provides a mock function with no fields
func (_m *ProjectReferrerObjectMock) GetSelfLink() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetSelfLink")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// ProjectReferrerObjectMock_GetSelfLink_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetSelfLink'
type ProjectReferrerObjectMock_GetSelfLink_Call struct {
	*mock.Call
}

// GetSelfLink is a helper method to define mock.On call
func (_e *ProjectReferrerObjectMock_Expecter) GetSelfLink() *ProjectReferrerObjectMock_GetSelfLink_Call {
	return &ProjectReferrerObjectMock_GetSelfLink_Call{Call: _e.mock.On("GetSelfLink")}
}

func (_c *ProjectReferrerObjectMock_GetSelfLink_Call) Run(run func()) *ProjectReferrerObjectMock_GetSelfLink_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ProjectReferrerObjectMock_GetSelfLink_Call) Return(_a0 string) *ProjectReferrerObjectMock_GetSelfLink_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProjectReferrerObjectMock_GetSelfLink_Call) RunAndReturn(run func() string) *ProjectReferrerObjectMock_GetSelfLink_Call {
	_c.Call.Return(run)
	return _c
}

// GetUID provides a mock function with no fields
func (_m *ProjectReferrerObjectMock) GetUID() types.UID {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetUID")
	}

	var r0 types.UID
	if rf, ok := ret.Get(0).(func() types.UID); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(types.UID)
	}

	return r0
}

// ProjectReferrerObjectMock_GetUID_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetUID'
type ProjectReferrerObjectMock_GetUID_Call struct {
	*mock.Call
}

// GetUID is a helper method to define mock.On call
func (_e *ProjectReferrerObjectMock_Expecter) GetUID() *ProjectReferrerObjectMock_GetUID_Call {
	return &ProjectReferrerObjectMock_GetUID_Call{Call: _e.mock.On("GetUID")}
}

func (_c *ProjectReferrerObjectMock_GetUID_Call) Run(run func()) *ProjectReferrerObjectMock_GetUID_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ProjectReferrerObjectMock_GetUID_Call) Return(_a0 types.UID) *ProjectReferrerObjectMock_GetUID_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProjectReferrerObjectMock_GetUID_Call) RunAndReturn(run func() types.UID) *ProjectReferrerObjectMock_GetUID_Call {
	_c.Call.Return(run)
	return _c
}

// ProjectDualRef provides a mock function with no fields
func (_m *ProjectReferrerObjectMock) ProjectDualRef() *apiv1.ProjectDualReference {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for ProjectDualRef")
	}

	var r0 *apiv1.ProjectDualReference
	if rf, ok := ret.Get(0).(func() *apiv1.ProjectDualReference); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*apiv1.ProjectDualReference)
		}
	}

	return r0
}

// ProjectReferrerObjectMock_ProjectDualRef_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ProjectDualRef'
type ProjectReferrerObjectMock_ProjectDualRef_Call struct {
	*mock.Call
}

// ProjectDualRef is a helper method to define mock.On call
func (_e *ProjectReferrerObjectMock_Expecter) ProjectDualRef() *ProjectReferrerObjectMock_ProjectDualRef_Call {
	return &ProjectReferrerObjectMock_ProjectDualRef_Call{Call: _e.mock.On("ProjectDualRef")}
}

func (_c *ProjectReferrerObjectMock_ProjectDualRef_Call) Run(run func()) *ProjectReferrerObjectMock_ProjectDualRef_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ProjectReferrerObjectMock_ProjectDualRef_Call) Return(_a0 *apiv1.ProjectDualReference) *ProjectReferrerObjectMock_ProjectDualRef_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProjectReferrerObjectMock_ProjectDualRef_Call) RunAndReturn(run func() *apiv1.ProjectDualReference) *ProjectReferrerObjectMock_ProjectDualRef_Call {
	_c.Call.Return(run)
	return _c
}

// SetAnnotations provides a mock function with given fields: annotations
func (_m *ProjectReferrerObjectMock) SetAnnotations(annotations map[string]string) {
	_m.Called(annotations)
}

// ProjectReferrerObjectMock_SetAnnotations_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetAnnotations'
type ProjectReferrerObjectMock_SetAnnotations_Call struct {
	*mock.Call
}

// SetAnnotations is a helper method to define mock.On call
//   - annotations map[string]string
func (_e *ProjectReferrerObjectMock_Expecter) SetAnnotations(annotations interface{}) *ProjectReferrerObjectMock_SetAnnotations_Call {
	return &ProjectReferrerObjectMock_SetAnnotations_Call{Call: _e.mock.On("SetAnnotations", annotations)}
}

func (_c *ProjectReferrerObjectMock_SetAnnotations_Call) Run(run func(annotations map[string]string)) *ProjectReferrerObjectMock_SetAnnotations_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(map[string]string))
	})
	return _c
}

func (_c *ProjectReferrerObjectMock_SetAnnotations_Call) Return() *ProjectReferrerObjectMock_SetAnnotations_Call {
	_c.Call.Return()
	return _c
}

func (_c *ProjectReferrerObjectMock_SetAnnotations_Call) RunAndReturn(run func(map[string]string)) *ProjectReferrerObjectMock_SetAnnotations_Call {
	_c.Run(run)
	return _c
}

// SetCreationTimestamp provides a mock function with given fields: timestamp
func (_m *ProjectReferrerObjectMock) SetCreationTimestamp(timestamp v1.Time) {
	_m.Called(timestamp)
}

// ProjectReferrerObjectMock_SetCreationTimestamp_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetCreationTimestamp'
type ProjectReferrerObjectMock_SetCreationTimestamp_Call struct {
	*mock.Call
}

// SetCreationTimestamp is a helper method to define mock.On call
//   - timestamp v1.Time
func (_e *ProjectReferrerObjectMock_Expecter) SetCreationTimestamp(timestamp interface{}) *ProjectReferrerObjectMock_SetCreationTimestamp_Call {
	return &ProjectReferrerObjectMock_SetCreationTimestamp_Call{Call: _e.mock.On("SetCreationTimestamp", timestamp)}
}

func (_c *ProjectReferrerObjectMock_SetCreationTimestamp_Call) Run(run func(timestamp v1.Time)) *ProjectReferrerObjectMock_SetCreationTimestamp_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(v1.Time))
	})
	return _c
}

func (_c *ProjectReferrerObjectMock_SetCreationTimestamp_Call) Return() *ProjectReferrerObjectMock_SetCreationTimestamp_Call {
	_c.Call.Return()
	return _c
}

func (_c *ProjectReferrerObjectMock_SetCreationTimestamp_Call) RunAndReturn(run func(v1.Time)) *ProjectReferrerObjectMock_SetCreationTimestamp_Call {
	_c.Run(run)
	return _c
}

// SetDeletionGracePeriodSeconds provides a mock function with given fields: _a0
func (_m *ProjectReferrerObjectMock) SetDeletionGracePeriodSeconds(_a0 *int64) {
	_m.Called(_a0)
}

// ProjectReferrerObjectMock_SetDeletionGracePeriodSeconds_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetDeletionGracePeriodSeconds'
type ProjectReferrerObjectMock_SetDeletionGracePeriodSeconds_Call struct {
	*mock.Call
}

// SetDeletionGracePeriodSeconds is a helper method to define mock.On call
//   - _a0 *int64
func (_e *ProjectReferrerObjectMock_Expecter) SetDeletionGracePeriodSeconds(_a0 interface{}) *ProjectReferrerObjectMock_SetDeletionGracePeriodSeconds_Call {
	return &ProjectReferrerObjectMock_SetDeletionGracePeriodSeconds_Call{Call: _e.mock.On("SetDeletionGracePeriodSeconds", _a0)}
}

func (_c *ProjectReferrerObjectMock_SetDeletionGracePeriodSeconds_Call) Run(run func(_a0 *int64)) *ProjectReferrerObjectMock_SetDeletionGracePeriodSeconds_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*int64))
	})
	return _c
}

func (_c *ProjectReferrerObjectMock_SetDeletionGracePeriodSeconds_Call) Return() *ProjectReferrerObjectMock_SetDeletionGracePeriodSeconds_Call {
	_c.Call.Return()
	return _c
}

func (_c *ProjectReferrerObjectMock_SetDeletionGracePeriodSeconds_Call) RunAndReturn(run func(*int64)) *ProjectReferrerObjectMock_SetDeletionGracePeriodSeconds_Call {
	_c.Run(run)
	return _c
}

// SetDeletionTimestamp provides a mock function with given fields: timestamp
func (_m *ProjectReferrerObjectMock) SetDeletionTimestamp(timestamp *v1.Time) {
	_m.Called(timestamp)
}

// ProjectReferrerObjectMock_SetDeletionTimestamp_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetDeletionTimestamp'
type ProjectReferrerObjectMock_SetDeletionTimestamp_Call struct {
	*mock.Call
}

// SetDeletionTimestamp is a helper method to define mock.On call
//   - timestamp *v1.Time
func (_e *ProjectReferrerObjectMock_Expecter) SetDeletionTimestamp(timestamp interface{}) *ProjectReferrerObjectMock_SetDeletionTimestamp_Call {
	return &ProjectReferrerObjectMock_SetDeletionTimestamp_Call{Call: _e.mock.On("SetDeletionTimestamp", timestamp)}
}

func (_c *ProjectReferrerObjectMock_SetDeletionTimestamp_Call) Run(run func(timestamp *v1.Time)) *ProjectReferrerObjectMock_SetDeletionTimestamp_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*v1.Time))
	})
	return _c
}

func (_c *ProjectReferrerObjectMock_SetDeletionTimestamp_Call) Return() *ProjectReferrerObjectMock_SetDeletionTimestamp_Call {
	_c.Call.Return()
	return _c
}

func (_c *ProjectReferrerObjectMock_SetDeletionTimestamp_Call) RunAndReturn(run func(*v1.Time)) *ProjectReferrerObjectMock_SetDeletionTimestamp_Call {
	_c.Run(run)
	return _c
}

// SetFinalizers provides a mock function with given fields: finalizers
func (_m *ProjectReferrerObjectMock) SetFinalizers(finalizers []string) {
	_m.Called(finalizers)
}

// ProjectReferrerObjectMock_SetFinalizers_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetFinalizers'
type ProjectReferrerObjectMock_SetFinalizers_Call struct {
	*mock.Call
}

// SetFinalizers is a helper method to define mock.On call
//   - finalizers []string
func (_e *ProjectReferrerObjectMock_Expecter) SetFinalizers(finalizers interface{}) *ProjectReferrerObjectMock_SetFinalizers_Call {
	return &ProjectReferrerObjectMock_SetFinalizers_Call{Call: _e.mock.On("SetFinalizers", finalizers)}
}

func (_c *ProjectReferrerObjectMock_SetFinalizers_Call) Run(run func(finalizers []string)) *ProjectReferrerObjectMock_SetFinalizers_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].([]string))
	})
	return _c
}

func (_c *ProjectReferrerObjectMock_SetFinalizers_Call) Return() *ProjectReferrerObjectMock_SetFinalizers_Call {
	_c.Call.Return()
	return _c
}

func (_c *ProjectReferrerObjectMock_SetFinalizers_Call) RunAndReturn(run func([]string)) *ProjectReferrerObjectMock_SetFinalizers_Call {
	_c.Run(run)
	return _c
}

// SetGenerateName provides a mock function with given fields: name
func (_m *ProjectReferrerObjectMock) SetGenerateName(name string) {
	_m.Called(name)
}

// ProjectReferrerObjectMock_SetGenerateName_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetGenerateName'
type ProjectReferrerObjectMock_SetGenerateName_Call struct {
	*mock.Call
}

// SetGenerateName is a helper method to define mock.On call
//   - name string
func (_e *ProjectReferrerObjectMock_Expecter) SetGenerateName(name interface{}) *ProjectReferrerObjectMock_SetGenerateName_Call {
	return &ProjectReferrerObjectMock_SetGenerateName_Call{Call: _e.mock.On("SetGenerateName", name)}
}

func (_c *ProjectReferrerObjectMock_SetGenerateName_Call) Run(run func(name string)) *ProjectReferrerObjectMock_SetGenerateName_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *ProjectReferrerObjectMock_SetGenerateName_Call) Return() *ProjectReferrerObjectMock_SetGenerateName_Call {
	_c.Call.Return()
	return _c
}

func (_c *ProjectReferrerObjectMock_SetGenerateName_Call) RunAndReturn(run func(string)) *ProjectReferrerObjectMock_SetGenerateName_Call {
	_c.Run(run)
	return _c
}

// SetGeneration provides a mock function with given fields: generation
func (_m *ProjectReferrerObjectMock) SetGeneration(generation int64) {
	_m.Called(generation)
}

// ProjectReferrerObjectMock_SetGeneration_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetGeneration'
type ProjectReferrerObjectMock_SetGeneration_Call struct {
	*mock.Call
}

// SetGeneration is a helper method to define mock.On call
//   - generation int64
func (_e *ProjectReferrerObjectMock_Expecter) SetGeneration(generation interface{}) *ProjectReferrerObjectMock_SetGeneration_Call {
	return &ProjectReferrerObjectMock_SetGeneration_Call{Call: _e.mock.On("SetGeneration", generation)}
}

func (_c *ProjectReferrerObjectMock_SetGeneration_Call) Run(run func(generation int64)) *ProjectReferrerObjectMock_SetGeneration_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(int64))
	})
	return _c
}

func (_c *ProjectReferrerObjectMock_SetGeneration_Call) Return() *ProjectReferrerObjectMock_SetGeneration_Call {
	_c.Call.Return()
	return _c
}

func (_c *ProjectReferrerObjectMock_SetGeneration_Call) RunAndReturn(run func(int64)) *ProjectReferrerObjectMock_SetGeneration_Call {
	_c.Run(run)
	return _c
}

// SetLabels provides a mock function with given fields: labels
func (_m *ProjectReferrerObjectMock) SetLabels(labels map[string]string) {
	_m.Called(labels)
}

// ProjectReferrerObjectMock_SetLabels_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetLabels'
type ProjectReferrerObjectMock_SetLabels_Call struct {
	*mock.Call
}

// SetLabels is a helper method to define mock.On call
//   - labels map[string]string
func (_e *ProjectReferrerObjectMock_Expecter) SetLabels(labels interface{}) *ProjectReferrerObjectMock_SetLabels_Call {
	return &ProjectReferrerObjectMock_SetLabels_Call{Call: _e.mock.On("SetLabels", labels)}
}

func (_c *ProjectReferrerObjectMock_SetLabels_Call) Run(run func(labels map[string]string)) *ProjectReferrerObjectMock_SetLabels_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(map[string]string))
	})
	return _c
}

func (_c *ProjectReferrerObjectMock_SetLabels_Call) Return() *ProjectReferrerObjectMock_SetLabels_Call {
	_c.Call.Return()
	return _c
}

func (_c *ProjectReferrerObjectMock_SetLabels_Call) RunAndReturn(run func(map[string]string)) *ProjectReferrerObjectMock_SetLabels_Call {
	_c.Run(run)
	return _c
}

// SetManagedFields provides a mock function with given fields: managedFields
func (_m *ProjectReferrerObjectMock) SetManagedFields(managedFields []v1.ManagedFieldsEntry) {
	_m.Called(managedFields)
}

// ProjectReferrerObjectMock_SetManagedFields_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetManagedFields'
type ProjectReferrerObjectMock_SetManagedFields_Call struct {
	*mock.Call
}

// SetManagedFields is a helper method to define mock.On call
//   - managedFields []v1.ManagedFieldsEntry
func (_e *ProjectReferrerObjectMock_Expecter) SetManagedFields(managedFields interface{}) *ProjectReferrerObjectMock_SetManagedFields_Call {
	return &ProjectReferrerObjectMock_SetManagedFields_Call{Call: _e.mock.On("SetManagedFields", managedFields)}
}

func (_c *ProjectReferrerObjectMock_SetManagedFields_Call) Run(run func(managedFields []v1.ManagedFieldsEntry)) *ProjectReferrerObjectMock_SetManagedFields_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].([]v1.ManagedFieldsEntry))
	})
	return _c
}

func (_c *ProjectReferrerObjectMock_SetManagedFields_Call) Return() *ProjectReferrerObjectMock_SetManagedFields_Call {
	_c.Call.Return()
	return _c
}

func (_c *ProjectReferrerObjectMock_SetManagedFields_Call) RunAndReturn(run func([]v1.ManagedFieldsEntry)) *ProjectReferrerObjectMock_SetManagedFields_Call {
	_c.Run(run)
	return _c
}

// SetName provides a mock function with given fields: name
func (_m *ProjectReferrerObjectMock) SetName(name string) {
	_m.Called(name)
}

// ProjectReferrerObjectMock_SetName_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetName'
type ProjectReferrerObjectMock_SetName_Call struct {
	*mock.Call
}

// SetName is a helper method to define mock.On call
//   - name string
func (_e *ProjectReferrerObjectMock_Expecter) SetName(name interface{}) *ProjectReferrerObjectMock_SetName_Call {
	return &ProjectReferrerObjectMock_SetName_Call{Call: _e.mock.On("SetName", name)}
}

func (_c *ProjectReferrerObjectMock_SetName_Call) Run(run func(name string)) *ProjectReferrerObjectMock_SetName_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *ProjectReferrerObjectMock_SetName_Call) Return() *ProjectReferrerObjectMock_SetName_Call {
	_c.Call.Return()
	return _c
}

func (_c *ProjectReferrerObjectMock_SetName_Call) RunAndReturn(run func(string)) *ProjectReferrerObjectMock_SetName_Call {
	_c.Run(run)
	return _c
}

// SetNamespace provides a mock function with given fields: namespace
func (_m *ProjectReferrerObjectMock) SetNamespace(namespace string) {
	_m.Called(namespace)
}

// ProjectReferrerObjectMock_SetNamespace_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetNamespace'
type ProjectReferrerObjectMock_SetNamespace_Call struct {
	*mock.Call
}

// SetNamespace is a helper method to define mock.On call
//   - namespace string
func (_e *ProjectReferrerObjectMock_Expecter) SetNamespace(namespace interface{}) *ProjectReferrerObjectMock_SetNamespace_Call {
	return &ProjectReferrerObjectMock_SetNamespace_Call{Call: _e.mock.On("SetNamespace", namespace)}
}

func (_c *ProjectReferrerObjectMock_SetNamespace_Call) Run(run func(namespace string)) *ProjectReferrerObjectMock_SetNamespace_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *ProjectReferrerObjectMock_SetNamespace_Call) Return() *ProjectReferrerObjectMock_SetNamespace_Call {
	_c.Call.Return()
	return _c
}

func (_c *ProjectReferrerObjectMock_SetNamespace_Call) RunAndReturn(run func(string)) *ProjectReferrerObjectMock_SetNamespace_Call {
	_c.Run(run)
	return _c
}

// SetOwnerReferences provides a mock function with given fields: _a0
func (_m *ProjectReferrerObjectMock) SetOwnerReferences(_a0 []v1.OwnerReference) {
	_m.Called(_a0)
}

// ProjectReferrerObjectMock_SetOwnerReferences_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetOwnerReferences'
type ProjectReferrerObjectMock_SetOwnerReferences_Call struct {
	*mock.Call
}

// SetOwnerReferences is a helper method to define mock.On call
//   - _a0 []v1.OwnerReference
func (_e *ProjectReferrerObjectMock_Expecter) SetOwnerReferences(_a0 interface{}) *ProjectReferrerObjectMock_SetOwnerReferences_Call {
	return &ProjectReferrerObjectMock_SetOwnerReferences_Call{Call: _e.mock.On("SetOwnerReferences", _a0)}
}

func (_c *ProjectReferrerObjectMock_SetOwnerReferences_Call) Run(run func(_a0 []v1.OwnerReference)) *ProjectReferrerObjectMock_SetOwnerReferences_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].([]v1.OwnerReference))
	})
	return _c
}

func (_c *ProjectReferrerObjectMock_SetOwnerReferences_Call) Return() *ProjectReferrerObjectMock_SetOwnerReferences_Call {
	_c.Call.Return()
	return _c
}

func (_c *ProjectReferrerObjectMock_SetOwnerReferences_Call) RunAndReturn(run func([]v1.OwnerReference)) *ProjectReferrerObjectMock_SetOwnerReferences_Call {
	_c.Run(run)
	return _c
}

// SetResourceVersion provides a mock function with given fields: version
func (_m *ProjectReferrerObjectMock) SetResourceVersion(version string) {
	_m.Called(version)
}

// ProjectReferrerObjectMock_SetResourceVersion_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetResourceVersion'
type ProjectReferrerObjectMock_SetResourceVersion_Call struct {
	*mock.Call
}

// SetResourceVersion is a helper method to define mock.On call
//   - version string
func (_e *ProjectReferrerObjectMock_Expecter) SetResourceVersion(version interface{}) *ProjectReferrerObjectMock_SetResourceVersion_Call {
	return &ProjectReferrerObjectMock_SetResourceVersion_Call{Call: _e.mock.On("SetResourceVersion", version)}
}

func (_c *ProjectReferrerObjectMock_SetResourceVersion_Call) Run(run func(version string)) *ProjectReferrerObjectMock_SetResourceVersion_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *ProjectReferrerObjectMock_SetResourceVersion_Call) Return() *ProjectReferrerObjectMock_SetResourceVersion_Call {
	_c.Call.Return()
	return _c
}

func (_c *ProjectReferrerObjectMock_SetResourceVersion_Call) RunAndReturn(run func(string)) *ProjectReferrerObjectMock_SetResourceVersion_Call {
	_c.Run(run)
	return _c
}

// SetSelfLink provides a mock function with given fields: selfLink
func (_m *ProjectReferrerObjectMock) SetSelfLink(selfLink string) {
	_m.Called(selfLink)
}

// ProjectReferrerObjectMock_SetSelfLink_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetSelfLink'
type ProjectReferrerObjectMock_SetSelfLink_Call struct {
	*mock.Call
}

// SetSelfLink is a helper method to define mock.On call
//   - selfLink string
func (_e *ProjectReferrerObjectMock_Expecter) SetSelfLink(selfLink interface{}) *ProjectReferrerObjectMock_SetSelfLink_Call {
	return &ProjectReferrerObjectMock_SetSelfLink_Call{Call: _e.mock.On("SetSelfLink", selfLink)}
}

func (_c *ProjectReferrerObjectMock_SetSelfLink_Call) Run(run func(selfLink string)) *ProjectReferrerObjectMock_SetSelfLink_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *ProjectReferrerObjectMock_SetSelfLink_Call) Return() *ProjectReferrerObjectMock_SetSelfLink_Call {
	_c.Call.Return()
	return _c
}

func (_c *ProjectReferrerObjectMock_SetSelfLink_Call) RunAndReturn(run func(string)) *ProjectReferrerObjectMock_SetSelfLink_Call {
	_c.Run(run)
	return _c
}

// SetUID provides a mock function with given fields: uid
func (_m *ProjectReferrerObjectMock) SetUID(uid types.UID) {
	_m.Called(uid)
}

// ProjectReferrerObjectMock_SetUID_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetUID'
type ProjectReferrerObjectMock_SetUID_Call struct {
	*mock.Call
}

// SetUID is a helper method to define mock.On call
//   - uid types.UID
func (_e *ProjectReferrerObjectMock_Expecter) SetUID(uid interface{}) *ProjectReferrerObjectMock_SetUID_Call {
	return &ProjectReferrerObjectMock_SetUID_Call{Call: _e.mock.On("SetUID", uid)}
}

func (_c *ProjectReferrerObjectMock_SetUID_Call) Run(run func(uid types.UID)) *ProjectReferrerObjectMock_SetUID_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(types.UID))
	})
	return _c
}

func (_c *ProjectReferrerObjectMock_SetUID_Call) Return() *ProjectReferrerObjectMock_SetUID_Call {
	_c.Call.Return()
	return _c
}

func (_c *ProjectReferrerObjectMock_SetUID_Call) RunAndReturn(run func(types.UID)) *ProjectReferrerObjectMock_SetUID_Call {
	_c.Run(run)
	return _c
}

// NewProjectReferrerObjectMock creates a new instance of ProjectReferrerObjectMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewProjectReferrerObjectMock(t interface {
	mock.TestingT
	Cleanup(func())
}) *ProjectReferrerObjectMock {
	mock := &ProjectReferrerObjectMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
