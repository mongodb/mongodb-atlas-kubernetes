// Code generated by mockery. DO NOT EDIT.

package translation

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	encryptionatrest "github.com/mongodb/mongodb-atlas-kubernetes/v2/internal/translation/encryptionatrest"
)

// EncryptionAtRestServiceMock is an autogenerated mock type for the EncryptionAtRestService type
type EncryptionAtRestServiceMock struct {
	mock.Mock
}

type EncryptionAtRestServiceMock_Expecter struct {
	mock *mock.Mock
}

func (_m *EncryptionAtRestServiceMock) EXPECT() *EncryptionAtRestServiceMock_Expecter {
	return &EncryptionAtRestServiceMock_Expecter{mock: &_m.Mock}
}

// Get provides a mock function with given fields: _a0, _a1
func (_m *EncryptionAtRestServiceMock) Get(_a0 context.Context, _a1 string) (*encryptionatrest.EncryptionAtRest, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for Get")
	}

	var r0 *encryptionatrest.EncryptionAtRest
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (*encryptionatrest.EncryptionAtRest, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) *encryptionatrest.EncryptionAtRest); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*encryptionatrest.EncryptionAtRest)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// EncryptionAtRestServiceMock_Get_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Get'
type EncryptionAtRestServiceMock_Get_Call struct {
	*mock.Call
}

// Get is a helper method to define mock.On call
//   - _a0 context.Context
//   - _a1 string
func (_e *EncryptionAtRestServiceMock_Expecter) Get(_a0 interface{}, _a1 interface{}) *EncryptionAtRestServiceMock_Get_Call {
	return &EncryptionAtRestServiceMock_Get_Call{Call: _e.mock.On("Get", _a0, _a1)}
}

func (_c *EncryptionAtRestServiceMock_Get_Call) Run(run func(_a0 context.Context, _a1 string)) *EncryptionAtRestServiceMock_Get_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *EncryptionAtRestServiceMock_Get_Call) Return(_a0 *encryptionatrest.EncryptionAtRest, _a1 error) *EncryptionAtRestServiceMock_Get_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *EncryptionAtRestServiceMock_Get_Call) RunAndReturn(run func(context.Context, string) (*encryptionatrest.EncryptionAtRest, error)) *EncryptionAtRestServiceMock_Get_Call {
	_c.Call.Return(run)
	return _c
}

// Update provides a mock function with given fields: _a0, _a1, _a2
func (_m *EncryptionAtRestServiceMock) Update(_a0 context.Context, _a1 string, _a2 encryptionatrest.EncryptionAtRest) error {
	ret := _m.Called(_a0, _a1, _a2)

	if len(ret) == 0 {
		panic("no return value specified for Update")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, encryptionatrest.EncryptionAtRest) error); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// EncryptionAtRestServiceMock_Update_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Update'
type EncryptionAtRestServiceMock_Update_Call struct {
	*mock.Call
}

// Update is a helper method to define mock.On call
//   - _a0 context.Context
//   - _a1 string
//   - _a2 encryptionatrest.EncryptionAtRest
func (_e *EncryptionAtRestServiceMock_Expecter) Update(_a0 interface{}, _a1 interface{}, _a2 interface{}) *EncryptionAtRestServiceMock_Update_Call {
	return &EncryptionAtRestServiceMock_Update_Call{Call: _e.mock.On("Update", _a0, _a1, _a2)}
}

func (_c *EncryptionAtRestServiceMock_Update_Call) Run(run func(_a0 context.Context, _a1 string, _a2 encryptionatrest.EncryptionAtRest)) *EncryptionAtRestServiceMock_Update_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(encryptionatrest.EncryptionAtRest))
	})
	return _c
}

func (_c *EncryptionAtRestServiceMock_Update_Call) Return(_a0 error) *EncryptionAtRestServiceMock_Update_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *EncryptionAtRestServiceMock_Update_Call) RunAndReturn(run func(context.Context, string, encryptionatrest.EncryptionAtRest) error) *EncryptionAtRestServiceMock_Update_Call {
	_c.Call.Return(run)
	return _c
}

// NewEncryptionAtRestServiceMock creates a new instance of EncryptionAtRestServiceMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewEncryptionAtRestServiceMock(t interface {
	mock.TestingT
	Cleanup(func())
}) *EncryptionAtRestServiceMock {
	mock := &EncryptionAtRestServiceMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
