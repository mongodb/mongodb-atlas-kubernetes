// Code generated by crd2go. DO NOT EDIT.

package v1

import metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"

func init() {
	SchemeBuilder.Register(&Organization{})
	SchemeBuilder.Register(&OrganizationList{})
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

type Organization struct {
	metav1.TypeMeta `json:",inline"`

	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec OrganizationSpec `json:"spec,omitempty"`

	Status OrganizationStatus `json:"status,omitempty"`
}

type OrganizationSpec struct {
	// V20250312 The spec of the organization resource for version v20250312.
	V20250312 *V20250312 `json:"v20250312,omitempty"`
}

type V20250312 struct {
	// Entry The entry fields of the organization resource spec. These fields can be
	// set for creating and updating organizations.
	Entry *Entry `json:"entry,omitempty"`
}

type Entry struct {
	// ApiKey Details of the programmatic API key to be created.
	ApiKey *ApiKey `json:"apiKey,omitempty"`

	// FederationSettingsId Unique 24-hexadecimal digit string that identifies the
	// federation to link the newly created organization to. If specified, the proposed
	// Organization Owner of the new organization must have the Organization Owner role
	// in an organization associated with the federation.
	FederationSettingsId *string `json:"federationSettingsId,omitempty"`

	// Name Human-readable label that identifies the organization.
	Name string `json:"name"`

	// OrgOwnerId Unique 24-hexadecimal digit string that identifies the MongoDB Cloud
	// user that you want to assign the Organization Owner role. This user must be a
	// member of the same organization as the calling API key. If you provide
	// `federationSettingsId`, this user must instead have the Organization Owner role
	// on an organization in the specified federation. This parameter is required only
	// when you authenticate with Programmatic API Keys.
	OrgOwnerId *string `json:"orgOwnerId,omitempty"`

	// SkipDefaultAlertsSettings Disables automatic alert creation. When set to true,
	// no organization level alerts will be created automatically.
	SkipDefaultAlertsSettings *bool `json:"skipDefaultAlertsSettings,omitempty"`
}

type ApiKey struct {
	// Desc Purpose or explanation provided when someone created this organization API
	// key.
	Desc string `json:"desc"`

	// Roles List of roles to grant this API key. If you provide this list, provide a
	// minimum of one role and ensure each role applies to this organization.
	Roles []string `json:"roles"`
}

type OrganizationStatus struct {
	// Conditions Represents the latest available observations of a resource's current
	// state.
	Conditions *[]metav1.Condition `json:"conditions,omitempty"`

	// V20250312 The last observed Atlas state of the organization resource for version
	// v20250312.
	V20250312 *OrganizationStatusV20250312 `json:"v20250312,omitempty"`
}

type OrganizationStatusV20250312 struct {
	// FederationSettingsId Unique 24-hexadecimal digit string that identifies the
	// federation that you linked the newly created organization to.
	FederationSettingsId *string `json:"federationSettingsId,omitempty"`

	// OrgOwnerId Unique 24-hexadecimal digit string that identifies the MongoDB Cloud
	// user that you assigned the Organization Owner role in the new organization.
	OrgOwnerId *string `json:"orgOwnerId,omitempty"`

	// Organization Details that describe the organization.
	Organization *V20250312Organization `json:"organization,omitempty"`

	// SkipDefaultAlertsSettings Disables automatic alert creation. When set to true,
	// no organization level alerts will be created automatically.
	SkipDefaultAlertsSettings *bool `json:"skipDefaultAlertsSettings,omitempty"`
}

type V20250312Organization struct {
	// Id Unique 24-hexadecimal digit string that identifies the organization.
	Id *string `json:"id,omitempty"`

	// IsDeleted Flag that indicates whether this organization has been deleted.
	IsDeleted *bool `json:"isDeleted,omitempty"`

	// Name Human-readable label that identifies the organization.
	Name string `json:"name"`

	// SkipDefaultAlertsSettings Disables automatic alert creation. When set to true,
	// no organization level alerts will be created automatically.
	SkipDefaultAlertsSettings *bool `json:"skipDefaultAlertsSettings,omitempty"`
}

// +kubebuilder:object:root=true
type OrganizationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Organization `json:"items"`
}
