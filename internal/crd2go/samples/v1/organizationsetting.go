// Code generated by crd2go. DO NOT EDIT.

package v1

import metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"

func init() {
	SchemeBuilder.Register(&OrganizationSetting{})
	SchemeBuilder.Register(&OrganizationSettingList{})
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

type OrganizationSetting struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   OrganizationSettingSpec   `json:"spec,omitempty"`
	Status OrganizationSettingStatus `json:"status,omitempty"`
}

type OrganizationSettingSpec struct {
	// V20250312 The spec of the organizationsetting resource for version v20250312.
	V20250312 *OrganizationSettingSpecV20250312 `json:"v20250312,omitempty"`
}

type OrganizationSettingSpecV20250312 struct {
	// Entry The entry fields of the organizationsetting resource spec. These fields
	// can be set for creating and updating organizationsettings.
	Entry *OrganizationSettingSpecV20250312Entry `json:"entry,omitempty"`

	// OrgId Unique 24-hexadecimal digit string that identifies the organization that
	// contains your projects. Use the
	// [/orgs](#tag/Organizations/operation/listOrganizations) endpoint to retrieve all
	// organizations to which the authenticated user has access.
	OrgId string `json:"orgId"`
}

type OrganizationSettingSpecV20250312Entry struct {
	// ApiAccessListRequired Flag that indicates whether to require API operations to
	// originate from an IP Address added to the API access list for the specified
	// organization.
	ApiAccessListRequired *bool `json:"apiAccessListRequired,omitempty"`

	// GenAIFeaturesEnabled Flag that indicates whether this organization has access to
	// generative AI features. This setting only applies to Atlas Commercial and is
	// enabled by default. Once this setting is turned on, Project Owners may be able
	// to enable or disable individual AI features at the project level.
	GenAIFeaturesEnabled *bool `json:"genAIFeaturesEnabled,omitempty"`

	// MaxServiceAccountSecretValidityInHours Number that represents the maximum period
	// before expiry in hours for new Atlas Admin API Service Account secrets within
	// the specified organization.
	MaxServiceAccountSecretValidityInHours *int `json:"maxServiceAccountSecretValidityInHours,omitempty"`

	// MultiFactorAuthRequired Flag that indicates whether to require users to set up
	// Multi-Factor Authentication (MFA) before accessing the specified organization.
	// To learn more, see:
	// https://www.mongodb.com/docs/atlas/security-multi-factor-authentication/.
	MultiFactorAuthRequired *bool `json:"multiFactorAuthRequired,omitempty"`

	// RestrictEmployeeAccess Flag that indicates whether to block MongoDB Support from
	// accessing Atlas infrastructure and cluster logs for any deployment in the
	// specified organization without explicit permission. Once this setting is turned
	// on, you can grant MongoDB Support a 24-hour bypass access to the Atlas
	// deployment to resolve support issues. To learn more, see:
	// https://www.mongodb.com/docs/atlas/security-restrict-support-access/.
	RestrictEmployeeAccess *bool `json:"restrictEmployeeAccess,omitempty"`

	// SecurityContact String that specifies a single email address for the specified
	// organization to receive security-related notifications. Specifying a security
	// contact does not grant them authorization or access to Atlas for security
	// decisions or approvals. An empty string is valid and clears the existing
	// security contact (if any).
	SecurityContact *string `json:"securityContact,omitempty"`

	// StreamsCrossGroupEnabled Flag that indicates whether a group's Atlas Stream
	// Processing instances in this organization can create connections to other
	// group's clusters in the same organization.
	StreamsCrossGroupEnabled *bool `json:"streamsCrossGroupEnabled,omitempty"`
}

type OrganizationSettingStatus struct {
	// Conditions Represents the latest available observations of a resource's current
	// state.
	Conditions *[]metav1.Condition `json:"conditions,omitempty"`
}

// +kubebuilder:object:root=true
type OrganizationSettingList struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Items             []OrganizationSetting `json:"items"`
}
