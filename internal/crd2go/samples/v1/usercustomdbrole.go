// Code generated by crd2go. DO NOT EDIT.

package v1

import metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"

func init() {
	SchemeBuilder.Register(&Group{})
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

type UserCustomDBRole struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   UserCustomDBRoleSpec   `json:"spec,omitempty"`
	Status UserCustomDBRoleStatus `json:"status,omitempty"`
}

type UserCustomDBRoleSpec struct {
	// V20231115 The spec of the usercustomdbrole resource for version v20231115.
	V20231115 *UserCustomDBRoleSpecV20231115 `json:"v20231115,omitempty"`
}

type UserCustomDBRoleSpecV20231115 struct {
	// Entry The entry fields of the usercustomdbrole resource spec. These fields can
	// be set for creating and updating usercustomdbroles.
	Entry *UserCustomDBRoleSpecV20231115Entry `json:"entry,omitempty"`

	// Parameters The parameter fields of the usercustomdbrole resource spec. These
	// fields are used when creating usercustomdbroles only.
	Parameters *NetworkPermissionEntriesSpecV20250312Parameters `json:"parameters,omitempty"`
}

type UserCustomDBRoleSpecV20231115Entry struct {
	// Actions List of the individual privilege actions that the role grants.
	Actions *[]Actions `json:"actions,omitempty"`

	// InheritedRoles List of the built-in roles that this custom role inherits.
	InheritedRoles *[]InheritedRoles `json:"inheritedRoles,omitempty"`

	// RoleName Human-readable label that identifies the role for the request. This
	// name must be unique for this custom role in this project.
	RoleName string `json:"roleName"`
}

type Actions struct {
	// Action Human-readable label that identifies the privilege action.
	Action string `json:"action"`

	// Resources List of resources on which you grant the action.
	Resources *[]Resources `json:"resources,omitempty"`
}

type Resources struct {
	// Cluster Flag that indicates whether to grant the action on the cluster resource.
	// If `true`, MongoDB Cloud ignores the **actions.resources.collection** and
	// **actions.resources.db** parameters.
	Cluster bool `json:"cluster"`

	// Collection Human-readable label that identifies the collection on which you
	// grant the action to one MongoDB user. If you don't set this parameter, you grant
	// the action to all collections in the database specified in the
	// **actions.resources.db** parameter. If you set `"actions.resources.cluster" :
	// true`, MongoDB Cloud ignores this parameter.
	Collection string `json:"collection"`

	// Db Human-readable label that identifies the database on which you grant the
	// action to one MongoDB user. If you set `"actions.resources.cluster" : true`,
	// MongoDB Cloud ignores this parameter.
	Db string `json:"db"`
}

type InheritedRoles struct {
	// Db Human-readable label that identifies the database on which someone grants the
	// action to one MongoDB user.
	Db string `json:"db"`

	// Role Human-readable label that identifies the role inherited. Set this value to
	// `admin` for every role except `read` or `readWrite`.
	Role string `json:"role"`
}

type UserCustomDBRoleStatus struct {
	// Conditions Represents the latest available observations of a resource's current
	// state.
	Conditions *[]Conditions `json:"conditions,omitempty"`
}
