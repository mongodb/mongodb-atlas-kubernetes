// Code generated by crd2go. DO NOT EDIT.

package v1

import metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"

func init() {
	SchemeBuilder.Register(&Group{})
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

type Group struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   GroupSpec   `json:"spec,omitempty"`
	Status GroupStatus `json:"status,omitempty"`
}

type GroupSpec struct {
	// V20231115 The spec of the group resource for version v20231115.
	V20231115 *GroupSpecV20231115 `json:"v20231115,omitempty"`
}

type GroupSpecV20231115 struct {
	// Entry The entry fields of the group resource spec. These fields can be set for
	// creating and updating groups.
	Entry *GroupSpecV20231115Entry `json:"entry,omitempty"`

	// Parameters The parameter fields of the group resource spec. These fields are
	// used when creating groups only.
	Parameters *GroupSpecV20231115Parameters `json:"parameters,omitempty"`
}

type GroupSpecV20231115Entry struct {
	// Name Human-readable label that identifies the project included in the MongoDB
	// Cloud organization.
	Name string `json:"name"`

	// OrgId Unique 24-hexadecimal digit string that identifies the MongoDB Cloud
	// organization to which the project belongs.
	OrgId string `json:"orgId"`

	/*
	   RegionUsageRestrictions Applies to Atlas for Government only.

	   In Commercial Atlas, this field will be rejected in requests and missing in responses.

	   This field sets restrictions on available regions in the project.

	   | Value                             | Available Regions |
	   |-----------------------------------|------------|
	   | `COMMERCIAL_FEDRAMP_REGIONS_ONLY` | Only allows deployments in FedRAMP Moderate regions.|
	   | `GOV_REGIONS_ONLY`                | Only allows deployments in GovCloud regions.|
	*/
	RegionUsageRestrictions *string `json:"regionUsageRestrictions,omitempty"`

	// Tags List that contains key-value pairs between 1 to 255 characters in length
	// for tagging and categorizing the project.
	Tags *[]GroupSpecV20231115EntryTags `json:"tags,omitempty"`

	// WithDefaultAlertsSettings Flag that indicates whether to create the project with
	// default alert settings.
	WithDefaultAlertsSettings *bool `json:"withDefaultAlertsSettings,omitempty"`
}

type GroupSpecV20231115EntryTags struct {
	// Key Constant that defines the set of the tag. For example, `environment` in the
	// `environment : production` tag.
	Key string `json:"key"`

	// Value Variable that belongs to the set of the tag. For example, `production` in
	// the `environment : production` tag.
	Value string `json:"value"`
}

type GroupSpecV20231115Parameters struct {
	// ProjectOwnerId Unique 24-hexadecimal digit string that identifies the MongoDB
	// Cloud user to whom to grant the Project Owner role on the specified project. If
	// you set this parameter, it overrides the default value of the oldest
	// Organization Owner.
	ProjectOwnerId *string `json:"projectOwnerId,omitempty"`
}

type GroupStatus struct {
	// Conditions Represents the latest available observations of a resource's current
	// state.
	Conditions *[]GroupStatusConditions `json:"conditions,omitempty"`

	// V20231115 The last observed Atlas state of the group resource for version
	// v20231115.
	V20231115 *GroupStatusV20231115 `json:"v20231115,omitempty"`
}

type GroupStatusConditions struct {
	// LastTransitionTime Last time the condition transitioned from one status to
	// another.
	LastTransitionTime *string `json:"lastTransitionTime,omitempty"`

	// Message A human readable message indicating details about the transition.
	Message *string `json:"message,omitempty"`

	// ObservedGeneration observedGeneration represents the .metadata.generation that
	// the condition was set based upon.
	ObservedGeneration *int `json:"observedGeneration,omitempty"`

	// Reason The reason for the condition's last transition.
	Reason *string `json:"reason,omitempty"`

	// Status Status of the condition, one of True, False, Unknown.
	Status string `json:"status"`

	// Type Type of condition.
	Type string `json:"type"`
}

type GroupStatusV20231115 struct {
	// ClusterCount Quantity of MongoDB Cloud clusters deployed in this project.
	ClusterCount int `json:"clusterCount"`

	// Created Date and time when MongoDB Cloud created this project. This parameter
	// expresses its value in the ISO 8601 timestamp format in UTC.
	Created string `json:"created"`

	// Id Unique 24-hexadecimal digit string that identifies the MongoDB Cloud project.
	Id *string `json:"id,omitempty"`
}
