// Code generated by crd2go. DO NOT EDIT.

package v1

import (
	k8s "github.com/josvazg/crd2go/k8s"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

func init() {
	SchemeBuilder.Register(&ThirdPartyIntegration{})
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

type ThirdPartyIntegration struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   ThirdPartyIntegrationSpec   `json:"spec,omitempty"`
	Status ThirdPartyIntegrationStatus `json:"status,omitempty"`
}

type ThirdPartyIntegrationSpec struct {
	// V20250312 The spec of the thirdpartyintegration resource for version v20250312.
	V20250312 *ThirdPartyIntegrationSpecV20250312 `json:"v20250312,omitempty"`
}

type ThirdPartyIntegrationSpecV20250312 struct {
	// Entry The entry fields of the thirdpartyintegration resource spec. These fields
	// can be set for creating and updating thirdpartyintegrations.
	Entry *ThirdPartyIntegrationSpecV20250312Entry `json:"entry,omitempty"`

	/*
	   GroupId Unique 24-hexadecimal digit string that identifies your project. Use the [/groups](#tag/Projects/operation/listProjects) endpoint to retrieve all projects to which the authenticated user has access.

	   **NOTE**: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.
	*/
	GroupId *string `json:"groupId,omitempty"`

	/*
	   GroupRef A reference to a "Group" resource.
	   The value of "$.status.v20250312.groupId" will be used to set "groupId".
	   Mutually exclusive with the "groupId" property.
	*/
	GroupRef *k8s.LocalReference `json:"groupRef,omitempty"`

	// IntegrationType Human-readable label that identifies the service which you want
	// to integrate with MongoDB Cloud.
	IntegrationType string `json:"integrationType"`
}

type ThirdPartyIntegrationSpecV20250312Entry struct {
	// AccountId Unique 40-hexadecimal digit string that identifies your New Relic
	// account.
	AccountId *string `json:"accountId,omitempty"`

	/*
	   ApiKeySecretRef SENSITIVE FIELD

	   Reference to a secret containing data for the "apiKey" field:

	   Key that allows MongoDB Cloud to access your VictorOps account.

	   **NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:

	   * View or edit the alert through the Atlas UI.

	   * Query the alert for the notification through the Atlas Administration API.
	*/
	ApiKeySecretRef *ApiTokenSecretRef `json:"apiKeySecretRef,omitempty"`

	/*
	   ApiTokenSecretRef SENSITIVE FIELD

	   Reference to a secret containing data for the "apiToken" field:

	   Key that allows MongoDB Cloud to access your Slack account.

	   **NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:

	   * View or edit the alert through the Atlas UI.

	   * Query the alert for the notification through the Atlas Administration API.

	   **IMPORTANT**: Slack integrations now use the OAuth2 verification method and must  be initially configured, or updated from a legacy integration, through the Atlas  third-party service integrations page. Legacy tokens will soon no longer be  supported.
	*/
	ApiTokenSecretRef *ApiTokenSecretRef `json:"apiTokenSecretRef,omitempty"`

	// ChannelName Name of the Slack channel to which MongoDB Cloud sends alert
	// notifications.
	ChannelName *string `json:"channelName,omitempty"`

	// Enabled Flag that indicates whether someone has activated the Prometheus
	// integration.
	Enabled *bool `json:"enabled,omitempty"`

	/*
	   LicenseKeySecretRef SENSITIVE FIELD

	   Reference to a secret containing data for the "licenseKey" field:

	   Unique 40-hexadecimal digit string that identifies your New Relic license.

	   **IMPORTANT**: Effective Wednesday, June 16th, 2021, New Relic no longer supports the plugin-based integration with MongoDB. We do not recommend that you sign up for the plugin-based integration.
	   Consider configuring an alternative monitoring integration before June 16th to maintain visibility into your MongoDB deployments.
	*/
	LicenseKeySecretRef *ApiTokenSecretRef `json:"licenseKeySecretRef,omitempty"`

	/*
	   MicrosoftTeamsWebhookUrlSecretRef SENSITIVE FIELD

	   Reference to a secret containing data for the "microsoftTeamsWebhookUrl" field:

	   Endpoint web address of the Microsoft Teams webhook to which MongoDB Cloud sends notifications.

	   **NOTE**: When you view or edit the alert for a Microsoft Teams notification, the URL appears partially redacted.
	*/
	MicrosoftTeamsWebhookUrlSecretRef *ApiTokenSecretRef `json:"microsoftTeamsWebhookUrlSecretRef,omitempty"`

	/*
	   PasswordSecretRef SENSITIVE FIELD

	   Reference to a secret containing data for the "password" field:

	   Password needed to allow MongoDB Cloud to access your Prometheus account.
	*/
	PasswordSecretRef *ApiTokenSecretRef `json:"passwordSecretRef,omitempty"`

	/*
	   ReadTokenSecretRef SENSITIVE FIELD

	   Reference to a secret containing data for the "readToken" field:

	   Query key used to access your New Relic account.
	*/
	ReadTokenSecretRef *ApiTokenSecretRef `json:"readTokenSecretRef,omitempty"`

	// Region PagerDuty region that indicates the API Uniform Resource Locator (URL) to
	// use.
	Region *string `json:"region,omitempty"`

	/*
	   RoutingKeySecretRef SENSITIVE FIELD

	   Reference to a secret containing data for the "routingKey" field:

	   Routing key associated with your Splunk On-Call account.
	*/
	RoutingKeySecretRef *ApiTokenSecretRef `json:"routingKeySecretRef,omitempty"`

	/*
	   SecretSecretRef SENSITIVE FIELD

	   Reference to a secret containing data for the "secret" field:

	   An optional field returned if your webhook is configured with a secret.

	   **NOTE**: When you view or edit the alert for a webhook notification, the secret appears completely redacted.
	*/
	SecretSecretRef *ApiTokenSecretRef `json:"secretSecretRef,omitempty"`

	// SendCollectionLatencyMetrics Toggle sending collection latency metrics that
	// includes database names and collection namesand latency metrics on reads,
	// writes, commands, and transactions.
	SendCollectionLatencyMetrics *bool `json:"sendCollectionLatencyMetrics,omitempty"`

	// SendDatabaseMetrics Toggle sending database metrics that includes database names
	// and metrics on the number of collections, storage size, and index size.
	SendDatabaseMetrics *bool `json:"sendDatabaseMetrics,omitempty"`

	// SendUserProvidedResourceTags Toggle sending user provided group and cluster
	// resource tags with the datadog metrics.
	SendUserProvidedResourceTags *bool `json:"sendUserProvidedResourceTags,omitempty"`

	// ServiceDiscovery Desired method to discover the Prometheus service.
	ServiceDiscovery *string `json:"serviceDiscovery,omitempty"`

	/*
	   ServiceKeySecretRef SENSITIVE FIELD

	   Reference to a secret containing data for the "serviceKey" field:

	   Service key associated with your PagerDuty account.

	   **NOTE**: After you create a notification which requires an API or integration key, the key appears partially redacted when you:

	   * View or edit the alert through the Atlas UI.

	   * Query the alert for the notification through the Atlas Administration API.
	*/
	ServiceKeySecretRef *ApiTokenSecretRef `json:"serviceKeySecretRef,omitempty"`

	// TeamName Human-readable label that identifies your Slack team. Set this
	// parameter when you configure a legacy Slack integration.
	TeamName *string `json:"teamName,omitempty"`

	// Type Human-readable label that identifies the service to which you want to
	// integrate with MongoDB Cloud. The value must match the third-party service
	// integration type.
	Type *string `json:"type,omitempty"`

	/*
	   UrlSecretRef SENSITIVE FIELD

	   Reference to a secret containing data for the "url" field:

	   Endpoint web address to which MongoDB Cloud sends notifications.

	   **NOTE**: When you view or edit the alert for a webhook notification, the URL appears partially redacted.
	*/
	UrlSecretRef *ApiTokenSecretRef `json:"urlSecretRef,omitempty"`

	// Username Human-readable label that identifies your Prometheus incoming webhook.
	Username *string `json:"username,omitempty"`

	/*
	   WriteTokenSecretRef SENSITIVE FIELD

	   Reference to a secret containing data for the "writeToken" field:

	   Insert key associated with your New Relic account.
	*/
	WriteTokenSecretRef *ApiTokenSecretRef `json:"writeTokenSecretRef,omitempty"`
}

type ThirdPartyIntegrationStatus struct {
	// Conditions Represents the latest available observations of a resource's current
	// state.
	Conditions *[]metav1.Condition `json:"conditions,omitempty"`

	// V20250312 The last observed Atlas state of the thirdpartyintegration resource
	// for version v20250312.
	V20250312 *ThirdPartyIntegrationStatusV20250312 `json:"v20250312,omitempty"`
}

type ThirdPartyIntegrationStatusV20250312 struct {
	// Id Integration id.
	Id *string `json:"id,omitempty"`

	// SendCollectionLatencyMetrics Toggle sending collection latency metrics that
	// includes database names and collection namesand latency metrics on reads,
	// writes, commands, and transactions.
	SendCollectionLatencyMetrics *bool `json:"sendCollectionLatencyMetrics,omitempty"`

	// SendDatabaseMetrics Toggle sending database metrics that includes database names
	// and metrics on the number of collections, storage size, and index size.
	SendDatabaseMetrics *bool `json:"sendDatabaseMetrics,omitempty"`

	// SendUserProvidedResourceTags Toggle sending user provided group and cluster
	// resource tags with the datadog metrics.
	SendUserProvidedResourceTags *bool `json:"sendUserProvidedResourceTags,omitempty"`

	// Type Human-readable label that identifies the service to which you want to
	// integrate with MongoDB Cloud. The value must match the third-party service
	// integration type.
	Type *string `json:"type,omitempty"`
}
