// Code generated by crd2go. DO NOT EDIT.

package v1

import metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"

func init() {
	SchemeBuilder.Register(&Cluster{})
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

type Cluster struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   ClusterSpec   `json:"spec,omitempty"`
	Status ClusterStatus `json:"status,omitempty"`
}

type ClusterSpec struct {
	// V20231115 The spec of the cluster resource for version v20231115.
	V20231115 *ClusterSpecV20231115 `json:"v20231115,omitempty"`
}

type ClusterSpecV20231115 struct {
	// Entry The entry fields of the cluster resource spec. These fields can be set for
	// creating and updating clusters.
	Entry *ClusterSpecV20231115Entry `json:"entry,omitempty"`

	// Parameters The parameter fields of the cluster resource spec. These fields are
	// used when creating clusters only.
	Parameters *NetworkPermissionEntriesSpecV20250312Parameters `json:"parameters,omitempty"`
}

type ClusterSpecV20231115Entry struct {
	// AcceptDataRisksAndForceReplicaSetReconfig If reconfiguration is necessary to
	// regain a primary due to a regional outage, submit this field alongside your
	// topology reconfiguration to request a new regional outage resistant topology.
	// Forced reconfigurations during an outage of the majority of electable nodes
	// carry a risk of data loss if replicated writes (even majority committed writes)
	// have not been replicated to the new primary node. MongoDB Atlas docs contain
	// more information. To proceed with an operation which carries that risk, set
	// **acceptDataRisksAndForceReplicaSetReconfig** to the current date.
	AcceptDataRisksAndForceReplicaSetReconfig *string `json:"acceptDataRisksAndForceReplicaSetReconfig,omitempty"`

	// BackupEnabled Flag that indicates whether the cluster can perform backups. If
	// set to `true`, the cluster can perform backups. You must set this value to
	// `true` for NVMe clusters. Backup uses [Cloud
	// Backups](https://docs.atlas.mongodb.com/backup/cloud-backup/overview/) for
	// dedicated clusters and [Shared Cluster
	// Backups](https://docs.atlas.mongodb.com/backup/shared-tier/overview/) for tenant
	// clusters. If set to `false`, the cluster doesn't use backups.
	BackupEnabled *bool `json:"backupEnabled,omitempty"`

	// BiConnector Settings needed to configure the MongoDB Connector for Business
	// Intelligence for this cluster.
	BiConnector *BiConnector `json:"biConnector,omitempty"`

	// ClusterType Configuration of nodes that comprise the cluster.
	ClusterType *string `json:"clusterType,omitempty"`

	// DiskSizeGB Storage capacity that the host's root volume possesses expressed in
	// gigabytes. Increase this number to add capacity. MongoDB Cloud requires this
	// parameter if you set **replicationSpecs**. If you specify a disk size below the
	// minimum (10 GB), this parameter defaults to the minimum disk size value. Storage
	// charge calculations depend on whether you choose the default value or a custom
	// value. The maximum value for disk storage cannot exceed 50 times the maximum RAM
	// for the selected cluster. If you require more storage space, consider upgrading
	// your cluster to a higher tier.
	DiskSizeGB *float64 `json:"diskSizeGB,omitempty"`

	// DiskWarmingMode Disk warming mode selection.
	DiskWarmingMode *string `json:"diskWarmingMode,omitempty"`

	// EncryptionAtRestProvider Cloud service provider that manages your customer keys
	// to provide an additional layer of encryption at rest for the cluster. To enable
	// customer key management for encryption at rest, the cluster
	// **replicationSpecs[n].regionConfigs[m].{type}Specs.instanceSize** setting must
	// be `M10` or higher and `"backupEnabled" : false` or omitted entirely.
	EncryptionAtRestProvider *string `json:"encryptionAtRestProvider,omitempty"`

	/*
	   Labels Collection of key-value pairs between 1 to 255 characters in length that tag and categorize the cluster. The MongoDB Cloud console doesn't display your labels.

	   Cluster labels are deprecated and will be removed in a future release. We strongly recommend that you use [resource tags](https://dochub.mongodb.org/core/add-cluster-tag-atlas) instead.
	*/
	Labels *[]Tags `json:"labels,omitempty"`

	// MongoDBMajorVersion Major MongoDB version of the cluster. MongoDB Cloud deploys
	// the cluster with the latest stable release of the specified version.
	MongoDBMajorVersion *string `json:"mongoDBMajorVersion,omitempty"`

	// Name Human-readable label that identifies the advanced cluster.
	Name *string `json:"name,omitempty"`

	// Paused Flag that indicates whether the cluster is paused.
	Paused *bool `json:"paused,omitempty"`

	// PitEnabled Flag that indicates whether the cluster uses continuous cloud
	// backups.
	PitEnabled *bool `json:"pitEnabled,omitempty"`

	// ReplicationSpecs List of settings that configure your cluster regions. For
	// Global Clusters, each object in the array represents a zone where your clusters
	// nodes deploy. For non-Global sharded clusters and replica sets, this array has
	// one object representing where your clusters nodes deploy.
	ReplicationSpecs *[]ReplicationSpecs `json:"replicationSpecs,omitempty"`

	// RootCertType Root Certificate Authority that MongoDB Cloud cluster uses. MongoDB
	// Cloud supports Internet Security Research Group.
	RootCertType *string `json:"rootCertType,omitempty"`

	// Tags List that contains key-value pairs between 1 to 255 characters in length
	// for tagging and categorizing the cluster.
	Tags *[]Tags `json:"tags,omitempty"`

	// TerminationProtectionEnabled Flag that indicates whether termination protection
	// is enabled on the cluster. If set to `true`, MongoDB Cloud won't delete the
	// cluster. If set to `false`, MongoDB Cloud will delete the cluster.
	TerminationProtectionEnabled *bool `json:"terminationProtectionEnabled,omitempty"`

	// VersionReleaseSystem Method by which the cluster maintains the MongoDB versions.
	// If value is `CONTINUOUS`, you must not specify **mongoDBMajorVersion**.
	VersionReleaseSystem *string `json:"versionReleaseSystem,omitempty"`
}

type BiConnector struct {
	// Enabled Flag that indicates whether MongoDB Connector for Business Intelligence
	// is enabled on the specified cluster.
	Enabled *bool `json:"enabled,omitempty"`

	// ReadPreference Data source node designated for the MongoDB Connector for
	// Business Intelligence on MongoDB Cloud. The MongoDB Connector for Business
	// Intelligence on MongoDB Cloud reads data from the primary, secondary, or
	// analytics node based on your read preferences. Defaults to `ANALYTICS` node, or
	// `SECONDARY` if there are no `ANALYTICS` nodes.
	ReadPreference *string `json:"readPreference,omitempty"`
}

type ReplicationSpecs struct {
	/*
	   NumShards Positive integer that specifies the number of shards to deploy in each specified zone. If you set this value to `1` and **clusterType** is `SHARDED`, MongoDB Cloud deploys a single-shard sharded cluster. Don't create a sharded cluster with a single shard for production environments. Single-shard sharded clusters don't provide the same benefits as multi-shard configurations.

	    If you are upgrading a replica set to a sharded cluster, you cannot increase the number of shards in the same update request.  You should wait until after the cluster has completed upgrading to sharded and you have reconnected all application clients to the MongoDB router before adding additional shards. Otherwise, your data might become inconsistent once MongoDB Cloud begins distributing data across shards.
	*/
	NumShards *int `json:"numShards,omitempty"`

	/*
	   RegionConfigs Hardware specifications for nodes set for a given region. Each **regionConfigs** object describes the region's priority in elections and the number and type of MongoDB nodes that MongoDB Cloud deploys to the region. Each **regionConfigs** object must have either an **analyticsSpecs** object, **electableSpecs** object, or **readOnlySpecs** object. Tenant clusters only require **electableSpecs. Dedicated** clusters can specify any of these specifications, but must have at least one **electableSpecs** object within a **replicationSpec**. Every hardware specification must use the same **instanceSize**.

	   **Example:**

	   If you set `"replicationSpecs[n].regionConfigs[m].analyticsSpecs.instanceSize" : "M30"`, set `"replicationSpecs[n].regionConfigs[m].electableSpecs.instanceSize" : `"M30"` if you have electable nodes and `"replicationSpecs[n].regionConfigs[m].readOnlySpecs.instanceSize" : `"M30"` if you have read-only nodes.
	*/
	RegionConfigs *[]RegionConfigs `json:"regionConfigs,omitempty"`

	// ZoneName Human-readable label that identifies the zone in a Global Cluster.
	// Provide this value only if `"clusterType" : "GEOSHARDED"`.
	ZoneName *string `json:"zoneName,omitempty"`
}

type RegionConfigs struct {
	// AnalyticsAutoScaling Options that determine how this cluster handles resource
	// scaling.
	AnalyticsAutoScaling *AnalyticsAutoScaling `json:"analyticsAutoScaling,omitempty"`

	// AnalyticsSpecs Hardware specifications for read-only nodes in the region.
	// Read-only nodes can never become the primary member, but can enable local
	// reads.If you don't specify this parameter, no read-only nodes are deployed to
	// the region.
	AnalyticsSpecs *AnalyticsSpecs `json:"analyticsSpecs,omitempty"`

	// AutoScaling Options that determine how this cluster handles resource scaling.
	AutoScaling *AnalyticsAutoScaling `json:"autoScaling,omitempty"`

	// BackingProviderName Cloud service provider on which MongoDB Cloud provisioned
	// the multi-tenant cluster. The resource returns this parameter when
	// **providerName** is `TENANT` and **electableSpecs.instanceSize** is `M0`, `M2`
	// or `M5`.
	BackingProviderName *string `json:"backingProviderName,omitempty"`

	// ElectableSpecs Hardware specifications for all electable nodes deployed in the
	// region. Electable nodes can become the primary and can enable local reads. If
	// you don't specify this option, MongoDB Cloud deploys no electable nodes to the
	// region.
	ElectableSpecs *AnalyticsSpecs `json:"electableSpecs,omitempty"`

	/*
	   Priority Precedence is given to this region when a primary election occurs. If your **regionConfigs** has only **readOnlySpecs**, **analyticsSpecs**, or both, set this value to `0`. If you have multiple **regionConfigs** objects (your cluster is multi-region or multi-cloud), they must have priorities in descending order. The highest priority is `7`.

	   **Example:** If you have three regions, their priorities would be `7`, `6`, and `5` respectively. If you added two more regions for supporting electable nodes, the priorities of those regions would be `4` and `3` respectively.
	*/
	Priority *int `json:"priority,omitempty"`

	// ProviderName Cloud service provider on which MongoDB Cloud provisions the hosts.
	// Set dedicated clusters to `AWS`, `GCP`, `AZURE` or `TENANT`.
	ProviderName *string `json:"providerName,omitempty"`

	// ReadOnlySpecs Hardware specifications for read-only nodes in the region.
	// Read-only nodes can never become the primary member, but can enable local
	// reads.If you don't specify this parameter, no read-only nodes are deployed to
	// the region.
	ReadOnlySpecs *AnalyticsSpecs `json:"readOnlySpecs,omitempty"`

	// RegionName Physical location of your MongoDB cluster nodes. The region you
	// choose can affect network latency for clients accessing your databases. The
	// region name is only returned in the response for single-region clusters. When
	// MongoDB Cloud deploys a dedicated cluster, it checks if a VPC or VPC connection
	// exists for that provider and region. If not, MongoDB Cloud creates them as part
	// of the deployment. It assigns the VPC a Classless Inter-Domain Routing (CIDR)
	// block. To limit a new VPC peering connection to one Classless Inter-Domain
	// Routing (CIDR) block and region, create the connection first. Deploy the cluster
	// after the connection starts. GCP Clusters and Multi-region clusters require one
	// VPC peering connection for each region. MongoDB nodes can use only the peering
	// connection that resides in the same region as the nodes to communicate with the
	// peered VPC.
	RegionName *string `json:"regionName,omitempty"`
}

type AnalyticsAutoScaling struct {
	// Compute Options that determine how this cluster handles CPU scaling.
	Compute *Compute `json:"compute,omitempty"`

	// DiskGB Setting that enables disk auto-scaling.
	DiskGB *DiskGB `json:"diskGB,omitempty"`
}

type Compute struct {
	/*
	   Enabled Flag that indicates whether someone enabled instance size auto-scaling.

	   - Set to `true` to enable instance size auto-scaling. If enabled, you must specify a value for **replicationSpecs[n].regionConfigs[m].autoScaling.compute.maxInstanceSize**.
	   - Set to `false` to disable instance size automatic scaling.
	*/
	Enabled *bool `json:"enabled,omitempty"`

	// MaxInstanceSize Minimum instance size to which your cluster can automatically
	// scale. MongoDB Cloud requires this parameter if
	// `"replicationSpecs[n].regionConfigs[m].autoScaling.compute.scaleDownEnabled" :
	// true`.
	MaxInstanceSize *string `json:"maxInstanceSize,omitempty"`

	// MinInstanceSize Minimum instance size to which your cluster can automatically
	// scale. MongoDB Cloud requires this parameter if
	// `"replicationSpecs[n].regionConfigs[m].autoScaling.compute.scaleDownEnabled" :
	// true`.
	MinInstanceSize *string `json:"minInstanceSize,omitempty"`

	// ScaleDownEnabled Flag that indicates whether the instance size may scale down.
	// MongoDB Cloud requires this parameter if
	// `"replicationSpecs[n].regionConfigs[m].autoScaling.compute.enabled" : true`. If
	// you enable this option, specify a value for
	// **replicationSpecs[n].regionConfigs[m].autoScaling.compute.minInstanceSize**.
	ScaleDownEnabled *bool `json:"scaleDownEnabled,omitempty"`
}

type DiskGB struct {
	// Enabled Flag that indicates whether this cluster enables disk auto-scaling. The
	// maximum memory allowed for the selected cluster tier and the oplog size can
	// limit storage auto-scaling.
	Enabled *bool `json:"enabled,omitempty"`
}

type AnalyticsSpecs struct {
	/*
	   DiskIOPS Target throughput desired for storage attached to your AWS-provisioned cluster. Change this parameter only if you:

	   - set `"replicationSpecs[n].regionConfigs[m].providerName" : "AWS"`.
	   - set `"replicationSpecs[n].regionConfigs[m].electableSpecs.instanceSize" : "M30"` or greater not including `Mxx_NVME` tiers.

	   The maximum input/output operations per second (IOPS) depend on the selected **.instanceSize** and **.diskSizeGB**.
	   This parameter defaults to the cluster tier's standard IOPS value.
	   Changing this value impacts cluster cost.
	   MongoDB Cloud enforces minimum ratios of storage capacity to system memory for given cluster tiers. This keeps cluster performance consistent with large datasets.

	   - Instance sizes `M10` to `M40` have a ratio of disk capacity to system memory of 60:1.
	   - Instance sizes greater than `M40` have a ratio of 120:1.
	*/
	DiskIOPS *int `json:"diskIOPS,omitempty"`

	/*
	   EbsVolumeType Type of storage you want to attach to your AWS-provisioned cluster.

	   - `STANDARD` volume types can't exceed the default input/output operations per second (IOPS) rate for the selected volume size.

	   - `PROVISIONED` volume types must fall within the allowable IOPS range for the selected volume size. You must set this value to (`PROVISIONED`) for NVMe clusters.
	*/
	EbsVolumeType *string `json:"ebsVolumeType,omitempty"`

	// InstanceSize Hardware specification for the instance sizes in this region. Each
	// instance size has a default storage and memory capacity. The instance size you
	// select applies to all the data-bearing hosts in your instance size.
	InstanceSize *string `json:"instanceSize,omitempty"`

	// NodeCount Number of nodes of the given type for MongoDB Cloud to deploy to the
	// region.
	NodeCount *int `json:"nodeCount,omitempty"`
}

type ClusterStatus struct {
	// Conditions Represents the latest available observations of a resource's current
	// state.
	Conditions *[]Conditions `json:"conditions,omitempty"`

	// V20231115 The last observed Atlas state of the cluster resource for version
	// v20231115.
	V20231115 *ClusterStatusV20231115 `json:"v20231115,omitempty"`
}

type ClusterStatusV20231115 struct {
	// ConnectionStrings Collection of Uniform Resource Locators that point to the
	// MongoDB database.
	ConnectionStrings *ConnectionStrings `json:"connectionStrings,omitempty"`

	// CreateDate Date and time when MongoDB Cloud created this cluster. This parameter
	// expresses its value in ISO 8601 format in UTC.
	CreateDate *string `json:"createDate,omitempty"`

	// GroupId Unique 24-hexadecimal character string that identifies the project.
	GroupId *string `json:"groupId,omitempty"`

	// Id Unique 24-hexadecimal digit string that identifies the replication object for
	// a zone in a Global Cluster. If you include existing zones in the request, you
	// must specify this parameter. If you add a new zone to an existing Global
	// Cluster, you may specify this parameter. The request deletes any existing zones
	// in a Global Cluster that you exclude from the request.
	Id *string `json:"id,omitempty"`

	// MongoDBVersion Version of MongoDB that the cluster runs.
	MongoDBVersion *string `json:"mongoDBVersion,omitempty"`

	// ReplicationSpecs List of settings that configure your cluster regions. For
	// Global Clusters, each object in the array represents a zone where your clusters
	// nodes deploy. For non-Global sharded clusters and replica sets, this array has
	// one object representing where your clusters nodes deploy.
	ReplicationSpecs *[]V20231115ReplicationSpecs `json:"replicationSpecs,omitempty"`

	// StateName Human-readable label that indicates the current operating condition of
	// this cluster.
	StateName *string `json:"stateName,omitempty"`
}

type ConnectionStrings struct {
	// AwsPrivateLink Private endpoint-aware connection strings that use AWS-hosted
	// clusters with Amazon Web Services (AWS) PrivateLink. Each key identifies an
	// Amazon Web Services (AWS) interface endpoint. Each value identifies the related
	// `mongodb://` connection string that you use to connect to MongoDB Cloud through
	// the interface endpoint that the key names.
	AwsPrivateLink *V20250312Parameters `json:"awsPrivateLink,omitempty"`

	// AwsPrivateLinkSrv Private endpoint-aware connection strings that use AWS-hosted
	// clusters with Amazon Web Services (AWS) PrivateLink. Each key identifies an
	// Amazon Web Services (AWS) interface endpoint. Each value identifies the related
	// `mongodb://` connection string that you use to connect to Atlas through the
	// interface endpoint that the key names.
	AwsPrivateLinkSrv *V20250312Parameters `json:"awsPrivateLinkSrv,omitempty"`

	// Private Network peering connection strings for each interface Virtual Private
	// Cloud (VPC) endpoint that you configured to connect to this cluster. This
	// connection string uses the `mongodb+srv://` protocol. The resource returns this
	// parameter once someone creates a network peering connection to this cluster.
	// This protocol tells the application to look up the host seed list in the Domain
	// Name System (DNS). This list synchronizes with the nodes in a cluster. If the
	// connection string uses this Uniform Resource Identifier (URI) format, you don't
	// need to append the seed list or change the URI if the nodes change. Use this URI
	// format if your driver supports it. If it doesn't, use connectionStrings.private.
	// For Amazon Web Services (AWS) clusters, this resource returns this parameter
	// only if you enable custom DNS.
	Private *string `json:"private,omitempty"`

	// PrivateEndpoint List of private endpoint-aware connection strings that you can
	// use to connect to this cluster through a private endpoint. This parameter
	// returns only if you deployed a private endpoint to all regions to which you
	// deployed this clusters' nodes.
	PrivateEndpoint *[]PrivateEndpoint `json:"privateEndpoint,omitempty"`

	// PrivateSrv Network peering connection strings for each interface Virtual Private
	// Cloud (VPC) endpoint that you configured to connect to this cluster. This
	// connection string uses the `mongodb+srv://` protocol. The resource returns this
	// parameter when someone creates a network peering connection to this cluster.
	// This protocol tells the application to look up the host seed list in the Domain
	// Name System (DNS). This list synchronizes with the nodes in a cluster. If the
	// connection string uses this Uniform Resource Identifier (URI) format, you don't
	// need to append the seed list or change the Uniform Resource Identifier (URI) if
	// the nodes change. Use this Uniform Resource Identifier (URI) format if your
	// driver supports it. If it doesn't, use `connectionStrings.private`. For Amazon
	// Web Services (AWS) clusters, this parameter returns only if you [enable custom
	// DNS](https://docs.atlas.mongodb.com/reference/api/aws-custom-dns-update/).
	PrivateSrv *string `json:"privateSrv,omitempty"`

	// Standard Public connection string that you can use to connect to this cluster.
	// This connection string uses the `mongodb://` protocol.
	Standard *string `json:"standard,omitempty"`

	// StandardSrv Public connection string that you can use to connect to this
	// cluster. This connection string uses the `mongodb+srv://` protocol.
	StandardSrv *string `json:"standardSrv,omitempty"`
}

type V20250312Parameters struct{}

type PrivateEndpoint struct {
	// ConnectionString Private endpoint-aware connection string that uses the
	// `mongodb://` protocol to connect to MongoDB Cloud through a private endpoint.
	ConnectionString *string `json:"connectionString,omitempty"`

	// Endpoints List that contains the private endpoints through which you connect to
	// MongoDB Cloud when you use
	// **connectionStrings.privateEndpoint[n].connectionString** or
	// **connectionStrings.privateEndpoint[n].srvConnectionString**.
	Endpoints *[]Endpoints `json:"endpoints,omitempty"`

	// SrvConnectionString Private endpoint-aware connection string that uses the
	// `mongodb+srv://` protocol to connect to MongoDB Cloud through a private
	// endpoint. The `mongodb+srv` protocol tells the driver to look up the seed list
	// of hosts in the Domain Name System (DNS). This list synchronizes with the nodes
	// in a cluster. If the connection string uses this Uniform Resource Identifier
	// (URI) format, you don't need to append the seed list or change the Uniform
	// Resource Identifier (URI) if the nodes change. Use this Uniform Resource
	// Identifier (URI) format if your application supports it. If it doesn't, use
	// connectionStrings.privateEndpoint[n].connectionString.
	SrvConnectionString *string `json:"srvConnectionString,omitempty"`

	// SrvShardOptimizedConnectionString Private endpoint-aware connection string
	// optimized for sharded clusters that uses the `mongodb+srv://` protocol to
	// connect to MongoDB Cloud through a private endpoint. If the connection string
	// uses this Uniform Resource Identifier (URI) format, you don't need to change the
	// Uniform Resource Identifier (URI) if the nodes change. Use this Uniform Resource
	// Identifier (URI) format if your application and Atlas cluster supports it. If it
	// doesn't, use and consult the documentation for
	// connectionStrings.privateEndpoint[n].srvConnectionString.
	SrvShardOptimizedConnectionString *string `json:"srvShardOptimizedConnectionString,omitempty"`

	// Type MongoDB process type to which your application connects. Use `MONGOD` for
	// replica sets and `MONGOS` for sharded clusters.
	Type *string `json:"type,omitempty"`
}

type Endpoints struct {
	// EndpointId Unique string that the cloud provider uses to identify the private
	// endpoint.
	EndpointId *string `json:"endpointId,omitempty"`

	// ProviderName Cloud provider in which MongoDB Cloud deploys the private endpoint.
	ProviderName *string `json:"providerName,omitempty"`

	// Region Region where the private endpoint is deployed.
	Region *string `json:"region,omitempty"`
}

type V20231115ReplicationSpecs struct {
	// Id Unique 24-hexadecimal digit string that identifies the replication object for
	// a zone in a Multi-Cloud Cluster. If you include existing zones in the request,
	// you must specify this parameter. If you add a new zone to an existing
	// Multi-Cloud Cluster, you may specify this parameter. The request deletes any
	// existing zones in the Multi-Cloud Cluster that you exclude from the request.
	Id *string `json:"id,omitempty"`
}
